{
  "api/GameSave.GameSaveManager.html": {
    "href": "api/GameSave.GameSaveManager.html",
    "title": "Class GameSaveManager | |",
    "keywords": "Class GameSaveManager Namespace GameSave public class GameSaveManager Inheritance object GameSaveManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CloseGameSaveHandles() public void CloseGameSaveHandles() DeleteContainer(string, UnityAction<int>) public void DeleteContainer(string containerName, UnityAction<int> onDeleteContainercomplete) Parameters containerName string onDeleteContainercomplete UnityAction<int> GetOrCreateContainer(string, UnityAction<int>) public void GetOrCreateContainer(string containerName, UnityAction<int> onContainerCreated) Parameters containerName string onContainerCreated UnityAction<int> Initialize(XUserHandle, string, bool, UnityAction<int>) public void Initialize(XUserHandle userHandle, string scid, bool syncOnDemand, UnityAction<int> onInitializationComplete) Parameters userHandle XUserHandle scid string syncOnDemand bool onInitializationComplete UnityAction<int> LoadGame(string, UnityAction<int, XGameSaveBlob[]>) public void LoadGame(string blobBufferName, UnityAction<int, XGameSaveBlob[]> onLoadGameCompleted) Parameters blobBufferName string onLoadGameCompleted UnityAction<int, XGameSaveBlob[]> LoadGame(string[], UnityAction<int, XGameSaveBlob[]>) public void LoadGame(string[] blobBufferNames, UnityAction<int, XGameSaveBlob[]> onLoadGameCompleted) Parameters blobBufferNames string[] onLoadGameCompleted UnityAction<int, XGameSaveBlob[]> QuerySpaceQuota(UnityAction<int, long>) public void QuerySpaceQuota(UnityAction<int, long> onSpaceQuotaRequested) Parameters onSpaceQuotaRequested UnityAction<int, long> SaveGame(string, string, byte[], UnityAction<int>) public void SaveGame(string displayName, string blobBufferName, byte[] blobData, UnityAction<int> onSaveGameCompleted) Parameters displayName string blobBufferName string blobData byte[] onSaveGameCompleted UnityAction<int> SaveGame(string, string[], List<byte[]>, UnityAction<int>) public void SaveGame(string displayName, string[] blobBufferNames, List<byte[]> blobDataList, UnityAction<int> onSaveGameCompleted) Parameters displayName string blobBufferNames string[] blobDataList List<byte[]> onSaveGameCompleted UnityAction<int> StartContainerUpdate(string) public int StartContainerUpdate(string containerDisplayName) Parameters containerDisplayName string Returns int SubmitDataBlobToWrite(string, byte[]) public int SubmitDataBlobToWrite(string blobName, byte[] data) Parameters blobName string data byte[] Returns int SubmitGameSaveUpdate(UnityAction<int>) public void SubmitGameSaveUpdate(UnityAction<int> onSubmitGameSaveComplete) Parameters onSubmitGameSaveComplete UnityAction<int>"
  },
  "api/GameSave.html": {
    "href": "api/GameSave.html",
    "title": "Namespace GameSave | |",
    "keywords": "Namespace GameSave Classes GameSaveManager"
  },
  "api/Studio23.SS2.SaveSystem.XboxCorePc.Core.XboxPCCloudSaveProvider.html": {
    "href": "api/Studio23.SS2.SaveSystem.XboxCorePc.Core.XboxPCCloudSaveProvider.html",
    "title": "Class XboxPCCloudSaveProvider | |",
    "keywords": "Class XboxPCCloudSaveProvider Namespace Studio23.SS2.SaveSystem.XboxCorePc.Core public class XboxPCCloudSaveProvider : AbstractCloudSaveProvider Inheritance object XboxPCCloudSaveProvider Methods DownloadFromCloud(string, string) protected override void DownloadFromCloud(string key, string downloadLocation) Parameters key string downloadLocation string Initialize() protected override void Initialize() UploadToCloud(string, string) protected override void UploadToCloud(string key, string filepath) Parameters key string filepath string"
  },
  "api/Studio23.SS2.SaveSystem.XboxCorePc.Core.html": {
    "href": "api/Studio23.SS2.SaveSystem.XboxCorePc.Core.html",
    "title": "Namespace Studio23.SS2.SaveSystem.XboxCorePc.Core | |",
    "keywords": "Namespace Studio23.SS2.SaveSystem.XboxCorePc.Core Classes XboxPCCloudSaveProvider"
  },
  "api/XGamingRuntime.EquatableHandle.html": {
    "href": "api/XGamingRuntime.EquatableHandle.html",
    "title": "Class EquatableHandle | |",
    "keywords": "Class EquatableHandle Namespace XGamingRuntime public abstract class EquatableHandle Inheritance object EquatableHandle Derived XGameSaveContainerHandle XGameSaveProviderHandle XGameSaveUpdateHandle XPackageInstallationMonitorHandle XStoreContext XStoreLicense XUserHandle XUserSignOutDeferralHandle XblAchievementsResultHandle XblContextHandle XblHttpCallHandle XblMultiplayerEventArgsHandle XblMultiplayerSearchHandle XblMultiplayerSessionHandle XblPresenceRecordHandle XblSocialManagerUserGroupHandle Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. Operators operator ==(EquatableHandle, EquatableHandle) public static bool operator ==(EquatableHandle handle1, EquatableHandle handle2) Parameters handle1 EquatableHandle handle2 EquatableHandle Returns bool operator !=(EquatableHandle, EquatableHandle) public static bool operator !=(EquatableHandle handle1, EquatableHandle handle2) Parameters handle1 EquatableHandle handle2 EquatableHandle Returns bool"
  },
  "api/XGamingRuntime.HR.html": {
    "href": "api/XGamingRuntime.HR.html",
    "title": "Class HR | |",
    "keywords": "Class HR Namespace XGamingRuntime public class HR : HR Inheritance object HR HR Inherited Members HR.S_OK HR.E_INVALIDARG HR.SUCCEEDED(int) HR.FAILED(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.Interop.AsyncHelpers.html": {
    "href": "api/XGamingRuntime.Interop.AsyncHelpers.html",
    "title": "Class AsyncHelpers | |",
    "keywords": "Class AsyncHelpers Namespace XGamingRuntime.Interop public class AsyncHelpers Inheritance object AsyncHelpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods WrapAsyncBlock(XTaskQueueHandle, XAsyncCompletionRoutine) public static XAsyncBlockPtr WrapAsyncBlock(XTaskQueueHandle queue, XAsyncCompletionRoutine callback) Parameters queue XTaskQueueHandle callback XAsyncCompletionRoutine Returns XAsyncBlockPtr"
  },
  "api/XGamingRuntime.Interop.Converters.html": {
    "href": "api/XGamingRuntime.Interop.Converters.html",
    "title": "Class Converters | |",
    "keywords": "Class Converters Namespace XGamingRuntime.Interop public static class Converters Inheritance object Converters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ByteArrayToString(byte[]) public static string ByteArrayToString(byte[] arr) Parameters arr byte[] Returns string ByteArrayToString(byte[], int, int) public static string ByteArrayToString(byte[] arr, int index, int count) Parameters arr byte[] index int count int Returns string BytePointerToString(byte*, int) public static string BytePointerToString(byte* bytePointer, int length) Parameters bytePointer byte* length int Returns string ClassArrayToPtr<ClassType, InteropStructType>(ClassType[], Func<ClassType, DisposableCollection, InteropStructType>, DisposableCollection, out uint) public static nint ClassArrayToPtr<ClassType, InteropStructType>(ClassType[] inputTypes, Func<ClassType, DisposableCollection, InteropStructType> converter, DisposableCollection disposableCollection, out uint arrayCount) Parameters inputTypes ClassType[] converter Func<ClassType, DisposableCollection, InteropStructType> disposableCollection DisposableCollection arrayCount uint Returns nint Type Parameters ClassType InteropStructType ClassArrayToPtr<ClassType, InteropStructType>(ClassType[], Func<ClassType, DisposableCollection, InteropStructType>, DisposableCollection, out SizeT) public static nint ClassArrayToPtr<ClassType, InteropStructType>(ClassType[] inputTypes, Func<ClassType, DisposableCollection, InteropStructType> converter, DisposableCollection disposableCollection, out SizeT arrayCount) Parameters inputTypes ClassType[] converter Func<ClassType, DisposableCollection, InteropStructType> disposableCollection DisposableCollection arrayCount SizeT Returns nint Type Parameters ClassType InteropStructType ConvertArrayToFixedLength<ClassType, InteropStructType>(ClassType[], int, Func<ClassType, InteropStructType>) public static InteropStructType[] ConvertArrayToFixedLength<ClassType, InteropStructType>(ClassType[] classes, int length, Func<ClassType, InteropStructType> ctor) Parameters classes ClassType[] length int ctor Func<ClassType, InteropStructType> Returns InteropStructType[] Type Parameters ClassType InteropStructType GetSizeRequiredToEncodeStringToUTF8(string) public static int GetSizeRequiredToEncodeStringToUTF8(string str) Parameters str string Returns int NullTerminatedBytePointerToString(byte*) public static string NullTerminatedBytePointerToString(byte* bytePointer) Parameters bytePointer byte* Returns string Offset(nint, long) public static nint Offset(this nint ptr, long that) Parameters ptr nint that long Returns nint PtrToClassArray<ClassType, InteropStructType>(nint, uint, Func<InteropStructType, ClassType>) public static ClassType[] PtrToClassArray<ClassType, InteropStructType>(nint rawPtr, uint count, Func<InteropStructType, ClassType> ctor) Parameters rawPtr nint count uint ctor Func<InteropStructType, ClassType> Returns ClassType[] Type Parameters ClassType InteropStructType PtrToClassArray<ClassType, InteropStructType>(nint, SizeT, Func<InteropStructType, ClassType>) public static ClassType[] PtrToClassArray<ClassType, InteropStructType>(nint rawPtr, SizeT count, Func<InteropStructType, ClassType> ctor) Parameters rawPtr nint count SizeT ctor Func<InteropStructType, ClassType> Returns ClassType[] Type Parameters ClassType InteropStructType PtrToClass<ClassType, InteropStructType>(nint, Func<InteropStructType, ClassType>) public static ClassType PtrToClass<ClassType, InteropStructType>(nint rawPtr, Func<InteropStructType, ClassType> ctor) where ClassType : class where InteropStructType : struct Parameters rawPtr nint ctor Func<InteropStructType, ClassType> Returns ClassType Type Parameters ClassType InteropStructType PtrToStringUTF8(nint) public static string PtrToStringUTF8(nint rawPtr) Parameters rawPtr nint Returns string StringArrayToUTF8StringArray(string[]) public static DisposableBuffer StringArrayToUTF8StringArray(string[] strings) Parameters strings string[] Returns DisposableBuffer StringArrayToUTF8StringArray(string[], DisposableCollection, out SizeT) public static nint StringArrayToUTF8StringArray(string[] strings, DisposableCollection disposableCollection, out SizeT count) Parameters strings string[] disposableCollection DisposableCollection count SizeT Returns nint StringToNullTerminatedUTF8ByteArray(string) public static byte[] StringToNullTerminatedUTF8ByteArray(string str) Parameters str string Returns byte[] StringToNullTerminatedUTF8ByteArray(string, int) public static byte[] StringToNullTerminatedUTF8ByteArray(string str, int requiredByteArrayLength) Parameters str string requiredByteArrayLength int Returns byte[] StringToNullTerminatedUTF8FixedPointer(string, byte*, int) public static void StringToNullTerminatedUTF8FixedPointer(string str, byte* bytePointer, int length) Parameters str string bytePointer byte* length int"
  },
  "api/XGamingRuntime.Interop.DisposableBuffer.html": {
    "href": "api/XGamingRuntime.Interop.DisposableBuffer.html",
    "title": "Class DisposableBuffer | |",
    "keywords": "Class DisposableBuffer Namespace XGamingRuntime.Interop public class DisposableBuffer : IDisposable Inheritance object DisposableBuffer Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisposableBuffer() public DisposableBuffer() DisposableBuffer(int) public DisposableBuffer(int size) Parameters size int Properties IntPtr public nint IntPtr { get; } Property Value nint Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ~DisposableBuffer() protected ~DisposableBuffer()"
  },
  "api/XGamingRuntime.Interop.DisposableCollection.html": {
    "href": "api/XGamingRuntime.Interop.DisposableCollection.html",
    "title": "Class DisposableCollection | |",
    "keywords": "Class DisposableCollection Namespace XGamingRuntime.Interop public class DisposableCollection : IDisposable Inheritance object DisposableCollection Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DisposableCollection() public DisposableCollection() Methods Add<T>(T) public T Add<T>(T disposable) where T : IDisposable Parameters disposable T Returns T Type Parameters T Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ~DisposableCollection() protected ~DisposableCollection()"
  },
  "api/XGamingRuntime.Interop.HR.html": {
    "href": "api/XGamingRuntime.Interop.HR.html",
    "title": "Class HR | |",
    "keywords": "Class HR Namespace XGamingRuntime.Interop public class HR Inheritance object HR Derived HR Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields E_INVALIDARG public const int E_INVALIDARG = -2147024809 Field Value int S_OK public const int S_OK = 0 Field Value int Methods FAILED(int) public static bool FAILED(int hr) Parameters hr int Returns bool SUCCEEDED(int) public static bool SUCCEEDED(int hr) Parameters hr int Returns bool"
  },
  "api/XGamingRuntime.Interop.InteropCallbackManager-1.HandlerContext.html": {
    "href": "api/XGamingRuntime.Interop.InteropCallbackManager-1.HandlerContext.html",
    "title": "Struct InteropCallbackManager<TDelegate>.HandlerContext | |",
    "keywords": "Struct InteropCallbackManager<TDelegate>.HandlerContext Namespace XGamingRuntime.Interop protected struct InteropCallbackManager<TDelegate>.HandlerContext Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Callback public TDelegate Callback Field Value TDelegate Context public nint Context Field Value nint"
  },
  "api/XGamingRuntime.Interop.InteropCallbackManager-1.html": {
    "href": "api/XGamingRuntime.Interop.InteropCallbackManager-1.html",
    "title": "Class InteropCallbackManager<TDelegate> | |",
    "keywords": "Class InteropCallbackManager<TDelegate> Namespace XGamingRuntime.Interop public class InteropCallbackManager<TDelegate> where TDelegate : class Type Parameters TDelegate Inheritance object InteropCallbackManager<TDelegate> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _contextToFunctionId protected readonly Dictionary<nint, int> _contextToFunctionId Field Value Dictionary<nint, int> _functionIdToHandler protected readonly Dictionary<int, InteropCallbackManager<TDelegate>.HandlerContext> _functionIdToHandler Field Value Dictionary<int, InteropCallbackManager<TDelegate>.HandlerContext>"
  },
  "api/XGamingRuntime.Interop.Matchmaking.html": {
    "href": "api/XGamingRuntime.Interop.Matchmaking.html",
    "title": "Class Matchmaking | |",
    "keywords": "Class Matchmaking Namespace XGamingRuntime.Interop public static class Matchmaking Inheritance object Matchmaking Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods XblMatchmakingCreateMatchTicketAsync(nint, XblMultiplayerSessionReference, sbyte*, sbyte*, ulong, XblPreserveSessionMode, sbyte*, XAsyncBlockPtr) public static extern int XblMatchmakingCreateMatchTicketAsync(nint xboxLiveContext, XblMultiplayerSessionReference ticketSessionReference, sbyte* matchmakingServiceConfigurationId, sbyte* hopperName, ulong ticketTimeout, XblPreserveSessionMode preserveSession, sbyte* ticketAttributesJson, XAsyncBlockPtr asyncBlock) Parameters xboxLiveContext nint ticketSessionReference XblMultiplayerSessionReference matchmakingServiceConfigurationId sbyte* hopperName sbyte* ticketTimeout ulong preserveSession XblPreserveSessionMode ticketAttributesJson sbyte* asyncBlock XAsyncBlockPtr Returns int XblMatchmakingCreateMatchTicketResult(XAsyncBlockPtr, XblCreateMatchTicketResponse*) public static extern int XblMatchmakingCreateMatchTicketResult(XAsyncBlockPtr asyncBlock, XblCreateMatchTicketResponse* resultPtr) Parameters asyncBlock XAsyncBlockPtr resultPtr XblCreateMatchTicketResponse* Returns int XblMatchmakingDeleteMatchTicketAsync(nint, sbyte*, sbyte*, sbyte*, XAsyncBlockPtr) public static extern int XblMatchmakingDeleteMatchTicketAsync(nint xboxLiveContext, sbyte* serviceConfigurationId, sbyte* hopperName, sbyte* ticketId, XAsyncBlockPtr asyncBlock) Parameters xboxLiveContext nint serviceConfigurationId sbyte* hopperName sbyte* ticketId sbyte* asyncBlock XAsyncBlockPtr Returns int XblMatchmakingGetHopperStatisticsAsync(nint, sbyte*, sbyte*, XAsyncBlockPtr) public static extern int XblMatchmakingGetHopperStatisticsAsync(nint xboxLiveContext, sbyte* serviceConfigurationId, sbyte* hopperName, XAsyncBlockPtr asyncBlock) Parameters xboxLiveContext nint serviceConfigurationId sbyte* hopperName sbyte* asyncBlock XAsyncBlockPtr Returns int XblMatchmakingGetHopperStatisticsResult(XAsyncBlockPtr, SizeT, nint, XblHopperStatisticsResponse**, SizeT*) public static extern int XblMatchmakingGetHopperStatisticsResult(XAsyncBlockPtr asyncBlock, SizeT bufferSize, nint buffer, XblHopperStatisticsResponse** ptrToBuffer, SizeT* bufferUsed) Parameters asyncBlock XAsyncBlockPtr bufferSize SizeT buffer nint ptrToBuffer XblHopperStatisticsResponse** bufferUsed SizeT* Returns int XblMatchmakingGetHopperStatisticsResultSize(XAsyncBlockPtr, SizeT*) public static extern int XblMatchmakingGetHopperStatisticsResultSize(XAsyncBlockPtr asyncBlock, SizeT* resultSizeInBytes) Parameters asyncBlock XAsyncBlockPtr resultSizeInBytes SizeT* Returns int XblMatchmakingGetMatchTicketDetailsAsync(nint, sbyte*, sbyte*, sbyte*, XAsyncBlockPtr) public static extern int XblMatchmakingGetMatchTicketDetailsAsync(nint xboxLiveContext, sbyte* serviceConfigurationId, sbyte* hopperName, sbyte* ticketId, XAsyncBlockPtr asyncBlock) Parameters xboxLiveContext nint serviceConfigurationId sbyte* hopperName sbyte* ticketId sbyte* asyncBlock XAsyncBlockPtr Returns int XblMatchmakingGetMatchTicketDetailsResult(XAsyncBlockPtr, SizeT, nint, XblMatchTicketDetailsResponse**, SizeT*) public static extern int XblMatchmakingGetMatchTicketDetailsResult(XAsyncBlockPtr asyncBlock, SizeT bufferSize, nint buffer, XblMatchTicketDetailsResponse** ptrToBuffer, SizeT* bufferUsed) Parameters asyncBlock XAsyncBlockPtr bufferSize SizeT buffer nint ptrToBuffer XblMatchTicketDetailsResponse** bufferUsed SizeT* Returns int XblMatchmakingGetMatchTicketDetailsResultSize(XAsyncBlockPtr, SizeT*) public static extern int XblMatchmakingGetMatchTicketDetailsResultSize(XAsyncBlockPtr asyncBlock, SizeT* resultSizeInBytes) Parameters asyncBlock XAsyncBlockPtr resultSizeInBytes SizeT* Returns int"
  },
  "api/XGamingRuntime.Interop.Multiplayer.html": {
    "href": "api/XGamingRuntime.Interop.Multiplayer.html",
    "title": "Class Multiplayer | |",
    "keywords": "Class Multiplayer Namespace XGamingRuntime.Interop public static class Multiplayer Inheritance object Multiplayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods XblMultiplayerClearActivityAsync(nint, sbyte*, XAsyncBlockPtr) public static extern int XblMultiplayerClearActivityAsync(nint xblContext, sbyte* scid, XAsyncBlockPtr async) Parameters xblContext nint scid sbyte* async XAsyncBlockPtr Returns int XblMultiplayerGetSessionAsync(nint, XblMultiplayerSessionReference*, XAsyncBlockPtr) public static extern int XblMultiplayerGetSessionAsync(nint xblContext, XblMultiplayerSessionReference* sessionReference, XAsyncBlockPtr async) Parameters xblContext nint sessionReference XblMultiplayerSessionReference* async XAsyncBlockPtr Returns int XblMultiplayerGetSessionByHandleAsync(nint, sbyte*, XAsyncBlockPtr) public static extern int XblMultiplayerGetSessionByHandleAsync(nint xblContext, sbyte* handleId, XAsyncBlockPtr async) Parameters xblContext nint handleId sbyte* async XAsyncBlockPtr Returns int XblMultiplayerGetSessionByHandleResult(XAsyncBlockPtr, nint*) public static extern int XblMultiplayerGetSessionByHandleResult(XAsyncBlockPtr async, nint* handle) Parameters async XAsyncBlockPtr handle nint* Returns int XblMultiplayerGetSessionResult(XAsyncBlockPtr, nint*) public static extern int XblMultiplayerGetSessionResult(XAsyncBlockPtr async, nint* handle) Parameters async XAsyncBlockPtr handle nint* Returns int XblMultiplayerQuerySessionsAsync(nint, XblMultiplayerSessionQuery*, XAsyncBlockPtr) public static extern int XblMultiplayerQuerySessionsAsync(nint xblContext, XblMultiplayerSessionQuery* sessionQuery, XAsyncBlockPtr async) Parameters xblContext nint sessionQuery XblMultiplayerSessionQuery* async XAsyncBlockPtr Returns int XblMultiplayerQuerySessionsResult(XAsyncBlockPtr, SizeT, XblMultiplayerSessionQueryResult*) public static extern int XblMultiplayerQuerySessionsResult(XAsyncBlockPtr async, SizeT sessionCount, XblMultiplayerSessionQueryResult* sessions) Parameters async XAsyncBlockPtr sessionCount SizeT sessions XblMultiplayerSessionQueryResult* Returns int XblMultiplayerQuerySessionsResultCount(XAsyncBlockPtr, SizeT*) public static extern int XblMultiplayerQuerySessionsResultCount(XAsyncBlockPtr async, SizeT* sessionCount) Parameters async XAsyncBlockPtr sessionCount SizeT* Returns int XblMultiplayerSendInvitesAsync(nint, XblMultiplayerSessionReference*, ulong*, SizeT, uint, sbyte*, sbyte*, XAsyncBlockPtr) public static extern int XblMultiplayerSendInvitesAsync(nint xblContext, XblMultiplayerSessionReference* sessionReference, ulong* xuids, SizeT xuidsCount, uint titleId, sbyte* contextStringId, sbyte* customActivationContext, XAsyncBlockPtr async) Parameters xblContext nint sessionReference XblMultiplayerSessionReference* xuids ulong* xuidsCount SizeT titleId uint contextStringId sbyte* customActivationContext sbyte* async XAsyncBlockPtr Returns int XblMultiplayerSendInvitesResult(XAsyncBlockPtr, SizeT, XblMultiplayerInviteHandle*) public static extern int XblMultiplayerSendInvitesResult(XAsyncBlockPtr async, SizeT handlesCount, XblMultiplayerInviteHandle* handles) Parameters async XAsyncBlockPtr handlesCount SizeT handles XblMultiplayerInviteHandle* Returns int XblMultiplayerSessionAddMemberReservation(nint, ulong, sbyte*, byte) public static extern int XblMultiplayerSessionAddMemberReservation(nint handle, ulong xuid, sbyte* memberCustomConstantsJson, byte initializeRequested) Parameters handle nint xuid ulong memberCustomConstantsJson sbyte* initializeRequested byte Returns int XblMultiplayerSessionCompare(nint, nint) public static extern XblMultiplayerSessionChangeTypes XblMultiplayerSessionCompare(nint currentSessionHandle, nint oldSessionHandle) Parameters currentSessionHandle nint oldSessionHandle nint Returns XblMultiplayerSessionChangeTypes XblMultiplayerSessionConstantsSetArbitrationTimeouts(nint, ulong, ulong) public static extern int XblMultiplayerSessionConstantsSetArbitrationTimeouts(nint handle, ulong arbitrationTimeout, ulong forfeitTimeout) Parameters handle nint arbitrationTimeout ulong forfeitTimeout ulong Returns int XblMultiplayerSessionConstantsSetCapabilities(nint, XblMultiplayerSessionCapabilities) public static extern int XblMultiplayerSessionConstantsSetCapabilities(nint handle, XblMultiplayerSessionCapabilities capabilities) Parameters handle nint capabilities XblMultiplayerSessionCapabilities Returns int XblMultiplayerSessionConstantsSetCloudComputePackageJson(nint, sbyte*) public static extern int XblMultiplayerSessionConstantsSetCloudComputePackageJson(nint handle, sbyte* sessionCloudComputePackageConstantsJson) Parameters handle nint sessionCloudComputePackageConstantsJson sbyte* Returns int XblMultiplayerSessionConstantsSetMaxMembersInSession(nint, uint) public static extern void XblMultiplayerSessionConstantsSetMaxMembersInSession(nint handle, uint maxMembersInSession) Parameters handle nint maxMembersInSession uint XblMultiplayerSessionConstantsSetMeasurementServerAddressesJson(nint, sbyte*) public static extern int XblMultiplayerSessionConstantsSetMeasurementServerAddressesJson(nint handle, sbyte* measurementServerAddressesJson) Parameters handle nint measurementServerAddressesJson sbyte* Returns int XblMultiplayerSessionConstantsSetMemberInitialization(nint, XblMultiplayerMemberInitialization) public static extern int XblMultiplayerSessionConstantsSetMemberInitialization(nint handle, XblMultiplayerMemberInitialization memberInitialization) Parameters handle nint memberInitialization XblMultiplayerMemberInitialization Returns int XblMultiplayerSessionConstantsSetPeerToHostRequirements(nint, XblMultiplayerPeerToHostRequirements) public static extern int XblMultiplayerSessionConstantsSetPeerToHostRequirements(nint handle, XblMultiplayerPeerToHostRequirements requirements) Parameters handle nint requirements XblMultiplayerPeerToHostRequirements Returns int XblMultiplayerSessionConstantsSetPeerToPeerRequirements(nint, XblMultiplayerPeerToPeerRequirements) public static extern int XblMultiplayerSessionConstantsSetPeerToPeerRequirements(nint handle, XblMultiplayerPeerToPeerRequirements requirements) Parameters handle nint requirements XblMultiplayerPeerToPeerRequirements Returns int XblMultiplayerSessionConstantsSetQosConnectivityMetrics(nint, byte, byte, byte, byte) public static extern int XblMultiplayerSessionConstantsSetQosConnectivityMetrics(nint handle, byte enableLatencyMetric, byte enableBandwidthDownMetric, byte enableBandwidthUpMetric, byte enableCustomMetric) Parameters handle nint enableLatencyMetric byte enableBandwidthDownMetric byte enableBandwidthUpMetric byte enableCustomMetric byte Returns int XblMultiplayerSessionConstantsSetTimeouts(nint, ulong, ulong, ulong, ulong) public static extern int XblMultiplayerSessionConstantsSetTimeouts(nint handle, ulong memberReservedTimeout, ulong memberInactiveTimeout, ulong memberReadyTimeout, ulong sessionEmptyTimeout) Parameters handle nint memberReservedTimeout ulong memberInactiveTimeout ulong memberReadyTimeout ulong sessionEmptyTimeout ulong Returns int XblMultiplayerSessionConstantsSetVisibility(nint, XblMultiplayerSessionVisibility) public static extern void XblMultiplayerSessionConstantsSetVisibility(nint handle, XblMultiplayerSessionVisibility visibility) Parameters handle nint visibility XblMultiplayerSessionVisibility XblMultiplayerSessionCurrentUserDeleteCustomPropertyJson(nint, sbyte*) public static extern int XblMultiplayerSessionCurrentUserDeleteCustomPropertyJson(nint handle, sbyte* name) Parameters handle nint name sbyte* Returns int XblMultiplayerSessionCurrentUserSetCustomPropertyJson(nint, sbyte*, sbyte*) public static extern int XblMultiplayerSessionCurrentUserSetCustomPropertyJson(nint handle, sbyte* name, sbyte* valueJson) Parameters handle nint name sbyte* valueJson sbyte* Returns int XblMultiplayerSessionCurrentUserSetEncounters(nint, sbyte**, SizeT) public static extern int XblMultiplayerSessionCurrentUserSetEncounters(nint handle, sbyte** encounters, SizeT encountersCount) Parameters handle nint encounters sbyte** encountersCount SizeT Returns int XblMultiplayerSessionCurrentUserSetGroups(nint, sbyte**, SizeT) public static extern int XblMultiplayerSessionCurrentUserSetGroups(nint handle, sbyte** groups, SizeT groupsCount) Parameters handle nint groups sbyte** groupsCount SizeT Returns int XblMultiplayerSessionCurrentUserSetMembersInGroup(nint, uint*, SizeT) public static extern int XblMultiplayerSessionCurrentUserSetMembersInGroup(nint session, uint* memberIds, SizeT memberIdsCount) Parameters session nint memberIds uint* memberIdsCount SizeT Returns int XblMultiplayerSessionCurrentUserSetQosMeasurements(nint, sbyte*) public static extern int XblMultiplayerSessionCurrentUserSetQosMeasurements(nint handle, sbyte* measurements) Parameters handle nint measurements sbyte* Returns int XblMultiplayerSessionCurrentUserSetRoles(nint, XblMultiplayerSessionMemberRole*, SizeT) public static extern int XblMultiplayerSessionCurrentUserSetRoles(nint handle, XblMultiplayerSessionMemberRole* roles, SizeT rolesCount) Parameters handle nint roles XblMultiplayerSessionMemberRole* rolesCount SizeT Returns int XblMultiplayerSessionDeleteCustomPropertyJson(nint, sbyte*) public static extern int XblMultiplayerSessionDeleteCustomPropertyJson(nint handle, sbyte* name) Parameters handle nint name sbyte* Returns int XblMultiplayerSessionDuplicateHandle(nint, nint*) public static extern int XblMultiplayerSessionDuplicateHandle(nint handle, nint* duplicatedHandle) Parameters handle nint duplicatedHandle nint* Returns int XblMultiplayerSessionEtag(nint) public static extern sbyte* XblMultiplayerSessionEtag(nint handle) Parameters handle nint Returns sbyte* XblMultiplayerSessionGetInfo(nint) public static extern XblMultiplayerSessionInfo* XblMultiplayerSessionGetInfo(nint handle) Parameters handle nint Returns XblMultiplayerSessionInfo* XblMultiplayerSessionGetInitializationInfo(nint) public static extern XblMultiplayerSessionInitializationInfo* XblMultiplayerSessionGetInitializationInfo(nint handle) Parameters handle nint Returns XblMultiplayerSessionInitializationInfo* XblMultiplayerSessionGetMember(nint, uint) public static extern XblMultiplayerSessionMember* XblMultiplayerSessionGetMember(nint handle, uint memberId) Parameters handle nint memberId uint Returns XblMultiplayerSessionMember* XblMultiplayerSessionGetRoleByName(nint, sbyte*, sbyte*, XblMultiplayerRole**) public static extern int XblMultiplayerSessionGetRoleByName(nint handle, sbyte* roleTypeName, sbyte* roleName, XblMultiplayerRole** role) Parameters handle nint roleTypeName sbyte* roleName sbyte* role XblMultiplayerRole** Returns int XblMultiplayerSessionHostCandidates(nint, XblDeviceToken**, SizeT*) public static extern int XblMultiplayerSessionHostCandidates(nint handle, XblDeviceToken** deviceTokens, SizeT* deviceTokensCount) Parameters handle nint deviceTokens XblDeviceToken** deviceTokensCount SizeT* Returns int XblMultiplayerSessionMatchmakingServer(nint) public static extern XblMultiplayerMatchmakingServer* XblMultiplayerSessionMatchmakingServer(nint handle) Parameters handle nint Returns XblMultiplayerMatchmakingServer* XblMultiplayerSessionMembersAccepted(nint) public static extern uint XblMultiplayerSessionMembersAccepted(nint handle) Parameters handle nint Returns uint XblMultiplayerSessionPropertiesSetJoinRestriction(nint, XblMultiplayerSessionRestriction) public static extern void XblMultiplayerSessionPropertiesSetJoinRestriction(nint handle, XblMultiplayerSessionRestriction joinRestriction) Parameters handle nint joinRestriction XblMultiplayerSessionRestriction XblMultiplayerSessionPropertiesSetKeywords(nint, sbyte**, SizeT) public static extern int XblMultiplayerSessionPropertiesSetKeywords(nint handle, sbyte** keywords, SizeT keywordsCount) Parameters handle nint keywords sbyte** keywordsCount SizeT Returns int XblMultiplayerSessionPropertiesSetReadRestriction(nint, XblMultiplayerSessionRestriction) public static extern void XblMultiplayerSessionPropertiesSetReadRestriction(nint handle, XblMultiplayerSessionRestriction readRestriction) Parameters handle nint readRestriction XblMultiplayerSessionRestriction XblMultiplayerSessionPropertiesSetTurnCollection(nint, uint*, SizeT) public static extern int XblMultiplayerSessionPropertiesSetTurnCollection(nint handle, uint* turnCollectionMemberIds, SizeT turnCollectionMemberIdsCount) Parameters handle nint turnCollectionMemberIds uint* turnCollectionMemberIdsCount SizeT Returns int XblMultiplayerSessionRawServersJson(nint) public static extern sbyte* XblMultiplayerSessionRawServersJson(nint handle) Parameters handle nint Returns sbyte* XblMultiplayerSessionReferenceToUriPath(XblMultiplayerSessionReference*, XblMultiplayerSessionReferenceUri*) public static extern int XblMultiplayerSessionReferenceToUriPath(XblMultiplayerSessionReference* sessionReference, XblMultiplayerSessionReferenceUri* sessionReferenceUri) Parameters sessionReference XblMultiplayerSessionReference* sessionReferenceUri XblMultiplayerSessionReferenceUri* Returns int XblMultiplayerSessionRoleTypes(nint, XblMultiplayerRoleType**, SizeT*) public static extern int XblMultiplayerSessionRoleTypes(nint handle, XblMultiplayerRoleType** roleTypes, SizeT* roleTypesCount) Parameters handle nint roleTypes XblMultiplayerRoleType** roleTypesCount SizeT* Returns int XblMultiplayerSessionSessionConstants(nint) public static extern XblMultiplayerSessionConstants* XblMultiplayerSessionSessionConstants(nint handle) Parameters handle nint Returns XblMultiplayerSessionConstants* XblMultiplayerSessionSessionReference(nint) public static extern XblMultiplayerSessionReference* XblMultiplayerSessionSessionReference(nint handle) Parameters handle nint Returns XblMultiplayerSessionReference* XblMultiplayerSessionSetAllocateCloudCompute(nint, byte) public static extern void XblMultiplayerSessionSetAllocateCloudCompute(nint handle, byte allocateCloudCompute) Parameters handle nint allocateCloudCompute byte XblMultiplayerSessionSetCustomPropertyJson(nint, sbyte*, sbyte*) public static extern int XblMultiplayerSessionSetCustomPropertyJson(nint handle, sbyte* name, sbyte* valueJson) Parameters handle nint name sbyte* valueJson sbyte* Returns int XblMultiplayerSessionSetInitializationSucceeded(nint, byte) public static extern void XblMultiplayerSessionSetInitializationSucceeded(nint handle, byte initializationSucceeded) Parameters handle nint initializationSucceeded byte XblMultiplayerSessionSetLocked(nint, byte) public static extern void XblMultiplayerSessionSetLocked(nint handle, byte locked) Parameters handle nint locked byte XblMultiplayerSessionSetMatchmakingResubmit(nint, byte) public static extern void XblMultiplayerSessionSetMatchmakingResubmit(nint handle, byte matchResubmit) Parameters handle nint matchResubmit byte XblMultiplayerSessionSetMatchmakingServerConnectionPath(nint, sbyte*) public static extern void XblMultiplayerSessionSetMatchmakingServerConnectionPath(nint handle, sbyte* serverConnectionPath) Parameters handle nint serverConnectionPath sbyte* XblMultiplayerSessionSetMatchmakingTargetSessionConstantsJson(nint, sbyte*) public static extern int XblMultiplayerSessionSetMatchmakingTargetSessionConstantsJson(nint handle, sbyte* matchmakingTargetSessionConstantsJson) Parameters handle nint matchmakingTargetSessionConstantsJson sbyte* Returns int XblMultiplayerSessionSetMutableRoleSettings(nint, sbyte*, sbyte*, uint*, uint*) public static extern int XblMultiplayerSessionSetMutableRoleSettings(nint handle, sbyte* roleTypeName, sbyte* roleName, uint* maxMemberCount, uint* targetMemberCount) Parameters handle nint roleTypeName sbyte* roleName sbyte* maxMemberCount uint* targetMemberCount uint* Returns int XblMultiplayerSessionSetRawServersJson(nint, sbyte*) public static extern int XblMultiplayerSessionSetRawServersJson(nint handle, sbyte* rawServersJson) Parameters handle nint rawServersJson sbyte* Returns int XblMultiplayerSessionSetServerConnectionStringCandidates(nint, sbyte**, SizeT) public static extern int XblMultiplayerSessionSetServerConnectionStringCandidates(nint handle, sbyte** serverConnectionStringCandidates, SizeT serverConnectionStringCandidatesCount) Parameters handle nint serverConnectionStringCandidates sbyte** serverConnectionStringCandidatesCount SizeT Returns int XblMultiplayerSessionSubscribedChangeTypes(nint) public static extern XblMultiplayerSessionChangeTypes XblMultiplayerSessionSubscribedChangeTypes(nint handle) Parameters handle nint Returns XblMultiplayerSessionChangeTypes XblMultiplayerSessionTimeOfSession(nint) public static extern long XblMultiplayerSessionTimeOfSession(nint handle) Parameters handle nint Returns long XblMultiplayerSetActivityAsync(nint, XblMultiplayerSessionReference*, XAsyncBlockPtr) public static extern int XblMultiplayerSetActivityAsync(nint xblContext, XblMultiplayerSessionReference* sessionReference, XAsyncBlockPtr async) Parameters xblContext nint sessionReference XblMultiplayerSessionReference* async XAsyncBlockPtr Returns int XblMultiplayerSetTransferHandleAsync(nint, XblMultiplayerSessionReference, XblMultiplayerSessionReference, XAsyncBlockPtr) public static extern int XblMultiplayerSetTransferHandleAsync(nint xblContext, XblMultiplayerSessionReference targetSessionReference, XblMultiplayerSessionReference originSessionReference, XAsyncBlockPtr async) Parameters xblContext nint targetSessionReference XblMultiplayerSessionReference originSessionReference XblMultiplayerSessionReference async XAsyncBlockPtr Returns int XblMultiplayerSetTransferHandleResult(XAsyncBlockPtr, XblMultiplayerSessionHandleId*) public static extern int XblMultiplayerSetTransferHandleResult(XAsyncBlockPtr async, XblMultiplayerSessionHandleId* handleId) Parameters async XAsyncBlockPtr handleId XblMultiplayerSessionHandleId* Returns int XblMultiplayerWriteSessionByHandleAsync(nint, nint, XblMultiplayerSessionWriteMode, sbyte*, XAsyncBlockPtr) public static extern int XblMultiplayerWriteSessionByHandleAsync(nint xblContext, nint multiplayerSession, XblMultiplayerSessionWriteMode writeMode, sbyte* handleId, XAsyncBlockPtr async) Parameters xblContext nint multiplayerSession nint writeMode XblMultiplayerSessionWriteMode handleId sbyte* async XAsyncBlockPtr Returns int XblMultiplayerWriteSessionByHandleResult(XAsyncBlockPtr, nint*) public static extern int XblMultiplayerWriteSessionByHandleResult(XAsyncBlockPtr async, nint* handle) Parameters async XAsyncBlockPtr handle nint* Returns int"
  },
  "api/XGamingRuntime.Interop.RealTimeActivity.XblRealTimeActivityConnectionStateChangeHandler.html": {
    "href": "api/XGamingRuntime.Interop.RealTimeActivity.XblRealTimeActivityConnectionStateChangeHandler.html",
    "title": "Delegate RealTimeActivity.XblRealTimeActivityConnectionStateChangeHandler | |",
    "keywords": "Delegate RealTimeActivity.XblRealTimeActivityConnectionStateChangeHandler Namespace XGamingRuntime.Interop public delegate void RealTimeActivity.XblRealTimeActivityConnectionStateChangeHandler(nint context, XblRealTimeActivityConnectionState connectionState) Parameters context nint connectionState XblRealTimeActivityConnectionState"
  },
  "api/XGamingRuntime.Interop.RealTimeActivity.XblRealTimeActivityResyncHandler.html": {
    "href": "api/XGamingRuntime.Interop.RealTimeActivity.XblRealTimeActivityResyncHandler.html",
    "title": "Delegate RealTimeActivity.XblRealTimeActivityResyncHandler | |",
    "keywords": "Delegate RealTimeActivity.XblRealTimeActivityResyncHandler Namespace XGamingRuntime.Interop public delegate void RealTimeActivity.XblRealTimeActivityResyncHandler(nint context) Parameters context nint"
  },
  "api/XGamingRuntime.Interop.RealTimeActivity.html": {
    "href": "api/XGamingRuntime.Interop.RealTimeActivity.html",
    "title": "Class RealTimeActivity | |",
    "keywords": "Class RealTimeActivity Namespace XGamingRuntime.Interop public static class RealTimeActivity Inheritance object RealTimeActivity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods XblRealTimeActivityAddConnectionStateChangeHandler(nint, XblRealTimeActivityConnectionStateChangeHandler, nint) public static extern int XblRealTimeActivityAddConnectionStateChangeHandler(nint xboxLiveContext, RealTimeActivity.XblRealTimeActivityConnectionStateChangeHandler handler, nint context) Parameters xboxLiveContext nint handler RealTimeActivity.XblRealTimeActivityConnectionStateChangeHandler context nint Returns int XblRealTimeActivityAddResyncHandler(nint, XblRealTimeActivityResyncHandler, nint) public static extern int XblRealTimeActivityAddResyncHandler(nint xboxLiveContext, RealTimeActivity.XblRealTimeActivityResyncHandler handler, nint context) Parameters xboxLiveContext nint handler RealTimeActivity.XblRealTimeActivityResyncHandler context nint Returns int XblRealTimeActivityRemoveConnectionStateChangeHandler(nint, int) public static extern int XblRealTimeActivityRemoveConnectionStateChangeHandler(nint xboxLiveContext, int token) Parameters xboxLiveContext nint token int Returns int XblRealTimeActivityRemoveResyncHandler(nint, int) public static extern int XblRealTimeActivityRemoveResyncHandler(nint xboxLiveContext, int token) Parameters xboxLiveContext nint token int Returns int"
  },
  "api/XGamingRuntime.Interop.SizeT.html": {
    "href": "api/XGamingRuntime.Interop.SizeT.html",
    "title": "Struct SizeT | |",
    "keywords": "Struct SizeT Namespace XGamingRuntime.Interop public struct SizeT Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors SizeT(int) public SizeT(int length) Parameters length int SizeT(uint) public SizeT(uint length) Parameters length uint Properties IsZero public bool IsZero { get; } Property Value bool Methods ToInt32() public int ToInt32() Returns int ToUInt32() public uint ToUInt32() Returns uint"
  },
  "api/XGamingRuntime.Interop.Social.html": {
    "href": "api/XGamingRuntime.Interop.Social.html",
    "title": "Class Social | |",
    "keywords": "Class Social Namespace XGamingRuntime.Interop public static class Social Inheritance object Social Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods XblSocialAddSocialRelationshipChangedHandler(nint, XblSocialRelationshipChangedHandler, nint) public static extern int XblSocialAddSocialRelationshipChangedHandler(nint xboxLiveContext, XblSocialRelationshipChangedHandler handler, nint handlerContext) Parameters xboxLiveContext nint handler XblSocialRelationshipChangedHandler handlerContext nint Returns int XblSocialGetSocialRelationshipsAsync(nint, ulong, XblSocialRelationshipFilter, SizeT, SizeT, XAsyncBlockPtr) public static extern int XblSocialGetSocialRelationshipsAsync(nint xboxLiveContext, ulong xboxUserId, XblSocialRelationshipFilter socialRelationshipFilter, SizeT startIndex, SizeT maxItems, XAsyncBlockPtr async) Parameters xboxLiveContext nint xboxUserId ulong socialRelationshipFilter XblSocialRelationshipFilter startIndex SizeT maxItems SizeT async XAsyncBlockPtr Returns int XblSocialGetSocialRelationshipsResult(XAsyncBlockPtr, nint*) public static extern int XblSocialGetSocialRelationshipsResult(XAsyncBlockPtr async, nint* handle) Parameters async XAsyncBlockPtr handle nint* Returns int XblSocialRelationshipResultCloseHandle(nint) public static extern void XblSocialRelationshipResultCloseHandle(nint handle) Parameters handle nint XblSocialRelationshipResultDuplicateHandle(nint, nint*) public static extern int XblSocialRelationshipResultDuplicateHandle(nint handle, nint* duplicatedHandle) Parameters handle nint duplicatedHandle nint* Returns int XblSocialRelationshipResultGetNextAsync(nint, nint, SizeT, XAsyncBlockPtr) public static extern int XblSocialRelationshipResultGetNextAsync(nint xboxLiveContext, nint resultHandle, SizeT maxItems, XAsyncBlockPtr async) Parameters xboxLiveContext nint resultHandle nint maxItems SizeT async XAsyncBlockPtr Returns int XblSocialRelationshipResultGetNextResult(XAsyncBlockPtr, nint*) public static extern int XblSocialRelationshipResultGetNextResult(XAsyncBlockPtr async, nint* handle) Parameters async XAsyncBlockPtr handle nint* Returns int XblSocialRelationshipResultGetRelationships(nint, XblSocialRelationship**, SizeT*) public static extern int XblSocialRelationshipResultGetRelationships(nint resultHandle, XblSocialRelationship** relationships, SizeT* relationshipsCount) Parameters resultHandle nint relationships XblSocialRelationship** relationshipsCount SizeT* Returns int XblSocialRelationshipResultGetTotalCount(nint, SizeT*) public static extern int XblSocialRelationshipResultGetTotalCount(nint resultHandle, SizeT* totalCount) Parameters resultHandle nint totalCount SizeT* Returns int XblSocialRelationshipResultHasNext(nint, bool*) public static extern int XblSocialRelationshipResultHasNext(nint resultHandle, bool* hasNext) Parameters resultHandle nint hasNext bool* Returns int XblSocialRemoveSocialRelationshipChangedHandler(nint, int) public static extern int XblSocialRemoveSocialRelationshipChangedHandler(nint xboxLiveContext, int handlerFunctionContext) Parameters xboxLiveContext nint handlerFunctionContext int Returns int"
  },
  "api/XGamingRuntime.Interop.TimeT.html": {
    "href": "api/XGamingRuntime.Interop.TimeT.html",
    "title": "Struct TimeT | |",
    "keywords": "Struct TimeT Namespace XGamingRuntime.Interop public struct TimeT Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TimeT(DateTime) public TimeT(DateTime time) Parameters time DateTime TimeT(long) public TimeT(long secondSinceUnixEpoch) Parameters secondSinceUnixEpoch long Properties DateTime public DateTime DateTime { get; } Property Value DateTime"
  },
  "api/XGamingRuntime.Interop.UserStatistics.html": {
    "href": "api/XGamingRuntime.Interop.UserStatistics.html",
    "title": "Class UserStatistics | |",
    "keywords": "Class UserStatistics Namespace XGamingRuntime.Interop public static class UserStatistics Inheritance object UserStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods XblUserStatisticsAddStatisticChangedHandler(nint, XblStatisticChangedHandler, void*) public static extern int XblUserStatisticsAddStatisticChangedHandler(nint xblContextHandle, XblStatisticChangedHandler handler, void* handlerContext) Parameters xblContextHandle nint handler XblStatisticChangedHandler handlerContext void* Returns int XblUserStatisticsRemoveStatisticChangedHandler(nint, int) public static extern void XblUserStatisticsRemoveStatisticChangedHandler(nint xblContextHandle, int context) Parameters xblContextHandle nint context int XblUserStatisticsStopTrackingStatistics(nint, ulong*, nuint, sbyte*, sbyte**, nuint) public static extern int XblUserStatisticsStopTrackingStatistics(nint xblContextHandle, ulong* xboxUserIds, nuint xboxUserIdsCount, sbyte* serviceConfigurationId, sbyte** statisticNames, nuint statisticNamesCount) Parameters xblContextHandle nint xboxUserIds ulong* xboxUserIdsCount nuint serviceConfigurationId sbyte* statisticNames sbyte** statisticNamesCount nuint Returns int XblUserStatisticsStopTrackingUsers(nint, ulong*, nuint) public static extern int XblUserStatisticsStopTrackingUsers(nint xblContextHandle, ulong* xboxUserIds, nuint xboxUserIdsCount) Parameters xblContextHandle nint xboxUserIds ulong* xboxUserIdsCount nuint Returns int XblUserStatisticsTrackStatistics(nint, ulong*, nuint, sbyte*, sbyte**, nuint) public static extern int XblUserStatisticsTrackStatistics(nint xblContextHandle, ulong* xboxUserIds, nuint xboxUserIdsCount, sbyte* serviceConfigurationId, sbyte** statisticNames, nuint statisticNamesCount) Parameters xblContextHandle nint xboxUserIds ulong* xboxUserIdsCount nuint serviceConfigurationId sbyte* statisticNames sbyte** statisticNamesCount nuint Returns int"
  },
  "api/XGamingRuntime.Interop.XAsyncBlock.html": {
    "href": "api/XGamingRuntime.Interop.XAsyncBlock.html",
    "title": "Struct XAsyncBlock | |",
    "keywords": "Struct XAsyncBlock Namespace XGamingRuntime.Interop public struct XAsyncBlock Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XAsyncBlockPtr.html": {
    "href": "api/XGamingRuntime.Interop.XAsyncBlockPtr.html",
    "title": "Struct XAsyncBlockPtr | |",
    "keywords": "Struct XAsyncBlockPtr Namespace XGamingRuntime.Interop public struct XAsyncBlockPtr Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XAsyncCompletionRoutine.html": {
    "href": "api/XGamingRuntime.Interop.XAsyncCompletionRoutine.html",
    "title": "Delegate XAsyncCompletionRoutine | |",
    "keywords": "Delegate XAsyncCompletionRoutine Namespace XGamingRuntime.Interop public delegate void XAsyncCompletionRoutine(XAsyncBlockPtr asyncBlock) Parameters asyncBlock XAsyncBlockPtr"
  },
  "api/XGamingRuntime.Interop.XStore.html": {
    "href": "api/XGamingRuntime.Interop.XStore.html",
    "title": "Class XStore | |",
    "keywords": "Class XStore Namespace XGamingRuntime.Interop public static class XStore Inheritance object XStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.Interop.XTaskQueue.html": {
    "href": "api/XGamingRuntime.Interop.XTaskQueue.html",
    "title": "Class XTaskQueue | |",
    "keywords": "Class XTaskQueue Namespace XGamingRuntime.Interop public class XTaskQueue Inheritance object XTaskQueue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties handle public XTaskQueueHandle handle { get; set; } Property Value XTaskQueueHandle"
  },
  "api/XGamingRuntime.Interop.XTaskQueueDispatchMode.html": {
    "href": "api/XGamingRuntime.Interop.XTaskQueueDispatchMode.html",
    "title": "Enum XTaskQueueDispatchMode | |",
    "keywords": "Enum XTaskQueueDispatchMode Namespace XGamingRuntime.Interop public enum XTaskQueueDispatchMode : uint Fields Immediate = 3 Manual = 0 SerializedThreadPool = 2 ThreadPool = 1"
  },
  "api/XGamingRuntime.Interop.XTaskQueueHandle.html": {
    "href": "api/XGamingRuntime.Interop.XTaskQueueHandle.html",
    "title": "Struct XTaskQueueHandle | |",
    "keywords": "Struct XTaskQueueHandle Namespace XGamingRuntime.Interop public struct XTaskQueueHandle Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XTaskQueuePort.html": {
    "href": "api/XGamingRuntime.Interop.XTaskQueuePort.html",
    "title": "Enum XTaskQueuePort | |",
    "keywords": "Enum XTaskQueuePort Namespace XGamingRuntime.Interop public enum XTaskQueuePort : uint Fields Completion = 1 Work = 0"
  },
  "api/XGamingRuntime.Interop.XTaskQueueRegistrationToken.html": {
    "href": "api/XGamingRuntime.Interop.XTaskQueueRegistrationToken.html",
    "title": "Struct XTaskQueueRegistrationToken | |",
    "keywords": "Struct XTaskQueueRegistrationToken Namespace XGamingRuntime.Interop public struct XTaskQueueRegistrationToken Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields token public readonly ulong token Field Value ulong"
  },
  "api/XGamingRuntime.Interop.XUserHandle.html": {
    "href": "api/XGamingRuntime.Interop.XUserHandle.html",
    "title": "Struct XUserHandle | |",
    "keywords": "Struct XUserHandle Namespace XGamingRuntime.Interop public struct XUserHandle Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Ptr public nint Ptr Field Value nint"
  },
  "api/XGamingRuntime.Interop.XblContextHandle.html": {
    "href": "api/XGamingRuntime.Interop.XblContextHandle.html",
    "title": "Struct XblContextHandle | |",
    "keywords": "Struct XblContextHandle Namespace XGamingRuntime.Interop Handle to an Xbox live context. Needed to interact with Xbox live services. public struct XblContextHandle Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields handle public nint handle Field Value nint"
  },
  "api/XGamingRuntime.Interop.XblCreateMatchTicketResponse.html": {
    "href": "api/XGamingRuntime.Interop.XblCreateMatchTicketResponse.html",
    "title": "Struct XblCreateMatchTicketResponse | |",
    "keywords": "Struct XblCreateMatchTicketResponse Namespace XGamingRuntime.Interop public struct XblCreateMatchTicketResponse Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields estimatedWaitTime public long estimatedWaitTime Field Value long matchTicketId public sbyte* matchTicketId Field Value sbyte*"
  },
  "api/XGamingRuntime.Interop.XblDeviceToken.html": {
    "href": "api/XGamingRuntime.Interop.XblDeviceToken.html",
    "title": "Struct XblDeviceToken | |",
    "keywords": "Struct XblDeviceToken Namespace XGamingRuntime.Interop public struct XblDeviceToken Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblFunctionContext.html": {
    "href": "api/XGamingRuntime.Interop.XblFunctionContext.html",
    "title": "Struct XblFunctionContext | |",
    "keywords": "Struct XblFunctionContext Namespace XGamingRuntime.Interop public struct XblFunctionContext Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields context public readonly int context Field Value int"
  },
  "api/XGamingRuntime.Interop.XblHopperStatisticsResponse.html": {
    "href": "api/XGamingRuntime.Interop.XblHopperStatisticsResponse.html",
    "title": "Struct XblHopperStatisticsResponse | |",
    "keywords": "Struct XblHopperStatisticsResponse Namespace XGamingRuntime.Interop public struct XblHopperStatisticsResponse Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields estimatedWaitTime public long estimatedWaitTime Field Value long hopperName public sbyte* hopperName Field Value sbyte* playersWaitingToMatch public uint playersWaitingToMatch Field Value uint"
  },
  "api/XGamingRuntime.Interop.XblMatchTicketDetailsResponse.html": {
    "href": "api/XGamingRuntime.Interop.XblMatchTicketDetailsResponse.html",
    "title": "Struct XblMatchTicketDetailsResponse | |",
    "keywords": "Struct XblMatchTicketDetailsResponse Namespace XGamingRuntime.Interop public struct XblMatchTicketDetailsResponse Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields estimatedWaitTime public long estimatedWaitTime Field Value long matchStatus public XblTicketStatus matchStatus Field Value XblTicketStatus preserveSession public XblPreserveSessionMode preserveSession Field Value XblPreserveSessionMode targetSession public XblMultiplayerSessionReference targetSession Field Value XblMultiplayerSessionReference ticketAttributes public sbyte* ticketAttributes Field Value sbyte* ticketSession public XblMultiplayerSessionReference ticketSession Field Value XblMultiplayerSessionReference"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerInviteHandle.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerInviteHandle.html",
    "title": "Struct XblMultiplayerInviteHandle | |",
    "keywords": "Struct XblMultiplayerInviteHandle Namespace XGamingRuntime.Interop public struct XblMultiplayerInviteHandle Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Data public sbyte* Data Field Value sbyte*"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerMatchmakingServer.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerMatchmakingServer.html",
    "title": "Struct XblMultiplayerMatchmakingServer | |",
    "keywords": "Struct XblMultiplayerMatchmakingServer Namespace XGamingRuntime.Interop public struct XblMultiplayerMatchmakingServer Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerMemberInitialization.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerMemberInitialization.html",
    "title": "Struct XblMultiplayerMemberInitialization | |",
    "keywords": "Struct XblMultiplayerMemberInitialization Namespace XGamingRuntime.Interop public struct XblMultiplayerMemberInitialization Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerPeerToHostRequirements.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerPeerToHostRequirements.html",
    "title": "Struct XblMultiplayerPeerToHostRequirements | |",
    "keywords": "Struct XblMultiplayerPeerToHostRequirements Namespace XGamingRuntime.Interop public struct XblMultiplayerPeerToHostRequirements Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerPeerToPeerRequirements.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerPeerToPeerRequirements.html",
    "title": "Struct XblMultiplayerPeerToPeerRequirements | |",
    "keywords": "Struct XblMultiplayerPeerToPeerRequirements Namespace XGamingRuntime.Interop public struct XblMultiplayerPeerToPeerRequirements Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerRole.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerRole.html",
    "title": "Struct XblMultiplayerRole | |",
    "keywords": "Struct XblMultiplayerRole Namespace XGamingRuntime.Interop public struct XblMultiplayerRole Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerRoleType.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerRoleType.html",
    "title": "Struct XblMultiplayerRoleType | |",
    "keywords": "Struct XblMultiplayerRoleType Namespace XGamingRuntime.Interop public struct XblMultiplayerRoleType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionCapabilities.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionCapabilities.html",
    "title": "Struct XblMultiplayerSessionCapabilities | |",
    "keywords": "Struct XblMultiplayerSessionCapabilities Namespace XGamingRuntime.Interop public struct XblMultiplayerSessionCapabilities Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionConstants.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionConstants.html",
    "title": "Struct XblMultiplayerSessionConstants | |",
    "keywords": "Struct XblMultiplayerSessionConstants Namespace XGamingRuntime.Interop public struct XblMultiplayerSessionConstants Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionHandle.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionHandle.html",
    "title": "Struct XblMultiplayerSessionHandle | |",
    "keywords": "Struct XblMultiplayerSessionHandle Namespace XGamingRuntime.Interop Handle to a local multiplayer session. This handle will be used to query and change the local session object. Anytime the changes made to the local session object will not be reflected in the multiplayer service until a subsequent call to XblMultiplayerWriteSessionAsync. public struct XblMultiplayerSessionHandle Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields handle public nint handle Field Value nint"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionHandleId.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionHandleId.html",
    "title": "Struct XblMultiplayerSessionHandleId | |",
    "keywords": "Struct XblMultiplayerSessionHandleId Namespace XGamingRuntime.Interop public struct XblMultiplayerSessionHandleId Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields value public sbyte* value Field Value sbyte*"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionInfo.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionInfo.html",
    "title": "Struct XblMultiplayerSessionInfo | |",
    "keywords": "Struct XblMultiplayerSessionInfo Namespace XGamingRuntime.Interop public struct XblMultiplayerSessionInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Methods GetSearchHandleId() public string GetSearchHandleId() Returns string"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionInitializationInfo.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionInitializationInfo.html",
    "title": "Struct XblMultiplayerSessionInitializationInfo | |",
    "keywords": "Struct XblMultiplayerSessionInitializationInfo Namespace XGamingRuntime.Interop public struct XblMultiplayerSessionInitializationInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionMember.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionMember.html",
    "title": "Struct XblMultiplayerSessionMember | |",
    "keywords": "Struct XblMultiplayerSessionMember Namespace XGamingRuntime.Interop public struct XblMultiplayerSessionMember Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionMemberRole.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionMemberRole.html",
    "title": "Struct XblMultiplayerSessionMemberRole | |",
    "keywords": "Struct XblMultiplayerSessionMemberRole Namespace XGamingRuntime.Interop public struct XblMultiplayerSessionMemberRole Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionQuery.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionQuery.html",
    "title": "Struct XblMultiplayerSessionQuery | |",
    "keywords": "Struct XblMultiplayerSessionQuery Namespace XGamingRuntime.Interop public struct XblMultiplayerSessionQuery Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields ContractVersionFilter public uint ContractVersionFilter Field Value uint IncludeInactiveSessions public bool IncludeInactiveSessions Field Value bool IncludePrivateSessions public bool IncludePrivateSessions Field Value bool IncludeReservations public bool IncludeReservations Field Value bool KeywordFilter public sbyte* KeywordFilter Field Value sbyte* MaxItems public uint MaxItems Field Value uint Scid public sbyte* Scid Field Value sbyte* SessionTemplateNameFilter public sbyte* SessionTemplateNameFilter Field Value sbyte* VisibilityFilter public XblMultiplayerSessionVisibility VisibilityFilter Field Value XblMultiplayerSessionVisibility XuidFilters public ulong* XuidFilters Field Value ulong* XuidFiltersCount public SizeT XuidFiltersCount Field Value SizeT"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionQueryResult.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionQueryResult.html",
    "title": "Struct XblMultiplayerSessionQueryResult | |",
    "keywords": "Struct XblMultiplayerSessionQueryResult Namespace XGamingRuntime.Interop public struct XblMultiplayerSessionQueryResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields AcceptedMemberCount public uint AcceptedMemberCount Field Value uint IsMyTurn public bool IsMyTurn Field Value bool JoinRestriction public XblMultiplayerSessionRestriction JoinRestriction Field Value XblMultiplayerSessionRestriction SessionReference public XblMultiplayerSessionReference SessionReference Field Value XblMultiplayerSessionReference StartTime public long StartTime Field Value long Status public XblMultiplayerSessionStatus Status Field Value XblMultiplayerSessionStatus Visibility public XblMultiplayerSessionVisibility Visibility Field Value XblMultiplayerSessionVisibility Xuid public ulong Xuid Field Value ulong"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionReference.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionReference.html",
    "title": "Struct XblMultiplayerSessionReference | |",
    "keywords": "Struct XblMultiplayerSessionReference Namespace XGamingRuntime.Interop public struct XblMultiplayerSessionReference Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors XblMultiplayerSessionReference(XblMultiplayerSessionReference) public XblMultiplayerSessionReference(XblMultiplayerSessionReference publicObject) Parameters publicObject XblMultiplayerSessionReference Methods GetScid() public string GetScid() Returns string GetSessionName() public string GetSessionName() Returns string GetSessionTemplateName() public string GetSessionTemplateName() Returns string"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionReferenceUri.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionReferenceUri.html",
    "title": "Struct XblMultiplayerSessionReferenceUri | |",
    "keywords": "Struct XblMultiplayerSessionReferenceUri Namespace XGamingRuntime.Interop public struct XblMultiplayerSessionReferenceUri Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields value public sbyte* value Field Value sbyte*"
  },
  "api/XGamingRuntime.Interop.XblMultiplayerSessionStatus.html": {
    "href": "api/XGamingRuntime.Interop.XblMultiplayerSessionStatus.html",
    "title": "Enum XblMultiplayerSessionStatus | |",
    "keywords": "Enum XblMultiplayerSessionStatus Namespace XGamingRuntime.Interop public enum XblMultiplayerSessionStatus : uint Fields Active = 1 Inactive = 2 Reserved = 3 Unknown = 0"
  },
  "api/XGamingRuntime.Interop.XblPreserveSessionMode.html": {
    "href": "api/XGamingRuntime.Interop.XblPreserveSessionMode.html",
    "title": "Enum XblPreserveSessionMode | |",
    "keywords": "Enum XblPreserveSessionMode Namespace XGamingRuntime.Interop public enum XblPreserveSessionMode : uint Fields Always = 1 Never = 2 Unknown = 0"
  },
  "api/XGamingRuntime.Interop.XblRealTimeActivityConnectionState.html": {
    "href": "api/XGamingRuntime.Interop.XblRealTimeActivityConnectionState.html",
    "title": "Enum XblRealTimeActivityConnectionState | |",
    "keywords": "Enum XblRealTimeActivityConnectionState Namespace XGamingRuntime.Interop public enum XblRealTimeActivityConnectionState : uint Fields Connected = 0 Connecting = 1 Disconnected = 2"
  },
  "api/XGamingRuntime.Interop.XblRequestedStatistics.html": {
    "href": "api/XGamingRuntime.Interop.XblRequestedStatistics.html",
    "title": "Struct XblRequestedStatistics | |",
    "keywords": "Struct XblRequestedStatistics Namespace XGamingRuntime.Interop public struct XblRequestedStatistics Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields serviceConfigurationId public sbyte* serviceConfigurationId Field Value sbyte* statistics public sbyte** statistics Field Value sbyte** statisticsCount public uint statisticsCount Field Value uint"
  },
  "api/XGamingRuntime.Interop.XblServiceConfigurationStatistic.html": {
    "href": "api/XGamingRuntime.Interop.XblServiceConfigurationStatistic.html",
    "title": "Struct XblServiceConfigurationStatistic | |",
    "keywords": "Struct XblServiceConfigurationStatistic Namespace XGamingRuntime.Interop public struct XblServiceConfigurationStatistic Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields serviceConfigurationId public sbyte* serviceConfigurationId Field Value sbyte* statistics public XblStatistic* statistics Field Value XblStatistic* statisticsCount public uint statisticsCount Field Value uint"
  },
  "api/XGamingRuntime.Interop.XblSocialNotificationType.html": {
    "href": "api/XGamingRuntime.Interop.XblSocialNotificationType.html",
    "title": "Enum XblSocialNotificationType | |",
    "keywords": "Enum XblSocialNotificationType Namespace XGamingRuntime.Interop public enum XblSocialNotificationType : uint Fields Added = 1 Changed = 2 Removed = 3 Unknown = 0"
  },
  "api/XGamingRuntime.Interop.XblSocialRelationship.html": {
    "href": "api/XGamingRuntime.Interop.XblSocialRelationship.html",
    "title": "Struct XblSocialRelationship | |",
    "keywords": "Struct XblSocialRelationship Namespace XGamingRuntime.Interop public struct XblSocialRelationship Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields isFavorite public bool isFavorite Field Value bool isFollowingCaller public bool isFollowingCaller Field Value bool socialNetworks public sbyte** socialNetworks Field Value sbyte** socialNetworksCount public SizeT socialNetworksCount Field Value SizeT xboxUserId public ulong xboxUserId Field Value ulong"
  },
  "api/XGamingRuntime.Interop.XblSocialRelationshipChangeEventArgs.html": {
    "href": "api/XGamingRuntime.Interop.XblSocialRelationshipChangeEventArgs.html",
    "title": "Struct XblSocialRelationshipChangeEventArgs | |",
    "keywords": "Struct XblSocialRelationshipChangeEventArgs Namespace XGamingRuntime.Interop public struct XblSocialRelationshipChangeEventArgs Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields callerXboxUserId public ulong callerXboxUserId Field Value ulong socialNotification public XblSocialNotificationType socialNotification Field Value XblSocialNotificationType xboxUserIds public ulong* xboxUserIds Field Value ulong* xboxUserIdsCount public SizeT xboxUserIdsCount Field Value SizeT"
  },
  "api/XGamingRuntime.Interop.XblSocialRelationshipChangedHandler.html": {
    "href": "api/XGamingRuntime.Interop.XblSocialRelationshipChangedHandler.html",
    "title": "Delegate XblSocialRelationshipChangedHandler | |",
    "keywords": "Delegate XblSocialRelationshipChangedHandler Namespace XGamingRuntime.Interop public delegate void XblSocialRelationshipChangedHandler(XblSocialRelationshipChangeEventArgs* eventArgs, nint context) Parameters eventArgs XblSocialRelationshipChangeEventArgs* context nint"
  },
  "api/XGamingRuntime.Interop.XblSocialRelationshipFilter.html": {
    "href": "api/XGamingRuntime.Interop.XblSocialRelationshipFilter.html",
    "title": "Enum XblSocialRelationshipFilter | |",
    "keywords": "Enum XblSocialRelationshipFilter Namespace XGamingRuntime.Interop public enum XblSocialRelationshipFilter : uint Fields All = 0 Favorite = 1 LegacyXboxLiveFriends = 2"
  },
  "api/XGamingRuntime.Interop.XblStatistic.html": {
    "href": "api/XGamingRuntime.Interop.XblStatistic.html",
    "title": "Struct XblStatistic | |",
    "keywords": "Struct XblStatistic Namespace XGamingRuntime.Interop public struct XblStatistic Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields statisticName public sbyte* statisticName Field Value sbyte* statisticType public sbyte* statisticType Field Value sbyte* value public sbyte* value Field Value sbyte*"
  },
  "api/XGamingRuntime.Interop.XblStatisticChangeEventArgs.html": {
    "href": "api/XGamingRuntime.Interop.XblStatisticChangeEventArgs.html",
    "title": "Struct XblStatisticChangeEventArgs | |",
    "keywords": "Struct XblStatisticChangeEventArgs Namespace XGamingRuntime.Interop public struct XblStatisticChangeEventArgs Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields latestStatistic public XblStatistic latestStatistic Field Value XblStatistic serviceConfigurationId public sbyte* serviceConfigurationId Field Value sbyte* xboxUserId public ulong xboxUserId Field Value ulong"
  },
  "api/XGamingRuntime.Interop.XblStatisticChangedHandler.html": {
    "href": "api/XGamingRuntime.Interop.XblStatisticChangedHandler.html",
    "title": "Delegate XblStatisticChangedHandler | |",
    "keywords": "Delegate XblStatisticChangedHandler Namespace XGamingRuntime.Interop public delegate void XblStatisticChangedHandler(XblStatisticChangeEventArgs statisticChangeEventArgs, void* context) Parameters statisticChangeEventArgs XblStatisticChangeEventArgs context void*"
  },
  "api/XGamingRuntime.Interop.XblTicketStatus.html": {
    "href": "api/XGamingRuntime.Interop.XblTicketStatus.html",
    "title": "Enum XblTicketStatus | |",
    "keywords": "Enum XblTicketStatus Namespace XGamingRuntime.Interop public enum XblTicketStatus : uint Fields Canceled = 4 Expired = 1 Found = 3 Searching = 2 Unknown = 0"
  },
  "api/XGamingRuntime.Interop.XblUserStatisticsResult.html": {
    "href": "api/XGamingRuntime.Interop.XblUserStatisticsResult.html",
    "title": "Struct XblUserStatisticsResult | |",
    "keywords": "Struct XblUserStatisticsResult Namespace XGamingRuntime.Interop public struct XblUserStatisticsResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields serviceConfigStatistics public XblServiceConfigurationStatistic* serviceConfigStatistics Field Value XblServiceConfigurationStatistic* serviceConfigStatisticsCount public uint serviceConfigStatisticsCount Field Value uint xboxUserId public ulong xboxUserId Field Value ulong"
  },
  "api/XGamingRuntime.Interop.XboxLiveContext.html": {
    "href": "api/XGamingRuntime.Interop.XboxLiveContext.html",
    "title": "Class XboxLiveContext | |",
    "keywords": "Class XboxLiveContext Namespace XGamingRuntime.Interop public static class XboxLiveContext Inheritance object XboxLiveContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods XblContextDuplicateHandle(nint, nint*) public static extern int XblContextDuplicateHandle(nint xboxLiveContextHandle, nint* duplicatedHandle) Parameters xboxLiveContextHandle nint duplicatedHandle nint* Returns int XblContextGetUser(nint, nint*) public static extern int XblContextGetUser(nint context, nint* user) Parameters context nint user nint* Returns int XblContextGetXboxUserId(nint, ulong*) public static extern int XblContextGetXboxUserId(nint context, ulong* xboxUserId) Parameters context nint xboxUserId ulong* Returns int"
  },
  "api/XGamingRuntime.Interop.XboxLiveGlobal.html": {
    "href": "api/XGamingRuntime.Interop.XboxLiveGlobal.html",
    "title": "Class XboxLiveGlobal | |",
    "keywords": "Class XboxLiveGlobal Namespace XGamingRuntime.Interop public static class XboxLiveGlobal Inheritance object XboxLiveGlobal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods XblGetScid(sbyte**) public static extern int XblGetScid(sbyte** scid) Parameters scid sbyte** Returns int"
  },
  "api/XGamingRuntime.Interop.html": {
    "href": "api/XGamingRuntime.Interop.html",
    "title": "Namespace XGamingRuntime.Interop | |",
    "keywords": "Namespace XGamingRuntime.Interop Classes AsyncHelpers Converters DisposableBuffer DisposableCollection HR InteropCallbackManager<TDelegate> Matchmaking Multiplayer RealTimeActivity Social UserStatistics XStore XTaskQueue XboxLiveContext XboxLiveGlobal Structs InteropCallbackManager<TDelegate>.HandlerContext SizeT TimeT XAsyncBlock XAsyncBlockPtr XTaskQueueHandle XTaskQueueRegistrationToken XUserHandle XblContextHandle Handle to an Xbox live context. Needed to interact with Xbox live services. XblCreateMatchTicketResponse XblDeviceToken XblFunctionContext XblHopperStatisticsResponse XblMatchTicketDetailsResponse XblMultiplayerInviteHandle XblMultiplayerMatchmakingServer XblMultiplayerMemberInitialization XblMultiplayerPeerToHostRequirements XblMultiplayerPeerToPeerRequirements XblMultiplayerRole XblMultiplayerRoleType XblMultiplayerSessionCapabilities XblMultiplayerSessionConstants XblMultiplayerSessionHandle Handle to a local multiplayer session. This handle will be used to query and change the local session object. Anytime the changes made to the local session object will not be reflected in the multiplayer service until a subsequent call to XblMultiplayerWriteSessionAsync. XblMultiplayerSessionHandleId XblMultiplayerSessionInfo XblMultiplayerSessionInitializationInfo XblMultiplayerSessionMember XblMultiplayerSessionMemberRole XblMultiplayerSessionQuery XblMultiplayerSessionQueryResult XblMultiplayerSessionReference XblMultiplayerSessionReferenceUri XblRequestedStatistics XblServiceConfigurationStatistic XblSocialRelationship XblSocialRelationshipChangeEventArgs XblStatistic XblStatisticChangeEventArgs XblUserStatisticsResult Enums XTaskQueueDispatchMode XTaskQueuePort XblMultiplayerSessionStatus XblPreserveSessionMode XblRealTimeActivityConnectionState XblSocialNotificationType XblSocialRelationshipFilter XblTicketStatus Delegates RealTimeActivity.XblRealTimeActivityConnectionStateChangeHandler RealTimeActivity.XblRealTimeActivityResyncHandler XAsyncCompletionRoutine XblSocialRelationshipChangedHandler XblStatisticChangedHandler"
  },
  "api/XGamingRuntime.SDK.XBL.XblAchievementsGetAchievementResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblAchievementsGetAchievementResult.html",
    "title": "Delegate SDK.XBL.XblAchievementsGetAchievementResult | |",
    "keywords": "Delegate SDK.XBL.XblAchievementsGetAchievementResult Namespace XGamingRuntime public delegate void SDK.XBL.XblAchievementsGetAchievementResult(int hresult, XblAchievementsResultHandle result) Parameters hresult int result XblAchievementsResultHandle"
  },
  "api/XGamingRuntime.SDK.XBL.XblAchievementsGetAchievementsForTitleIdResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblAchievementsGetAchievementsForTitleIdResult.html",
    "title": "Delegate SDK.XBL.XblAchievementsGetAchievementsForTitleIdResult | |",
    "keywords": "Delegate SDK.XBL.XblAchievementsGetAchievementsForTitleIdResult Namespace XGamingRuntime public delegate void SDK.XBL.XblAchievementsGetAchievementsForTitleIdResult(int hresult, XblAchievementsResultHandle result) Parameters hresult int result XblAchievementsResultHandle"
  },
  "api/XGamingRuntime.SDK.XBL.XblAchievementsResultGetNextResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblAchievementsResultGetNextResult.html",
    "title": "Delegate SDK.XBL.XblAchievementsResultGetNextResult | |",
    "keywords": "Delegate SDK.XBL.XblAchievementsResultGetNextResult Namespace XGamingRuntime public delegate void SDK.XBL.XblAchievementsResultGetNextResult(int hresult, XblAchievementsResultHandle result) Parameters hresult int result XblAchievementsResultHandle"
  },
  "api/XGamingRuntime.SDK.XBL.XblAchievementsUpdateAchievementForTitleIdResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblAchievementsUpdateAchievementForTitleIdResult.html",
    "title": "Delegate SDK.XBL.XblAchievementsUpdateAchievementForTitleIdResult | |",
    "keywords": "Delegate SDK.XBL.XblAchievementsUpdateAchievementForTitleIdResult Namespace XGamingRuntime public delegate void SDK.XBL.XblAchievementsUpdateAchievementForTitleIdResult(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.SDK.XBL.XblAchievementsUpdateAchievementResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblAchievementsUpdateAchievementResult.html",
    "title": "Delegate SDK.XBL.XblAchievementsUpdateAchievementResult | |",
    "keywords": "Delegate SDK.XBL.XblAchievementsUpdateAchievementResult Namespace XGamingRuntime public delegate void SDK.XBL.XblAchievementsUpdateAchievementResult(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.SDK.XBL.XblCleanupResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblCleanupResult.html",
    "title": "Delegate SDK.XBL.XblCleanupResult | |",
    "keywords": "Delegate SDK.XBL.XblCleanupResult Namespace XGamingRuntime public delegate void SDK.XBL.XblCleanupResult(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.SDK.XBL.XblMultiplayerConnectionIdChangedHandler.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblMultiplayerConnectionIdChangedHandler.html",
    "title": "Delegate SDK.XBL.XblMultiplayerConnectionIdChangedHandler | |",
    "keywords": "Delegate SDK.XBL.XblMultiplayerConnectionIdChangedHandler Namespace XGamingRuntime public delegate void SDK.XBL.XblMultiplayerConnectionIdChangedHandler()"
  },
  "api/XGamingRuntime.SDK.XBL.XblMultiplayerCreateSearchHandleResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblMultiplayerCreateSearchHandleResult.html",
    "title": "Delegate SDK.XBL.XblMultiplayerCreateSearchHandleResult | |",
    "keywords": "Delegate SDK.XBL.XblMultiplayerCreateSearchHandleResult Namespace XGamingRuntime public delegate void SDK.XBL.XblMultiplayerCreateSearchHandleResult(int hresult, XblMultiplayerSearchHandle handle) Parameters hresult int handle XblMultiplayerSearchHandle"
  },
  "api/XGamingRuntime.SDK.XBL.XblMultiplayerDeleteSearchHandleResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblMultiplayerDeleteSearchHandleResult.html",
    "title": "Delegate SDK.XBL.XblMultiplayerDeleteSearchHandleResult | |",
    "keywords": "Delegate SDK.XBL.XblMultiplayerDeleteSearchHandleResult Namespace XGamingRuntime public delegate void SDK.XBL.XblMultiplayerDeleteSearchHandleResult(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.SDK.XBL.XblMultiplayerGetActivitiesWithPropertiesResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblMultiplayerGetActivitiesWithPropertiesResult.html",
    "title": "Delegate SDK.XBL.XblMultiplayerGetActivitiesWithPropertiesResult | |",
    "keywords": "Delegate SDK.XBL.XblMultiplayerGetActivitiesWithPropertiesResult Namespace XGamingRuntime public delegate void SDK.XBL.XblMultiplayerGetActivitiesWithPropertiesResult(int hresult, XblMultiplayerActivityDetails[] result) Parameters hresult int result XblMultiplayerActivityDetails[]"
  },
  "api/XGamingRuntime.SDK.XBL.XblMultiplayerGetSearchHandlesResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblMultiplayerGetSearchHandlesResult.html",
    "title": "Delegate SDK.XBL.XblMultiplayerGetSearchHandlesResult | |",
    "keywords": "Delegate SDK.XBL.XblMultiplayerGetSearchHandlesResult Namespace XGamingRuntime public delegate void SDK.XBL.XblMultiplayerGetSearchHandlesResult(int hresult, XblMultiplayerSearchHandle[] searchHandles) Parameters hresult int searchHandles XblMultiplayerSearchHandle[]"
  },
  "api/XGamingRuntime.SDK.XBL.XblMultiplayerQuerySessionsResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblMultiplayerQuerySessionsResult.html",
    "title": "Delegate SDK.XBL.XblMultiplayerQuerySessionsResult | |",
    "keywords": "Delegate SDK.XBL.XblMultiplayerQuerySessionsResult Namespace XGamingRuntime public delegate void SDK.XBL.XblMultiplayerQuerySessionsResult(int hresult, XblMultiplayerSessionQueryResult[] sessionsQueryResult) Parameters hresult int sessionsQueryResult XblMultiplayerSessionQueryResult[]"
  },
  "api/XGamingRuntime.SDK.XBL.XblMultiplayerSessionChangedHandler.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblMultiplayerSessionChangedHandler.html",
    "title": "Delegate SDK.XBL.XblMultiplayerSessionChangedHandler | |",
    "keywords": "Delegate SDK.XBL.XblMultiplayerSessionChangedHandler Namespace XGamingRuntime public delegate void SDK.XBL.XblMultiplayerSessionChangedHandler(XblMultiplayerSessionChangeEventArgs args) Parameters args XblMultiplayerSessionChangeEventArgs"
  },
  "api/XGamingRuntime.SDK.XBL.XblMultiplayerSessionSubscriptionLostHandler.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblMultiplayerSessionSubscriptionLostHandler.html",
    "title": "Delegate SDK.XBL.XblMultiplayerSessionSubscriptionLostHandler | |",
    "keywords": "Delegate SDK.XBL.XblMultiplayerSessionSubscriptionLostHandler Namespace XGamingRuntime public delegate void SDK.XBL.XblMultiplayerSessionSubscriptionLostHandler()"
  },
  "api/XGamingRuntime.SDK.XBL.XblMultiplayerSetTransferHandleResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblMultiplayerSetTransferHandleResult.html",
    "title": "Delegate SDK.XBL.XblMultiplayerSetTransferHandleResult | |",
    "keywords": "Delegate SDK.XBL.XblMultiplayerSetTransferHandleResult Namespace XGamingRuntime public delegate void SDK.XBL.XblMultiplayerSetTransferHandleResult(int hresult, string transferHandle) Parameters hresult int transferHandle string"
  },
  "api/XGamingRuntime.SDK.XBL.XblMultiplayerWriteSessionHandleResult.html": {
    "href": "api/XGamingRuntime.SDK.XBL.XblMultiplayerWriteSessionHandleResult.html",
    "title": "Delegate SDK.XBL.XblMultiplayerWriteSessionHandleResult | |",
    "keywords": "Delegate SDK.XBL.XblMultiplayerWriteSessionHandleResult Namespace XGamingRuntime public delegate void SDK.XBL.XblMultiplayerWriteSessionHandleResult(int hresult, XblMultiplayerSessionHandle handle) Parameters hresult int handle XblMultiplayerSessionHandle"
  },
  "api/XGamingRuntime.SDK.XBL.html": {
    "href": "api/XGamingRuntime.SDK.XBL.html",
    "title": "Class SDK.XBL | |",
    "keywords": "Class SDK.XBL Namespace XGamingRuntime public class SDK.XBL Inheritance object SDK.XBL Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields StandardScidLength public const int StandardScidLength = 36 Field Value int Methods XblAchievementsGetAchievementAsync(XblContextHandle, ulong, string, string, XblAchievementsGetAchievementResult) public static void XblAchievementsGetAchievementAsync(XblContextHandle xboxLiveContext, ulong xboxUserId, string serviceConfigurationId, string achievementId, SDK.XBL.XblAchievementsGetAchievementResult completionRoutine) Parameters xboxLiveContext XblContextHandle xboxUserId ulong serviceConfigurationId string achievementId string completionRoutine SDK.XBL.XblAchievementsGetAchievementResult XblAchievementsGetAchievementsForTitleIdAsync(XblContextHandle, ulong, uint, XblAchievementType, bool, XblAchievementOrderBy, uint, uint, XblAchievementsGetAchievementsForTitleIdResult) public static void XblAchievementsGetAchievementsForTitleIdAsync(XblContextHandle xboxLiveContext, ulong xboxUserId, uint titleId, XblAchievementType type, bool unlockedOnly, XblAchievementOrderBy orderBy, uint skipItems, uint maxItems, SDK.XBL.XblAchievementsGetAchievementsForTitleIdResult completionRoutine) Parameters xboxLiveContext XblContextHandle xboxUserId ulong titleId uint type XblAchievementType unlockedOnly bool orderBy XblAchievementOrderBy skipItems uint maxItems uint completionRoutine SDK.XBL.XblAchievementsGetAchievementsForTitleIdResult XblAchievementsResultCloseHandle(XblAchievementsResultHandle) public static void XblAchievementsResultCloseHandle(XblAchievementsResultHandle handle) Parameters handle XblAchievementsResultHandle XblAchievementsResultDuplicateHandle(XblAchievementsResultHandle, out XblAchievementsResultHandle) public static int XblAchievementsResultDuplicateHandle(XblAchievementsResultHandle handle, out XblAchievementsResultHandle duplicatedHandle) Parameters handle XblAchievementsResultHandle duplicatedHandle XblAchievementsResultHandle Returns int XblAchievementsResultGetAchievements(XblAchievementsResultHandle, out XblAchievement[]) public static int XblAchievementsResultGetAchievements(XblAchievementsResultHandle resultHandle, out XblAchievement[] achievements) Parameters resultHandle XblAchievementsResultHandle achievements XblAchievement[] Returns int XblAchievementsResultGetNextAsync(XblAchievementsResultHandle, uint, XblAchievementsResultGetNextResult) public static void XblAchievementsResultGetNextAsync(XblAchievementsResultHandle resultHandle, uint maxItems, SDK.XBL.XblAchievementsResultGetNextResult completionRoutine) Parameters resultHandle XblAchievementsResultHandle maxItems uint completionRoutine SDK.XBL.XblAchievementsResultGetNextResult XblAchievementsResultHasNext(XblAchievementsResultHandle, out bool) public static int XblAchievementsResultHasNext(XblAchievementsResultHandle resultHandle, out bool hasNext) Parameters resultHandle XblAchievementsResultHandle hasNext bool Returns int XblAchievementsUpdateAchievementAsync(XblContextHandle, ulong, string, uint, XblAchievementsUpdateAchievementResult) public static void XblAchievementsUpdateAchievementAsync(XblContextHandle xboxLiveContext, ulong xboxUserId, string achievementId, uint percentComplete, SDK.XBL.XblAchievementsUpdateAchievementResult completionRoutine) Parameters xboxLiveContext XblContextHandle xboxUserId ulong achievementId string percentComplete uint completionRoutine SDK.XBL.XblAchievementsUpdateAchievementResult XblAchievementsUpdateAchievementForTitleIdAsync(XblContextHandle, ulong, uint, string, string, uint, XblAchievementsUpdateAchievementForTitleIdResult) public static void XblAchievementsUpdateAchievementForTitleIdAsync(XblContextHandle xboxLiveContext, ulong xboxUserId, uint titleId, string serviceConfigurationId, string achievementId, uint percentComplete, SDK.XBL.XblAchievementsUpdateAchievementForTitleIdResult completionRoutine) Parameters xboxLiveContext XblContextHandle xboxUserId ulong titleId uint serviceConfigurationId string achievementId string percentComplete uint completionRoutine SDK.XBL.XblAchievementsUpdateAchievementForTitleIdResult XblCleanup(XblCleanupResult) public static void XblCleanup(SDK.XBL.XblCleanupResult completionRoutine) Parameters completionRoutine SDK.XBL.XblCleanupResult XblContextCloseHandle(XblContextHandle) public static void XblContextCloseHandle(XblContextHandle xboxLiveContextHandle) Parameters xboxLiveContextHandle XblContextHandle XblContextCreateHandle(XUserHandle, out XblContextHandle) public static int XblContextCreateHandle(XUserHandle user, out XblContextHandle context) Parameters user XUserHandle context XblContextHandle Returns int XblContextDuplicateHandle(XblContextHandle, out XblContextHandle) Wraps the underlying native XblContextDuplicateHandle API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/xbox_live_context_c/functions/xblcontextduplicatehandle public static int XblContextDuplicateHandle(XblContextHandle srcXboxLiveContextHandle, out XblContextHandle dstXboxLiveContextHandle) Parameters srcXboxLiveContextHandle XblContextHandle dstXboxLiveContextHandle XblContextHandle Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblContextGetUser(XblContextHandle, out XUserHandle) Wraps the underlying native XblContextGetUser API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/xbox_live_context_c/functions/xblcontextgetuser public static int XblContextGetUser(XblContextHandle xboxLiveContextHandle, out XUserHandle dstUserHandle) Parameters xboxLiveContextHandle XblContextHandle dstUserHandle XUserHandle Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblContextGetXboxUserId(XblContextHandle, ref ulong) Wraps the underlying native XblContextGetXboxUserId API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/xbox_live_context_c/functions/xblcontextgetxboxuserid public static int XblContextGetXboxUserId(XblContextHandle xboxLiveContextHandle, ref ulong dstXboxUserId) Parameters xboxLiveContextHandle XblContextHandle dstXboxUserId ulong Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblEventsWriteInGameEvent(XblContextHandle, string, string, string) public static int XblEventsWriteInGameEvent(XblContextHandle xboxLiveContext, string eventName, string dimensionsJson, string measurementsJson) Parameters xboxLiveContext XblContextHandle eventName string dimensionsJson string measurementsJson string Returns int XblFormatSecureDeviceAddress(string, out string) public static int XblFormatSecureDeviceAddress(string deviceId, out string address) Parameters deviceId string address string Returns int XblGetErrorCondition(int) public static XblErrorCondition XblGetErrorCondition(int hr) Parameters hr int Returns XblErrorCondition XblGetHRESULT(int) public static XblHresult XblGetHRESULT(int hr) Parameters hr int Returns XblHresult XblGetScid(ref string) Wraps the underlying native XblGetScid API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/xbox_live_global_c/functions/xblgetscid public static int XblGetScid(ref string resultScid) Parameters resultScid string Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblHttpCallCloseHandle(XblHttpCallHandle) public static void XblHttpCallCloseHandle(XblHttpCallHandle call) Parameters call XblHttpCallHandle XblHttpCallCreate(XblContextHandle, string, string, out XblHttpCallHandle) public static int XblHttpCallCreate(XblContextHandle xblContext, string method, string url, out XblHttpCallHandle call) Parameters xblContext XblContextHandle method string url string call XblHttpCallHandle Returns int XblHttpCallDuplicateHandle(XblHttpCallHandle, out XblHttpCallHandle) public static int XblHttpCallDuplicateHandle(XblHttpCallHandle call, out XblHttpCallHandle duplicateHandle) Parameters call XblHttpCallHandle duplicateHandle XblHttpCallHandle Returns int XblHttpCallGetHeader(XblHttpCallHandle, string, out string) public static int XblHttpCallGetHeader(XblHttpCallHandle call, string headerName, out string headerValue) Parameters call XblHttpCallHandle headerName string headerValue string Returns int XblHttpCallGetHeaderAtIndex(XblHttpCallHandle, uint, out string, out string) public static int XblHttpCallGetHeaderAtIndex(XblHttpCallHandle call, uint headerIndex, out string headerName, out string headerValue) Parameters call XblHttpCallHandle headerIndex uint headerName string headerValue string Returns int XblHttpCallGetNetworkErrorCode(XblHttpCallHandle, out int, out uint) public static int XblHttpCallGetNetworkErrorCode(XblHttpCallHandle call, out int networkErrorCode, out uint platformNetworkErrorCode) Parameters call XblHttpCallHandle networkErrorCode int platformNetworkErrorCode uint Returns int XblHttpCallGetNumHeaders(XblHttpCallHandle, out uint) public static int XblHttpCallGetNumHeaders(XblHttpCallHandle call, out uint numHeaders) Parameters call XblHttpCallHandle numHeaders uint Returns int XblHttpCallGetPlatformNetworkErrorMessage(XblHttpCallHandle, out string) public static int XblHttpCallGetPlatformNetworkErrorMessage(XblHttpCallHandle call, out string platformNetworkErrorMessage) Parameters call XblHttpCallHandle platformNetworkErrorMessage string Returns int XblHttpCallGetRequestUrl(XblHttpCallHandle, out string) public static int XblHttpCallGetRequestUrl(XblHttpCallHandle call, out string url) Parameters call XblHttpCallHandle url string Returns int XblHttpCallGetResponseBodyBytes(XblHttpCallHandle, out byte[]) public static int XblHttpCallGetResponseBodyBytes(XblHttpCallHandle call, out byte[] buffer) Parameters call XblHttpCallHandle buffer byte[] Returns int XblHttpCallGetResponseString(XblHttpCallHandle, out string) public static int XblHttpCallGetResponseString(XblHttpCallHandle call, out string responseString) Parameters call XblHttpCallHandle responseString string Returns int XblHttpCallGetStatusCode(XblHttpCallHandle, out uint) public static int XblHttpCallGetStatusCode(XblHttpCallHandle call, out uint statusCode) Parameters call XblHttpCallHandle statusCode uint Returns int XblHttpCallPerformAsync(XblHttpCallHandle, XblHttpCallResponseBodyType, XblHttpCallPerformCompleted) public static void XblHttpCallPerformAsync(XblHttpCallHandle call, XblHttpCallResponseBodyType type, XblHttpCallPerformCompleted completionRoutine) Parameters call XblHttpCallHandle type XblHttpCallResponseBodyType completionRoutine XblHttpCallPerformCompleted XblHttpCallRequestSetHeader(XblHttpCallHandle, string, string, bool) public static int XblHttpCallRequestSetHeader(XblHttpCallHandle call, string headerName, string headerValue, bool allowTracing) Parameters call XblHttpCallHandle headerName string headerValue string allowTracing bool Returns int XblHttpCallRequestSetLongHttpCall(XblHttpCallHandle, bool) public static int XblHttpCallRequestSetLongHttpCall(XblHttpCallHandle call, bool longHttpCall) Parameters call XblHttpCallHandle longHttpCall bool Returns int XblHttpCallRequestSetRequestBodyBytes(XblHttpCallHandle, byte[]) public static int XblHttpCallRequestSetRequestBodyBytes(XblHttpCallHandle call, byte[] requestBodyBytes) Parameters call XblHttpCallHandle requestBodyBytes byte[] Returns int XblHttpCallRequestSetRequestBodyString(XblHttpCallHandle, string) public static int XblHttpCallRequestSetRequestBodyString(XblHttpCallHandle call, string requestBodyString) Parameters call XblHttpCallHandle requestBodyString string Returns int XblHttpCallRequestSetRetryAllowed(XblHttpCallHandle, bool) public static int XblHttpCallRequestSetRetryAllowed(XblHttpCallHandle call, bool retryAllowed) Parameters call XblHttpCallHandle retryAllowed bool Returns int XblHttpCallRequestSetRetryCacheId(XblHttpCallHandle, uint) public static int XblHttpCallRequestSetRetryCacheId(XblHttpCallHandle call, uint retryAfterCacheId) Parameters call XblHttpCallHandle retryAfterCacheId uint Returns int XblHttpCallSetTracing(XblHttpCallHandle, bool) public static int XblHttpCallSetTracing(XblHttpCallHandle call, bool traceCall) Parameters call XblHttpCallHandle traceCall bool Returns int XblInitialize(string) public static int XblInitialize(string scid) Parameters scid string Returns int XblLeaderboardGetLeaderboardAsync(XblContextHandle, XblLeaderboardQuery, XblLeaderboardGetLeaderboardCompleted) public static void XblLeaderboardGetLeaderboardAsync(XblContextHandle xboxLiveContext, XblLeaderboardQuery leaderboardQuery, XblLeaderboardGetLeaderboardCompleted completionRoutine) Parameters xboxLiveContext XblContextHandle leaderboardQuery XblLeaderboardQuery completionRoutine XblLeaderboardGetLeaderboardCompleted XblLeaderboardResultGetNextAsync(XblContextHandle, XblLeaderboardResult, uint, XblLeaderboardGetNextCompleted) public static void XblLeaderboardResultGetNextAsync(XblContextHandle xboxLiveContext, XblLeaderboardResult leaderboardResult, uint maxItems, XblLeaderboardGetNextCompleted completionRoutine) Parameters xboxLiveContext XblContextHandle leaderboardResult XblLeaderboardResult maxItems uint completionRoutine XblLeaderboardGetNextCompleted XblMatchmakingCreateMatchTicketAsync(XblContextHandle, XblMultiplayerSessionReference, string, string, ulong, XblPreserveSessionMode, string, XblMatchmakingCreateTicketCallback) public static int XblMatchmakingCreateMatchTicketAsync(XblContextHandle xboxLiveContext, XblMultiplayerSessionReference sessionReference, string serviceConfigurationId, string hopperName, ulong ticketTimeout, XblPreserveSessionMode preserveSessionMode, string ticketAttributesJson, XblMatchmakingCreateTicketCallback createCompletionCallback) Parameters xboxLiveContext XblContextHandle sessionReference XblMultiplayerSessionReference serviceConfigurationId string hopperName string ticketTimeout ulong preserveSessionMode XblPreserveSessionMode ticketAttributesJson string createCompletionCallback XblMatchmakingCreateTicketCallback Returns int XblMatchmakingDeleteMatchTicketAsync(XblContextHandle, string, string, string, XblMatchmakingDeleteTicketCallback) public static int XblMatchmakingDeleteMatchTicketAsync(XblContextHandle xboxLiveContext, string serviceConfigurationId, string hopperName, string matchTicketId, XblMatchmakingDeleteTicketCallback deleteCompletionCallback) Parameters xboxLiveContext XblContextHandle serviceConfigurationId string hopperName string matchTicketId string deleteCompletionCallback XblMatchmakingDeleteTicketCallback Returns int XblMatchmakingGetHopperStatisticsAsync(XblContextHandle, string, string, XblMatchmakingStatisticsCallback) public static int XblMatchmakingGetHopperStatisticsAsync(XblContextHandle xboxLiveContext, string serviceConfigurationId, string hopperName, XblMatchmakingStatisticsCallback completionCallback) Parameters xboxLiveContext XblContextHandle serviceConfigurationId string hopperName string completionCallback XblMatchmakingStatisticsCallback Returns int XblMatchmakingGetMatchTicketDetailsAsync(XblContextHandle, string, string, string, XblMatchmakingTicketDetailsCallback) public static int XblMatchmakingGetMatchTicketDetailsAsync(XblContextHandle xboxLiveContext, string serviceConfigurationId, string hopperName, string matchTicketId, XblMatchmakingTicketDetailsCallback completionCallback) Parameters xboxLiveContext XblContextHandle serviceConfigurationId string hopperName string matchTicketId string completionCallback XblMatchmakingTicketDetailsCallback Returns int XblMultiplayerActivityDeleteActivityAsync(XblContextHandle, XblMultiplayerActivityOperationCompleted) public static void XblMultiplayerActivityDeleteActivityAsync(XblContextHandle xblContextHandle, XblMultiplayerActivityOperationCompleted completionRoutine) Parameters xblContextHandle XblContextHandle completionRoutine XblMultiplayerActivityOperationCompleted XblMultiplayerActivityFlushRecentPlayersAsync(XblContextHandle, XblMultiplayerActivityOperationCompleted) public static void XblMultiplayerActivityFlushRecentPlayersAsync(XblContextHandle xblContextHandle, XblMultiplayerActivityOperationCompleted completionRoutine) Parameters xblContextHandle XblContextHandle completionRoutine XblMultiplayerActivityOperationCompleted XblMultiplayerActivityGetActivityAsync(XblContextHandle, ulong[], XblMultiplayerActivityGetActivityCompleted) public static void XblMultiplayerActivityGetActivityAsync(XblContextHandle xblContextHandle, ulong[] xuids, XblMultiplayerActivityGetActivityCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xuids ulong[] completionRoutine XblMultiplayerActivityGetActivityCompleted XblMultiplayerActivitySendInvitesAsync(XblContextHandle, ulong[], bool, string, XblMultiplayerActivityOperationCompleted) public static void XblMultiplayerActivitySendInvitesAsync(XblContextHandle xblContextHandle, ulong[] xuids, bool allowCrossPlatformJoin, string connectionString, XblMultiplayerActivityOperationCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xuids ulong[] allowCrossPlatformJoin bool connectionString string completionRoutine XblMultiplayerActivityOperationCompleted XblMultiplayerActivitySendInvitesAsync(XblContextHandle, ulong[], bool, XblMultiplayerActivityOperationCompleted) public static void XblMultiplayerActivitySendInvitesAsync(XblContextHandle xblContextHandle, ulong[] xuids, bool allowCrossPlatformJoin, XblMultiplayerActivityOperationCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xuids ulong[] allowCrossPlatformJoin bool completionRoutine XblMultiplayerActivityOperationCompleted XblMultiplayerActivitySetActivityAsync(XblContextHandle, XblMultiplayerActivityInfo, bool, XblMultiplayerActivityOperationCompleted) public static void XblMultiplayerActivitySetActivityAsync(XblContextHandle xblContextHandle, XblMultiplayerActivityInfo activityInfo, bool allowCrossPlatformJoin, XblMultiplayerActivityOperationCompleted completionRoutine) Parameters xblContextHandle XblContextHandle activityInfo XblMultiplayerActivityInfo allowCrossPlatformJoin bool completionRoutine XblMultiplayerActivityOperationCompleted XblMultiplayerActivityUpdateRecentPlayers(XblContextHandle, XblMultiplayerActivityRecentPlayerUpdate[]) public static int XblMultiplayerActivityUpdateRecentPlayers(XblContextHandle xblContextHandle, XblMultiplayerActivityRecentPlayerUpdate[] recentPlayerUpdates) Parameters xblContextHandle XblContextHandle recentPlayerUpdates XblMultiplayerActivityRecentPlayerUpdate[] Returns int XblMultiplayerAddConnectionIdChangedHandler(XblContextHandle, XblConnectionIdChangedCallback) public static XblMultiplayerHandlerCallbackToken XblMultiplayerAddConnectionIdChangedHandler(XblContextHandle xboxLiveContext, XblConnectionIdChangedCallback callback) Parameters xboxLiveContext XblContextHandle callback XblConnectionIdChangedCallback Returns XblMultiplayerHandlerCallbackToken XblMultiplayerAddSessionChangedHandler(XblContextHandle, XblSessionChangedCallback) public static XblMultiplayerHandlerCallbackToken XblMultiplayerAddSessionChangedHandler(XblContextHandle xboxLiveContext, XblSessionChangedCallback callback) Parameters xboxLiveContext XblContextHandle callback XblSessionChangedCallback Returns XblMultiplayerHandlerCallbackToken XblMultiplayerAddSubscriptionLostHandler(XblContextHandle, XblSubscriptionLostCallback) public static XblMultiplayerHandlerCallbackToken XblMultiplayerAddSubscriptionLostHandler(XblContextHandle xboxLiveContext, XblSubscriptionLostCallback callback) Parameters xboxLiveContext XblContextHandle callback XblSubscriptionLostCallback Returns XblMultiplayerHandlerCallbackToken XblMultiplayerClearActivityAsync(XblContextHandle, string, XblActivityCompletionCallback) Wraps the underlying native XblMultiplayerClearActivityAsync API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayerclearactivityasync public static int XblMultiplayerClearActivityAsync(XblContextHandle xboxLiveContext, string serviceConfigurationId, XblActivityCompletionCallback completionCallback) Parameters xboxLiveContext XblContextHandle serviceConfigurationId string completionCallback XblActivityCompletionCallback Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerCreateSearchHandleAsync(XblContextHandle, XblMultiplayerSessionReference, XblMultiplayerSessionTag[], XblMultiplayerSessionNumberAttribute[], XblMultiplayerSessionStringAttribute[], XblMultiplayerCreateSearchHandleResult) public static void XblMultiplayerCreateSearchHandleAsync(XblContextHandle xblContext, XblMultiplayerSessionReference sessionRef, XblMultiplayerSessionTag[] tags, XblMultiplayerSessionNumberAttribute[] numberAttributes, XblMultiplayerSessionStringAttribute[] stringAttributes, SDK.XBL.XblMultiplayerCreateSearchHandleResult completionRoutine) Parameters xblContext XblContextHandle sessionRef XblMultiplayerSessionReference tags XblMultiplayerSessionTag[] numberAttributes XblMultiplayerSessionNumberAttribute[] stringAttributes XblMultiplayerSessionStringAttribute[] completionRoutine SDK.XBL.XblMultiplayerCreateSearchHandleResult XblMultiplayerDeleteSearchHandleAsync(XblContextHandle, string, XblMultiplayerDeleteSearchHandleResult) public static void XblMultiplayerDeleteSearchHandleAsync(XblContextHandle xblContext, string handleId, SDK.XBL.XblMultiplayerDeleteSearchHandleResult completionRoutine) Parameters xblContext XblContextHandle handleId string completionRoutine SDK.XBL.XblMultiplayerDeleteSearchHandleResult XblMultiplayerEventArgsFindMatchCompleted(XblMultiplayerEventArgsHandle, out XblMultiplayerMatchStatus, out XblMultiplayerMeasurementFailure) public static int XblMultiplayerEventArgsFindMatchCompleted(XblMultiplayerEventArgsHandle argsHandle, out XblMultiplayerMatchStatus matchStatus, out XblMultiplayerMeasurementFailure initializationFailureCause) Parameters argsHandle XblMultiplayerEventArgsHandle matchStatus XblMultiplayerMatchStatus initializationFailureCause XblMultiplayerMeasurementFailure Returns int XblMultiplayerEventArgsMember(XblMultiplayerEventArgsHandle, out XblMultiplayerManagerMember) public static int XblMultiplayerEventArgsMember(XblMultiplayerEventArgsHandle argsHandle, out XblMultiplayerManagerMember member) Parameters argsHandle XblMultiplayerEventArgsHandle member XblMultiplayerManagerMember Returns int XblMultiplayerEventArgsMembers(XblMultiplayerEventArgsHandle, out XblMultiplayerManagerMember[]) public static int XblMultiplayerEventArgsMembers(XblMultiplayerEventArgsHandle argsHandle, out XblMultiplayerManagerMember[] members) Parameters argsHandle XblMultiplayerEventArgsHandle members XblMultiplayerManagerMember[] Returns int XblMultiplayerEventArgsPerformQoSMeasurements(XblMultiplayerEventArgsHandle, out XblMultiplayerPerformQoSMeasurementsArgs) public static int XblMultiplayerEventArgsPerformQoSMeasurements(XblMultiplayerEventArgsHandle argsHandle, out XblMultiplayerPerformQoSMeasurementsArgs performQoSMeasurementsArgs) Parameters argsHandle XblMultiplayerEventArgsHandle performQoSMeasurementsArgs XblMultiplayerPerformQoSMeasurementsArgs Returns int XblMultiplayerEventArgsPropertiesJson(XblMultiplayerEventArgsHandle, out string) public static int XblMultiplayerEventArgsPropertiesJson(XblMultiplayerEventArgsHandle argsHandle, out string properties) Parameters argsHandle XblMultiplayerEventArgsHandle properties string Returns int XblMultiplayerEventArgsTournamentGameSessionReady(XblMultiplayerEventArgsHandle, out DateTime) Deprecated public static int XblMultiplayerEventArgsTournamentGameSessionReady(XblMultiplayerEventArgsHandle argsHandle, out DateTime startTime) Parameters argsHandle XblMultiplayerEventArgsHandle startTime DateTime Returns int XblMultiplayerEventArgsTournamentRegistrationStateChanged(XblMultiplayerEventArgsHandle, out XblTournamentRegistrationState, out XblTournamentRegistrationReason) Deprecated public static int XblMultiplayerEventArgsTournamentRegistrationStateChanged(XblMultiplayerEventArgsHandle argsHandle, out XblTournamentRegistrationState registrationState, out XblTournamentRegistrationReason registrationReason) Parameters argsHandle XblMultiplayerEventArgsHandle registrationState XblTournamentRegistrationState registrationReason XblTournamentRegistrationReason Returns int XblMultiplayerEventArgsXuid(XblMultiplayerEventArgsHandle, out ulong) public static int XblMultiplayerEventArgsXuid(XblMultiplayerEventArgsHandle argsHandle, out ulong xuid) Parameters argsHandle XblMultiplayerEventArgsHandle xuid ulong Returns int XblMultiplayerGetActivitiesWithPropertiesForSocialGroupAsync(XblContextHandle, string, ulong, string, XblMultiplayerGetActivitiesWithPropertiesResult) public static void XblMultiplayerGetActivitiesWithPropertiesForSocialGroupAsync(XblContextHandle xboxLiveContext, string scid, ulong socialGroupOwnerXuid, string socialGroup, SDK.XBL.XblMultiplayerGetActivitiesWithPropertiesResult completionRoutine) Parameters xboxLiveContext XblContextHandle scid string socialGroupOwnerXuid ulong socialGroup string completionRoutine SDK.XBL.XblMultiplayerGetActivitiesWithPropertiesResult XblMultiplayerGetActivitiesWithPropertiesForUsersAsync(XblContextHandle, string, ulong[], XblMultiplayerGetActivitiesWithPropertiesResult) public static void XblMultiplayerGetActivitiesWithPropertiesForUsersAsync(XblContextHandle xboxLiveContext, string scid, ulong[] xuids, SDK.XBL.XblMultiplayerGetActivitiesWithPropertiesResult completionRoutine) Parameters xboxLiveContext XblContextHandle scid string xuids ulong[] completionRoutine SDK.XBL.XblMultiplayerGetActivitiesWithPropertiesResult XblMultiplayerGetSearchHandlesAsync(XblContextHandle, string, string, string, bool, string, string, XblMultiplayerGetSearchHandlesResult) public static void XblMultiplayerGetSearchHandlesAsync(XblContextHandle xboxLiveContext, string scid, string sessionTemplateName, string orderByAttribute, bool orderAscending, string searchFilter, string socialGroup, SDK.XBL.XblMultiplayerGetSearchHandlesResult completionRoutine) Parameters xboxLiveContext XblContextHandle scid string sessionTemplateName string orderByAttribute string orderAscending bool searchFilter string socialGroup string completionRoutine SDK.XBL.XblMultiplayerGetSearchHandlesResult XblMultiplayerGetSessionAsync(XblContextHandle, XblMultiplayerSessionReference, XblGetSessionCallback) Wraps the underlying native XblMultiplayerGetSessionAsync API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayergetsessionasync public static int XblMultiplayerGetSessionAsync(XblContextHandle xboxLiveContext, XblMultiplayerSessionReference sessionReference, XblGetSessionCallback completionCallback) Parameters xboxLiveContext XblContextHandle sessionReference XblMultiplayerSessionReference completionCallback XblGetSessionCallback Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerGetSessionByHandleAsync(XblContextHandle, string, XblGetSessionCallback) Wraps the underlying native XblMultiplayerGetSessionByHandleAsync API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayergetsessionbyhandleasync public static int XblMultiplayerGetSessionByHandleAsync(XblContextHandle xboxLiveContext, string sessionHandleId, XblGetSessionCallback completionCallback) Parameters xboxLiveContext XblContextHandle sessionHandleId string completionCallback XblGetSessionCallback Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerManagerAutoFillMembersDuringMatchmaking() public static bool XblMultiplayerManagerAutoFillMembersDuringMatchmaking() Returns bool XblMultiplayerManagerCancelMatch() public static void XblMultiplayerManagerCancelMatch() XblMultiplayerManagerDoWork(out XblMultiplayerEvent[]) public static int XblMultiplayerManagerDoWork(out XblMultiplayerEvent[] events) Parameters events XblMultiplayerEvent[] Returns int XblMultiplayerManagerEstimatedMatchWaitTime() public static uint XblMultiplayerManagerEstimatedMatchWaitTime() Returns uint XblMultiplayerManagerFindMatch(string, string, uint) public static int XblMultiplayerManagerFindMatch(string hopperName, string attributesJson, uint timeoutInSeconds) Parameters hopperName string attributesJson string timeoutInSeconds uint Returns int XblMultiplayerManagerGameSessionActive() public static bool XblMultiplayerManagerGameSessionActive() Returns bool XblMultiplayerManagerGameSessionConstants() public static XblMultiplayerSessionConstants XblMultiplayerManagerGameSessionConstants() Returns XblMultiplayerSessionConstants XblMultiplayerManagerGameSessionCorrelationId() public static string XblMultiplayerManagerGameSessionCorrelationId() Returns string XblMultiplayerManagerGameSessionHost(out XblMultiplayerManagerMember) public static int XblMultiplayerManagerGameSessionHost(out XblMultiplayerManagerMember hostMember) Parameters hostMember XblMultiplayerManagerMember Returns int XblMultiplayerManagerGameSessionIsHost(ulong) public static bool XblMultiplayerManagerGameSessionIsHost(ulong xuid) Parameters xuid ulong Returns bool XblMultiplayerManagerGameSessionMembers(out XblMultiplayerManagerMember[]) public static int XblMultiplayerManagerGameSessionMembers(out XblMultiplayerManagerMember[] members) Parameters members XblMultiplayerManagerMember[] Returns int XblMultiplayerManagerGameSessionPropertiesJson() public static string XblMultiplayerManagerGameSessionPropertiesJson() Returns string XblMultiplayerManagerGameSessionSessionReference() public static XblMultiplayerSessionReference XblMultiplayerManagerGameSessionSessionReference() Returns XblMultiplayerSessionReference XblMultiplayerManagerGameSessionSetProperties(string, string, object) public static int XblMultiplayerManagerGameSessionSetProperties(string name, string valueJson, object context) Parameters name string valueJson string context object Returns int XblMultiplayerManagerGameSessionSetSynchronizedHost(string, object) public static int XblMultiplayerManagerGameSessionSetSynchronizedHost(string deviceToken, object context) Parameters deviceToken string context object Returns int XblMultiplayerManagerGameSessionSetSynchronizedProperties(string, string, object) public static int XblMultiplayerManagerGameSessionSetSynchronizedProperties(string name, string valueJson, object context) Parameters name string valueJson string context object Returns int XblMultiplayerManagerInitialize(string) public static int XblMultiplayerManagerInitialize(string lobbySessionTemplateName) Parameters lobbySessionTemplateName string Returns int XblMultiplayerManagerJoinGame(string, string, ulong[]) public static int XblMultiplayerManagerJoinGame(string sessionName, string sessionTemplateName, ulong[] xuids) Parameters sessionName string sessionTemplateName string xuids ulong[] Returns int XblMultiplayerManagerJoinGameFromLobby(string) public static int XblMultiplayerManagerJoinGameFromLobby(string sessionTemplateName) Parameters sessionTemplateName string Returns int XblMultiplayerManagerJoinLobby(string, XUserHandle) public static int XblMultiplayerManagerJoinLobby(string handleId, XUserHandle user) Parameters handleId string user XUserHandle Returns int XblMultiplayerManagerJoinability() public static XblMultiplayerJoinability XblMultiplayerManagerJoinability() Returns XblMultiplayerJoinability XblMultiplayerManagerLeaveGame() public static int XblMultiplayerManagerLeaveGame() Returns int XblMultiplayerManagerLobbySessionAddLocalUser(XUserHandle) public static int XblMultiplayerManagerLobbySessionAddLocalUser(XUserHandle user) Parameters user XUserHandle Returns int XblMultiplayerManagerLobbySessionConstants() public static XblMultiplayerSessionConstants XblMultiplayerManagerLobbySessionConstants() Returns XblMultiplayerSessionConstants XblMultiplayerManagerLobbySessionCorrelationId(out XblGuid) public static int XblMultiplayerManagerLobbySessionCorrelationId(out XblGuid correlationId) Parameters correlationId XblGuid Returns int XblMultiplayerManagerLobbySessionDeleteLocalMemberProperties(XUserHandle, string, object) public static int XblMultiplayerManagerLobbySessionDeleteLocalMemberProperties(XUserHandle user, string name, object context) Parameters user XUserHandle name string context object Returns int XblMultiplayerManagerLobbySessionHost(out XblMultiplayerManagerMember) public static int XblMultiplayerManagerLobbySessionHost(out XblMultiplayerManagerMember hostMember) Parameters hostMember XblMultiplayerManagerMember Returns int XblMultiplayerManagerLobbySessionInviteFriends(XUserHandle, string, string) public static int XblMultiplayerManagerLobbySessionInviteFriends(XUserHandle requestingUser, string contextStringId, string customActivationContext) Parameters requestingUser XUserHandle contextStringId string customActivationContext string Returns int XblMultiplayerManagerLobbySessionInviteUsers(XUserHandle, ulong[], string, string) public static int XblMultiplayerManagerLobbySessionInviteUsers(XUserHandle user, ulong[] xuids, string contextStringId, string customActivationContext) Parameters user XUserHandle xuids ulong[] contextStringId string customActivationContext string Returns int XblMultiplayerManagerLobbySessionIsHost(ulong) public static bool XblMultiplayerManagerLobbySessionIsHost(ulong xuid) Parameters xuid ulong Returns bool XblMultiplayerManagerLobbySessionLastTournamentTeamResult() Deprecated public static XblTournamentTeamResult XblMultiplayerManagerLobbySessionLastTournamentTeamResult() Returns XblTournamentTeamResult XblMultiplayerManagerLobbySessionLocalMembers(out XblMultiplayerManagerMember[]) public static int XblMultiplayerManagerLobbySessionLocalMembers(out XblMultiplayerManagerMember[] localMembers) Parameters localMembers XblMultiplayerManagerMember[] Returns int XblMultiplayerManagerLobbySessionMembers(out XblMultiplayerManagerMember[]) public static int XblMultiplayerManagerLobbySessionMembers(out XblMultiplayerManagerMember[] members) Parameters members XblMultiplayerManagerMember[] Returns int XblMultiplayerManagerLobbySessionPropertiesJson() public static string XblMultiplayerManagerLobbySessionPropertiesJson() Returns string XblMultiplayerManagerLobbySessionRemoveLocalUser(XUserHandle) public static int XblMultiplayerManagerLobbySessionRemoveLocalUser(XUserHandle user) Parameters user XUserHandle Returns int XblMultiplayerManagerLobbySessionSessionReference(out XblMultiplayerSessionReference) public static int XblMultiplayerManagerLobbySessionSessionReference(out XblMultiplayerSessionReference sessionReference) Parameters sessionReference XblMultiplayerSessionReference Returns int XblMultiplayerManagerLobbySessionSetLocalMemberConnectionAddress(XUserHandle, string, object) public static int XblMultiplayerManagerLobbySessionSetLocalMemberConnectionAddress(XUserHandle user, string connectionAddress, object context) Parameters user XUserHandle connectionAddress string context object Returns int XblMultiplayerManagerLobbySessionSetLocalMemberProperties(XUserHandle, string, string, object) public static int XblMultiplayerManagerLobbySessionSetLocalMemberProperties(XUserHandle user, string name, string valueJson, object context) Parameters user XUserHandle name string valueJson string context object Returns int XblMultiplayerManagerLobbySessionSetProperties(string, string, object) public static int XblMultiplayerManagerLobbySessionSetProperties(string name, string valueJson, object context) Parameters name string valueJson string context object Returns int XblMultiplayerManagerLobbySessionSetSynchronizedHost(string, object) public static int XblMultiplayerManagerLobbySessionSetSynchronizedHost(string deviceToken, object context) Parameters deviceToken string context object Returns int XblMultiplayerManagerLobbySessionSetSynchronizedProperties(string, string, object) public static int XblMultiplayerManagerLobbySessionSetSynchronizedProperties(string name, string valueJson, object context) Parameters name string valueJson string context object Returns int XblMultiplayerManagerMatchStatus() public static XblMultiplayerMatchStatus XblMultiplayerManagerMatchStatus() Returns XblMultiplayerMatchStatus XblMultiplayerManagerMemberAreMembersOnSameDevice(XblMultiplayerManagerMember, XblMultiplayerManagerMember) public static bool XblMultiplayerManagerMemberAreMembersOnSameDevice(XblMultiplayerManagerMember first, XblMultiplayerManagerMember second) Parameters first XblMultiplayerManagerMember second XblMultiplayerManagerMember Returns bool XblMultiplayerManagerSetAutoFillMembersDuringMatchmaking(bool) public static void XblMultiplayerManagerSetAutoFillMembersDuringMatchmaking(bool autoFillMembers) Parameters autoFillMembers bool XblMultiplayerManagerSetJoinability(XblMultiplayerJoinability, object) public static int XblMultiplayerManagerSetJoinability(XblMultiplayerJoinability joinability, object context) Parameters joinability XblMultiplayerJoinability context object Returns int XblMultiplayerManagerSetQosMeasurements(string) public static int XblMultiplayerManagerSetQosMeasurements(string measurementsJson) Parameters measurementsJson string Returns int XblMultiplayerQuerySessionsAsync(XblContextHandle, XblMultiplayerSessionQuery, XblMultiplayerQuerySessionsResult) public static int XblMultiplayerQuerySessionsAsync(XblContextHandle xblContext, XblMultiplayerSessionQuery sessionQuery, SDK.XBL.XblMultiplayerQuerySessionsResult completionRoutine) Parameters xblContext XblContextHandle sessionQuery XblMultiplayerSessionQuery completionRoutine SDK.XBL.XblMultiplayerQuerySessionsResult Returns int XblMultiplayerRemoveConnectionIdChangedHandler(XblContextHandle, ref XblMultiplayerHandlerCallbackToken) public static int XblMultiplayerRemoveConnectionIdChangedHandler(XblContextHandle xboxLiveContext, ref XblMultiplayerHandlerCallbackToken connectionIdChangedCallbackToken) Parameters xboxLiveContext XblContextHandle connectionIdChangedCallbackToken XblMultiplayerHandlerCallbackToken Returns int XblMultiplayerRemoveSessionChangedHandler(XblContextHandle, ref XblMultiplayerHandlerCallbackToken) public static int XblMultiplayerRemoveSessionChangedHandler(XblContextHandle xboxLiveContext, ref XblMultiplayerHandlerCallbackToken sessionChangedCallbackToken) Parameters xboxLiveContext XblContextHandle sessionChangedCallbackToken XblMultiplayerHandlerCallbackToken Returns int XblMultiplayerRemoveSubscriptionLostHandler(XblContextHandle, ref XblMultiplayerHandlerCallbackToken) public static int XblMultiplayerRemoveSubscriptionLostHandler(XblContextHandle xboxLiveContext, ref XblMultiplayerHandlerCallbackToken subscriptionLostCallbackToken) Parameters xboxLiveContext XblContextHandle subscriptionLostCallbackToken XblMultiplayerHandlerCallbackToken Returns int XblMultiplayerSearchHandleCloseHandle(XblMultiplayerSearchHandle) public static void XblMultiplayerSearchHandleCloseHandle(XblMultiplayerSearchHandle handle) Parameters handle XblMultiplayerSearchHandle XblMultiplayerSearchHandleDuplicateHandle(XblMultiplayerSearchHandle, out XblMultiplayerSearchHandle) public static int XblMultiplayerSearchHandleDuplicateHandle(XblMultiplayerSearchHandle handle, out XblMultiplayerSearchHandle duplicatedHandle) Parameters handle XblMultiplayerSearchHandle duplicatedHandle XblMultiplayerSearchHandle Returns int XblMultiplayerSearchHandleGetCreationTime(XblMultiplayerSearchHandle, out DateTime) public static int XblMultiplayerSearchHandleGetCreationTime(XblMultiplayerSearchHandle handle, out DateTime creationTime) Parameters handle XblMultiplayerSearchHandle creationTime DateTime Returns int XblMultiplayerSearchHandleGetCustomSessionPropertiesJson(XblMultiplayerSearchHandle, out string) public static int XblMultiplayerSearchHandleGetCustomSessionPropertiesJson(XblMultiplayerSearchHandle handle, out string customPropertiesJson) Parameters handle XblMultiplayerSearchHandle customPropertiesJson string Returns int XblMultiplayerSearchHandleGetId(XblMultiplayerSearchHandle, out string) public static int XblMultiplayerSearchHandleGetId(XblMultiplayerSearchHandle handle, out string id) Parameters handle XblMultiplayerSearchHandle id string Returns int XblMultiplayerSearchHandleGetJoinRestriction(XblMultiplayerSearchHandle, out XblMultiplayerSessionRestriction) public static int XblMultiplayerSearchHandleGetJoinRestriction(XblMultiplayerSearchHandle handle, out XblMultiplayerSessionRestriction joinRestriction) Parameters handle XblMultiplayerSearchHandle joinRestriction XblMultiplayerSessionRestriction Returns int XblMultiplayerSearchHandleGetMemberCounts(XblMultiplayerSearchHandle, out uint, out uint) public static int XblMultiplayerSearchHandleGetMemberCounts(XblMultiplayerSearchHandle handle, out uint maxMembers, out uint currentMembers) Parameters handle XblMultiplayerSearchHandle maxMembers uint currentMembers uint Returns int XblMultiplayerSearchHandleGetNumberAttributes(XblMultiplayerSearchHandle, out XblMultiplayerSessionNumberAttribute[]) public static int XblMultiplayerSearchHandleGetNumberAttributes(XblMultiplayerSearchHandle handle, out XblMultiplayerSessionNumberAttribute[] attributes) Parameters handle XblMultiplayerSearchHandle attributes XblMultiplayerSessionNumberAttribute[] Returns int XblMultiplayerSearchHandleGetSessionClosed(XblMultiplayerSearchHandle, out bool) public static int XblMultiplayerSearchHandleGetSessionClosed(XblMultiplayerSearchHandle handle, out bool closed) Parameters handle XblMultiplayerSearchHandle closed bool Returns int XblMultiplayerSearchHandleGetSessionOwnerXuids(XblMultiplayerSearchHandle, out ulong[]) public static int XblMultiplayerSearchHandleGetSessionOwnerXuids(XblMultiplayerSearchHandle handle, out ulong[] xuids) Parameters handle XblMultiplayerSearchHandle xuids ulong[] Returns int XblMultiplayerSearchHandleGetSessionReference(XblMultiplayerSearchHandle, out XblMultiplayerSessionReference) public static int XblMultiplayerSearchHandleGetSessionReference(XblMultiplayerSearchHandle handle, out XblMultiplayerSessionReference sessionRef) Parameters handle XblMultiplayerSearchHandle sessionRef XblMultiplayerSessionReference Returns int XblMultiplayerSearchHandleGetStringAttributes(XblMultiplayerSearchHandle, out XblMultiplayerSessionStringAttribute[]) public static int XblMultiplayerSearchHandleGetStringAttributes(XblMultiplayerSearchHandle handle, out XblMultiplayerSessionStringAttribute[] attributes) Parameters handle XblMultiplayerSearchHandle attributes XblMultiplayerSessionStringAttribute[] Returns int XblMultiplayerSearchHandleGetTags(XblMultiplayerSearchHandle, out XblMultiplayerSessionTag[]) public static int XblMultiplayerSearchHandleGetTags(XblMultiplayerSearchHandle handle, out XblMultiplayerSessionTag[] tags) Parameters handle XblMultiplayerSearchHandle tags XblMultiplayerSessionTag[] Returns int XblMultiplayerSearchHandleGetVisibility(XblMultiplayerSearchHandle, out XblMultiplayerSessionVisibility) public static int XblMultiplayerSearchHandleGetVisibility(XblMultiplayerSearchHandle handle, out XblMultiplayerSessionVisibility visibility) Parameters handle XblMultiplayerSearchHandle visibility XblMultiplayerSessionVisibility Returns int XblMultiplayerSendInvitesAsync(XblContextHandle, XblMultiplayerSessionReference, ulong[], uint, string, string, XblSendInvitesCompletionCallback) Wraps the underlying native XblMultiplayerSendInvitesAsync API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersendinvitesasync public static int XblMultiplayerSendInvitesAsync(XblContextHandle xboxLiveContext, XblMultiplayerSessionReference sessionReference, ulong[] xuidsForUsersToInvite, uint titleId, string contextStringId, string customActivationContext, XblSendInvitesCompletionCallback completionCallback) Parameters xboxLiveContext XblContextHandle sessionReference XblMultiplayerSessionReference xuidsForUsersToInvite ulong[] titleId uint contextStringId string customActivationContext string completionCallback XblSendInvitesCompletionCallback Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionAddMemberReservation(XblMultiplayerSessionHandle, ulong, string, bool) Wraps the underlying native XblMultiplayerSessionAddMemberReservation API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionaddmemberreservation public static int XblMultiplayerSessionAddMemberReservation(XblMultiplayerSessionHandle sessionHandle, ulong xuid, string memberCustomConstantsJson, bool initializeRequested) Parameters sessionHandle XblMultiplayerSessionHandle xuid ulong memberCustomConstantsJson string initializeRequested bool Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionCloseHandle(XblMultiplayerSessionHandle) public static void XblMultiplayerSessionCloseHandle(XblMultiplayerSessionHandle handle) Parameters handle XblMultiplayerSessionHandle XblMultiplayerSessionCompare(XblMultiplayerSessionHandle, XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionCompare API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessioncompare public static XblMultiplayerSessionChangeTypes XblMultiplayerSessionCompare(XblMultiplayerSessionHandle currentSessionHandle, XblMultiplayerSessionHandle oldSessionHandle) Parameters currentSessionHandle XblMultiplayerSessionHandle oldSessionHandle XblMultiplayerSessionHandle Returns XblMultiplayerSessionChangeTypes the set of change flags between the two session handles. XblMultiplayerSessionConstantsSetArbitrationTimeouts(XblMultiplayerSessionHandle, TimeSpan, TimeSpan) Wraps the underlying native XblMultiplayerSessionConstantsSetArbitrationTimeouts API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionconstantssetarbitrationtimeouts public static int XblMultiplayerSessionConstantsSetArbitrationTimeouts(XblMultiplayerSessionHandle sessionHandle, TimeSpan arbitrationTimeout, TimeSpan forfeitTimeout) Parameters sessionHandle XblMultiplayerSessionHandle arbitrationTimeout TimeSpan forfeitTimeout TimeSpan Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true Remarks Deprecated XblMultiplayerSessionConstantsSetCapabilities(XblMultiplayerSessionHandle, XblMultiplayerSessionCapabilities) Wraps the underlying native XblMultiplayerSessionConstantsSetCapabilities API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionconstantssetcapabilities public static int XblMultiplayerSessionConstantsSetCapabilities(XblMultiplayerSessionHandle sessionHandle, XblMultiplayerSessionCapabilities capabilities) Parameters sessionHandle XblMultiplayerSessionHandle capabilities XblMultiplayerSessionCapabilities Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionConstantsSetCloudComputePackageJson(XblMultiplayerSessionHandle, string) Wraps the underlying native XblMultiplayerSessionConstantsSetCloudComputePackageJson API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionconstantssetcloudcomputepackagejson public static int XblMultiplayerSessionConstantsSetCloudComputePackageJson(XblMultiplayerSessionHandle sessionHandle, string sessionCloudComputePackageConstantsJson) Parameters sessionHandle XblMultiplayerSessionHandle sessionCloudComputePackageConstantsJson string Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionConstantsSetMaxMembersInSession(XblMultiplayerSessionHandle, uint) Wraps the underlying native XblMultiplayerSessionConstantsSetMaxMembersInSession API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionconstantssetmaxmembersinsession public static void XblMultiplayerSessionConstantsSetMaxMembersInSession(XblMultiplayerSessionHandle sessionHandle, uint maxMembersInSession) Parameters sessionHandle XblMultiplayerSessionHandle maxMembersInSession uint XblMultiplayerSessionConstantsSetMeasurementServerAddressesJson(XblMultiplayerSessionHandle, string) Wraps the underlying native XblMultiplayerSessionConstantsSetMeasurementServerAddressesJson API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionconstantssetmeasurementserveraddressesjson public static int XblMultiplayerSessionConstantsSetMeasurementServerAddressesJson(XblMultiplayerSessionHandle sessionHandle, string measurementServerAddressesJson) Parameters sessionHandle XblMultiplayerSessionHandle measurementServerAddressesJson string Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionConstantsSetMemberInitialization(XblMultiplayerSessionHandle, XblMultiplayerMemberInitialization) Wraps the underlying native XblMultiplayerSessionConstantsSetMemberInitialization API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionconstantssetmemberinitialization public static int XblMultiplayerSessionConstantsSetMemberInitialization(XblMultiplayerSessionHandle sessionHandle, XblMultiplayerMemberInitialization memberInitialization) Parameters sessionHandle XblMultiplayerSessionHandle memberInitialization XblMultiplayerMemberInitialization Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionConstantsSetPeerToHostRequirements(XblMultiplayerSessionHandle, XblMultiplayerPeerToHostRequirements) Wraps the underlying native XblMultiplayerSessionConstantsSetPeerToHostRequirements API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionconstantssetpeertohostrequirements public static int XblMultiplayerSessionConstantsSetPeerToHostRequirements(XblMultiplayerSessionHandle sessionHandle, XblMultiplayerPeerToHostRequirements requirements) Parameters sessionHandle XblMultiplayerSessionHandle requirements XblMultiplayerPeerToHostRequirements Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionConstantsSetPeerToPeerRequirements(XblMultiplayerSessionHandle, XblMultiplayerPeerToPeerRequirements) Wraps the underlying native XblMultiplayerSessionConstantsSetPeerToPeerRequirements API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionconstantssetpeertopeerrequirements public static int XblMultiplayerSessionConstantsSetPeerToPeerRequirements(XblMultiplayerSessionHandle sessionHandle, XblMultiplayerPeerToPeerRequirements requirements) Parameters sessionHandle XblMultiplayerSessionHandle requirements XblMultiplayerPeerToPeerRequirements Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionConstantsSetQosConnectivityMetrics(XblMultiplayerSessionHandle, bool, bool, bool, bool) Wraps the underlying native XblMultiplayerSessionConstantsSetQosConnectivityMetrics API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionconstantssetqosconnectivitymetrics public static int XblMultiplayerSessionConstantsSetQosConnectivityMetrics(XblMultiplayerSessionHandle sessionHandle, bool enableLatencyMetric, bool enableBandwidthDownMetric, bool enableBandwidthUpMetric, bool enableCustomMetric) Parameters sessionHandle XblMultiplayerSessionHandle enableLatencyMetric bool enableBandwidthDownMetric bool enableBandwidthUpMetric bool enableCustomMetric bool Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionConstantsSetTimeouts(XblMultiplayerSessionHandle, TimeSpan, TimeSpan, TimeSpan, TimeSpan) Wraps the underlying native XblMultiplayerSessionConstantsSetTimeouts API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionconstantssettimeouts public static int XblMultiplayerSessionConstantsSetTimeouts(XblMultiplayerSessionHandle sessionHandle, TimeSpan memberReservedTimeout, TimeSpan memberInactiveTimeout, TimeSpan memberReadyTimeout, TimeSpan sessionEmptyTimeout) Parameters sessionHandle XblMultiplayerSessionHandle memberReservedTimeout TimeSpan memberInactiveTimeout TimeSpan memberReadyTimeout TimeSpan sessionEmptyTimeout TimeSpan Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionConstantsSetVisibility(XblMultiplayerSessionHandle, XblMultiplayerSessionVisibility) Wraps the underlying native XblMultiplayerSessionConstantsSetVisibility API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionconstantssetvisibility public static void XblMultiplayerSessionConstantsSetVisibility(XblMultiplayerSessionHandle sessionHandle, XblMultiplayerSessionVisibility visibility) Parameters sessionHandle XblMultiplayerSessionHandle visibility XblMultiplayerSessionVisibility XblMultiplayerSessionCreateHandle(ulong, XblMultiplayerSessionReference, XblMultiplayerSessionInitArgs) public static XblMultiplayerSessionHandle XblMultiplayerSessionCreateHandle(ulong xboxUserId, XblMultiplayerSessionReference sessionRef, XblMultiplayerSessionInitArgs initArgs) Parameters xboxUserId ulong sessionRef XblMultiplayerSessionReference initArgs XblMultiplayerSessionInitArgs Returns XblMultiplayerSessionHandle XblMultiplayerSessionCurrentUser(XblMultiplayerSessionHandle) public static XblMultiplayerSessionMember XblMultiplayerSessionCurrentUser(XblMultiplayerSessionHandle handle) Parameters handle XblMultiplayerSessionHandle Returns XblMultiplayerSessionMember XblMultiplayerSessionCurrentUserDeleteCustomPropertyJson(XblMultiplayerSessionHandle, string) Wraps the underlying native XblMultiplayerSessionCurrentUserDeleteCustomPropertyJson API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessioncurrentuserdeletecustompropertyjson public static int XblMultiplayerSessionCurrentUserDeleteCustomPropertyJson(XblMultiplayerSessionHandle sessionHandle, string propertyName) Parameters sessionHandle XblMultiplayerSessionHandle propertyName string Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionCurrentUserSetCustomPropertyJson(XblMultiplayerSessionHandle, string, string) Wraps the underlying native XblMultiplayerSessionCurrentUserSetCustomPropertyJson API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessioncurrentusersetcustompropertyjson public static int XblMultiplayerSessionCurrentUserSetCustomPropertyJson(XblMultiplayerSessionHandle sessionHandle, string propertyName, string propertyValueJson) Parameters sessionHandle XblMultiplayerSessionHandle propertyName string propertyValueJson string Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionCurrentUserSetEncounters(XblMultiplayerSessionHandle, string[]) public static int XblMultiplayerSessionCurrentUserSetEncounters(XblMultiplayerSessionHandle handle, string[] encounters) Parameters handle XblMultiplayerSessionHandle encounters string[] Returns int XblMultiplayerSessionCurrentUserSetGroups(XblMultiplayerSessionHandle, string[]) public static int XblMultiplayerSessionCurrentUserSetGroups(XblMultiplayerSessionHandle handle, string[] groups) Parameters handle XblMultiplayerSessionHandle groups string[] Returns int XblMultiplayerSessionCurrentUserSetQosMeasurements(XblMultiplayerSessionHandle, string) Wraps the underlying native XblMultiplayerSessionCurrentUserSetQosMeasurements API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessioncurrentusersetqosmeasurements public static int XblMultiplayerSessionCurrentUserSetQosMeasurements(XblMultiplayerSessionHandle sessionHandle, string measurements) Parameters sessionHandle XblMultiplayerSessionHandle measurements string Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionCurrentUserSetRoles(XblMultiplayerSessionHandle, XblMultiplayerSessionMemberRole[]) Wraps the underlying native XblMultiplayerSessionCurrentUserSetRoles API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessioncurrentusersetroles public static int XblMultiplayerSessionCurrentUserSetRoles(XblMultiplayerSessionHandle sessionHandle, XblMultiplayerSessionMemberRole[] memberRoles) Parameters sessionHandle XblMultiplayerSessionHandle memberRoles XblMultiplayerSessionMemberRole[] Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionCurrentUserSetSecureDeviceAddressBase64(XblMultiplayerSessionHandle, string) public static int XblMultiplayerSessionCurrentUserSetSecureDeviceAddressBase64(XblMultiplayerSessionHandle handle, string value) Parameters handle XblMultiplayerSessionHandle value string Returns int XblMultiplayerSessionCurrentUserSetStatus(XblMultiplayerSessionHandle, XblMultiplayerSessionMemberStatus) public static int XblMultiplayerSessionCurrentUserSetStatus(XblMultiplayerSessionHandle handle, XblMultiplayerSessionMemberStatus status) Parameters handle XblMultiplayerSessionHandle status XblMultiplayerSessionMemberStatus Returns int XblMultiplayerSessionDeleteCustomPropertyJson(XblMultiplayerSessionHandle, string) Wraps the underlying native XblMultiplayerSessionDeleteCustomPropertyJson API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessiondeletecustompropertyjson public static int XblMultiplayerSessionDeleteCustomPropertyJson(XblMultiplayerSessionHandle sessionHandle, string propertyName) Parameters sessionHandle XblMultiplayerSessionHandle propertyName string Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionDuplicateHandle(XblMultiplayerSessionHandle, out XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionDuplicateHandle API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionduplicatehandle public static int XblMultiplayerSessionDuplicateHandle(XblMultiplayerSessionHandle srcHandle, out XblMultiplayerSessionHandle dstHandle) Parameters srcHandle XblMultiplayerSessionHandle dstHandle XblMultiplayerSessionHandle Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionEtag(XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionEtag API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionetag public static string XblMultiplayerSessionEtag(XblMultiplayerSessionHandle sessionHandle) Parameters sessionHandle XblMultiplayerSessionHandle Returns string null if the session handle is invalid, non-null otherwise. XblMultiplayerSessionGetInfo(XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionGetInfo API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessiongetinfo public static XblMultiplayerSessionInfo XblMultiplayerSessionGetInfo(XblMultiplayerSessionHandle sessionHandle) Parameters sessionHandle XblMultiplayerSessionHandle Returns XblMultiplayerSessionInfo null is session handle is invalid, non-null otherwise. XblMultiplayerSessionGetInitializationInfo(XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionGetInitializationInfo API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessiongetinitializationinfo public static XblMultiplayerSessionInitializationInfo XblMultiplayerSessionGetInitializationInfo(XblMultiplayerSessionHandle sessionHandle) Parameters sessionHandle XblMultiplayerSessionHandle Returns XblMultiplayerSessionInitializationInfo null if info does not exist for the handle, non-null otherwise. XblMultiplayerSessionGetMember(XblMultiplayerSessionHandle, uint) Wraps the underlying native XblMultiplayerSessionGetMember API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessiongetmember public static XblMultiplayerSessionMember XblMultiplayerSessionGetMember(XblMultiplayerSessionHandle sessionHandle, uint memberId) Parameters sessionHandle XblMultiplayerSessionHandle memberId uint Returns XblMultiplayerSessionMember null if the session handle or memberId is invalid, non-null otherwise. XblMultiplayerSessionGetRoleByName(XblMultiplayerSessionHandle, string, string, out XblMultiplayerRole) Wraps the underlying native XblMultiplayerSessionGetRoleByName API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessiongetrolebyname public static int XblMultiplayerSessionGetRoleByName(XblMultiplayerSessionHandle sessionHandle, string roleTypeName, string roleName, out XblMultiplayerRole role) Parameters sessionHandle XblMultiplayerSessionHandle roleTypeName string roleName string role XblMultiplayerRole Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionHostCandidates(XblMultiplayerSessionHandle, out XblDeviceToken[]) Wraps the underlying native XblMultiplayerSessionHostCandidates API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionhostcandidates public static int XblMultiplayerSessionHostCandidates(XblMultiplayerSessionHandle sessionHandle, out XblDeviceToken[] deviceTokens) Parameters sessionHandle XblMultiplayerSessionHandle deviceTokens XblDeviceToken[] Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionJoin(XblMultiplayerSessionHandle, string, bool, bool) public static int XblMultiplayerSessionJoin(XblMultiplayerSessionHandle handle, string memberCustomConstantsJson, bool initializeRequested, bool joinWithActiveStatus) Parameters handle XblMultiplayerSessionHandle memberCustomConstantsJson string initializeRequested bool joinWithActiveStatus bool Returns int XblMultiplayerSessionLeave(XblMultiplayerSessionHandle) public static int XblMultiplayerSessionLeave(XblMultiplayerSessionHandle handle) Parameters handle XblMultiplayerSessionHandle Returns int XblMultiplayerSessionMatchmakingServer(XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionMatchmakingServer API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionmatchmakingserver public static XblMultiplayerMatchmakingServer XblMultiplayerSessionMatchmakingServer(XblMultiplayerSessionHandle sessionHandle) Parameters sessionHandle XblMultiplayerSessionHandle Returns XblMultiplayerMatchmakingServer null if no associated matchmaking server, non-null otherwise. XblMultiplayerSessionMembers(XblMultiplayerSessionHandle, out XblMultiplayerSessionMember[]) public static int XblMultiplayerSessionMembers(XblMultiplayerSessionHandle handle, out XblMultiplayerSessionMember[] members) Parameters handle XblMultiplayerSessionHandle members XblMultiplayerSessionMember[] Returns int XblMultiplayerSessionMembersAccepted(XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionMembersAccepted API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionmembersaccepted public static uint XblMultiplayerSessionMembersAccepted(XblMultiplayerSessionHandle sessionHandle) Parameters sessionHandle XblMultiplayerSessionHandle Returns uint 0 if no members accepted or invalid handle, >0 otherwise. XblMultiplayerSessionPropertiesSetJoinRestriction(XblMultiplayerSessionHandle, XblMultiplayerSessionRestriction) Wraps the underlying native XblMultiplayerSessionPropertiesSetJoinRestriction API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionpropertiessetjoinrestriction public static void XblMultiplayerSessionPropertiesSetJoinRestriction(XblMultiplayerSessionHandle sessionHandle, XblMultiplayerSessionRestriction joinRestriction) Parameters sessionHandle XblMultiplayerSessionHandle joinRestriction XblMultiplayerSessionRestriction XblMultiplayerSessionPropertiesSetKeyword(XblMultiplayerSessionHandle, string) Wraps the underlying native XblMultiplayerSessionPropertiesSetKeywords API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionpropertiessetkeywords public static int XblMultiplayerSessionPropertiesSetKeyword(XblMultiplayerSessionHandle sessionHandle, string keyword) Parameters sessionHandle XblMultiplayerSessionHandle keyword string Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionPropertiesSetReadRestriction(XblMultiplayerSessionHandle, XblMultiplayerSessionRestriction) Wraps the underlying native XblMultiplayerSessionPropertiesSetReadRestriction API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionpropertiessetreadrestriction public static void XblMultiplayerSessionPropertiesSetReadRestriction(XblMultiplayerSessionHandle sessionHandle, XblMultiplayerSessionRestriction readRestriction) Parameters sessionHandle XblMultiplayerSessionHandle readRestriction XblMultiplayerSessionRestriction XblMultiplayerSessionPropertiesSetTurnCollection(XblMultiplayerSessionHandle, uint[]) public static int XblMultiplayerSessionPropertiesSetTurnCollection(XblMultiplayerSessionHandle handle, uint[] turnCollectionMemberIds) Parameters handle XblMultiplayerSessionHandle turnCollectionMemberIds uint[] Returns int XblMultiplayerSessionRawServersJson(XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionRawServersJson API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionrawserversjson public static string XblMultiplayerSessionRawServersJson(XblMultiplayerSessionHandle sessionHandle) Parameters sessionHandle XblMultiplayerSessionHandle Returns string null if invalid session handle, non-null otherwise. XblMultiplayerSessionReferenceCreate(string, string, string) public static XblMultiplayerSessionReference XblMultiplayerSessionReferenceCreate(string scid, string sessionTemplateName, string sessionName) Parameters scid string sessionTemplateName string sessionName string Returns XblMultiplayerSessionReference XblMultiplayerSessionReferenceIsValid(XblMultiplayerSessionReference) public static bool XblMultiplayerSessionReferenceIsValid(XblMultiplayerSessionReference sessionReference) Parameters sessionReference XblMultiplayerSessionReference Returns bool XblMultiplayerSessionReferenceParseFromUriPath(string, out XblMultiplayerSessionReference) public static int XblMultiplayerSessionReferenceParseFromUriPath(string path, out XblMultiplayerSessionReference sessionReference) Parameters path string sessionReference XblMultiplayerSessionReference Returns int XblMultiplayerSessionReferenceToUriPath(XblMultiplayerSessionReference, out string) public static int XblMultiplayerSessionReferenceToUriPath(XblMultiplayerSessionReference sessionReference, out string sessionReferenceUri) Parameters sessionReference XblMultiplayerSessionReference sessionReferenceUri string Returns int XblMultiplayerSessionRoleTypes(XblMultiplayerSessionHandle, out XblMultiplayerRoleType[]) Wraps the underlying native XblMultiplayerSessionRoleTypes API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionroletypes public static int XblMultiplayerSessionRoleTypes(XblMultiplayerSessionHandle sessionHandle, out XblMultiplayerRoleType[] roleTypes) Parameters sessionHandle XblMultiplayerSessionHandle roleTypes XblMultiplayerRoleType[] Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionSessionConstants(XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionSessionConstants API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsessionconstants public static XblMultiplayerSessionConstants XblMultiplayerSessionSessionConstants(XblMultiplayerSessionHandle sessionHandle) Parameters sessionHandle XblMultiplayerSessionHandle Returns XblMultiplayerSessionConstants null if the session handle is invalid, non-null otherwise. XblMultiplayerSessionSessionProperties(XblMultiplayerSessionHandle) public static XblMultiplayerSessionProperties XblMultiplayerSessionSessionProperties(XblMultiplayerSessionHandle handle) Parameters handle XblMultiplayerSessionHandle Returns XblMultiplayerSessionProperties XblMultiplayerSessionSessionReference(XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionSessionReference API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsessionreference public static XblMultiplayerSessionReference XblMultiplayerSessionSessionReference(XblMultiplayerSessionHandle sessionHandle) Parameters sessionHandle XblMultiplayerSessionHandle Returns XblMultiplayerSessionReference null if the session handle is invalid, non-null otherwise. XblMultiplayerSessionSetAllocateCloudCompute(XblMultiplayerSessionHandle, bool) Wraps the underlying native XblMultiplayerSessionSetAllocateCloudCompute API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsetallocatecloudcompute public static void XblMultiplayerSessionSetAllocateCloudCompute(XblMultiplayerSessionHandle sessionHandle, bool allocateCloudCompute) Parameters sessionHandle XblMultiplayerSessionHandle allocateCloudCompute bool XblMultiplayerSessionSetClosed(XblMultiplayerSessionHandle, bool) public static void XblMultiplayerSessionSetClosed(XblMultiplayerSessionHandle handle, bool closed) Parameters handle XblMultiplayerSessionHandle closed bool XblMultiplayerSessionSetCustomPropertyJson(XblMultiplayerSessionHandle, string, string) Wraps the underlying native XblMultiplayerSessionSetCustomPropertyJson API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsetcustompropertyjson public static int XblMultiplayerSessionSetCustomPropertyJson(XblMultiplayerSessionHandle sessionHandle, string propertyName, string propertyValueJson) Parameters sessionHandle XblMultiplayerSessionHandle propertyName string propertyValueJson string Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionSetHostDeviceToken(XblMultiplayerSessionHandle, XblDeviceToken) public static void XblMultiplayerSessionSetHostDeviceToken(XblMultiplayerSessionHandle handle, XblDeviceToken hostDeviceToken) Parameters handle XblMultiplayerSessionHandle hostDeviceToken XblDeviceToken XblMultiplayerSessionSetInitializationSucceeded(XblMultiplayerSessionHandle, bool) Wraps the underlying native XblMultiplayerSessionSetInitializationSucceeded API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsetinitializationsucceeded public static void XblMultiplayerSessionSetInitializationSucceeded(XblMultiplayerSessionHandle sessionHandle, bool initializationSucceeded) Parameters sessionHandle XblMultiplayerSessionHandle initializationSucceeded bool XblMultiplayerSessionSetLocked(XblMultiplayerSessionHandle, bool) Wraps the underlying native XblMultiplayerSessionSetLocked API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsetlocked public static void XblMultiplayerSessionSetLocked(XblMultiplayerSessionHandle sessionHandle, bool isLocked) Parameters sessionHandle XblMultiplayerSessionHandle isLocked bool XblMultiplayerSessionSetMatchmakingResubmit(XblMultiplayerSessionHandle, bool) Wraps the underlying native XblMultiplayerSessionSetMatchmakingResubmit API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsetmatchmakingresubmit public static void XblMultiplayerSessionSetMatchmakingResubmit(XblMultiplayerSessionHandle sessionHandle, bool matchResubmit) Parameters sessionHandle XblMultiplayerSessionHandle matchResubmit bool XblMultiplayerSessionSetMatchmakingServerConnectionPath(XblMultiplayerSessionHandle, string) Wraps the underlying native XblMultiplayerSessionSetMatchmakingServerConnectionPath API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsetmatchmakingserverconnectionpath public static void XblMultiplayerSessionSetMatchmakingServerConnectionPath(XblMultiplayerSessionHandle sessionHandle, string serverConnectionPath) Parameters sessionHandle XblMultiplayerSessionHandle serverConnectionPath string XblMultiplayerSessionSetMatchmakingTargetSessionConstantsJson(XblMultiplayerSessionHandle, string) Wraps the underlying native XblMultiplayerSessionSetMatchmakingTargetSessionConstantsJson API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsetmatchmakingtargetsessionconstantsjson public static int XblMultiplayerSessionSetMatchmakingTargetSessionConstantsJson(XblMultiplayerSessionHandle sessionHandle, string matchmakingTargetSessionConstantsJson) Parameters sessionHandle XblMultiplayerSessionHandle matchmakingTargetSessionConstantsJson string Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionSetMutableRoleSettings(XblMultiplayerSessionHandle, string, string, uint?, uint?) Wraps the underlying native XblMultiplayerSessionSetMutableRoleSettings API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsetmutablerolesettings public static int XblMultiplayerSessionSetMutableRoleSettings(XblMultiplayerSessionHandle sessionHandle, string roleTypeName, string roleName, uint? maxMemberCount, uint? targetMemberCount) Parameters sessionHandle XblMultiplayerSessionHandle roleTypeName string roleName string maxMemberCount uint? targetMemberCount uint? Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionSetRawServersJson(XblMultiplayerSessionHandle, string) Wraps the underlying native XblMultiplayerSessionSetRawServersJson API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsetrawserversjson public static int XblMultiplayerSessionSetRawServersJson(XblMultiplayerSessionHandle sessionHandle, string rawServersJson) Parameters sessionHandle XblMultiplayerSessionHandle rawServersJson string Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSessionSetServerConnectionStringCandidates(XblMultiplayerSessionHandle, string[]) public static int XblMultiplayerSessionSetServerConnectionStringCandidates(XblMultiplayerSessionHandle handle, string[] serverConnectionStringCandidates) Parameters handle XblMultiplayerSessionHandle serverConnectionStringCandidates string[] Returns int XblMultiplayerSessionSetSessionChangeSubscription(XblMultiplayerSessionHandle, XblMultiplayerSessionChangeTypes) public static int XblMultiplayerSessionSetSessionChangeSubscription(XblMultiplayerSessionHandle handle, XblMultiplayerSessionChangeTypes changeTypes) Parameters handle XblMultiplayerSessionHandle changeTypes XblMultiplayerSessionChangeTypes Returns int XblMultiplayerSessionSubscribedChangeTypes(XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionSubscribedChangeTypes API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessionsubscribedchangetypes public static XblMultiplayerSessionChangeTypes XblMultiplayerSessionSubscribedChangeTypes(XblMultiplayerSessionHandle sessionHandle) Parameters sessionHandle XblMultiplayerSessionHandle Returns XblMultiplayerSessionChangeTypes Combined bit flags that contain supported change types by the session. XblMultiplayerSessionTimeOfSession(XblMultiplayerSessionHandle) Wraps the underlying native XblMultiplayerSessionTimeOfSession API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersessiontimeofsession public static DateTime XblMultiplayerSessionTimeOfSession(XblMultiplayerSessionHandle sessionHandle) Parameters sessionHandle XblMultiplayerSessionHandle Returns DateTime a DateTime representing when the session was created. XblMultiplayerSessionWriteStatus(XblMultiplayerSessionHandle) public static XblWriteSessionStatus XblMultiplayerSessionWriteStatus(XblMultiplayerSessionHandle handle) Parameters handle XblMultiplayerSessionHandle Returns XblWriteSessionStatus XblMultiplayerSetActivityAsync(XblContextHandle, XblMultiplayerSessionReference, XblActivityCompletionCallback) Wraps the underlying native XblMultiplayerSetActivityAsync API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayersetactivityasync public static int XblMultiplayerSetActivityAsync(XblContextHandle xboxLiveContext, XblMultiplayerSessionReference sessionReference, XblActivityCompletionCallback completionCallback) Parameters xboxLiveContext XblContextHandle sessionReference XblMultiplayerSessionReference completionCallback XblActivityCompletionCallback Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblMultiplayerSetSubscriptionsEnabled(XblContextHandle, bool) public static int XblMultiplayerSetSubscriptionsEnabled(XblContextHandle xblContext, bool subscriptionsEnabled) Parameters xblContext XblContextHandle subscriptionsEnabled bool Returns int XblMultiplayerSetTransferHandleAsync(XblContextHandle, XblMultiplayerSessionReference, XblMultiplayerSessionReference, XblMultiplayerSetTransferHandleResult) public static int XblMultiplayerSetTransferHandleAsync(XblContextHandle xblContext, XblMultiplayerSessionReference targetSessionReference, XblMultiplayerSessionReference originSessionReference, SDK.XBL.XblMultiplayerSetTransferHandleResult completionCallback) Parameters xblContext XblContextHandle targetSessionReference XblMultiplayerSessionReference originSessionReference XblMultiplayerSessionReference completionCallback SDK.XBL.XblMultiplayerSetTransferHandleResult Returns int XblMultiplayerSubscriptionsEnabled(XblContextHandle) public static bool XblMultiplayerSubscriptionsEnabled(XblContextHandle xblHandle) Parameters xblHandle XblContextHandle Returns bool XblMultiplayerWriteSessionAsync(XblContextHandle, XblMultiplayerSessionHandle, XblMultiplayerSessionWriteMode, XblMultiplayerWriteSessionHandleResult) public static void XblMultiplayerWriteSessionAsync(XblContextHandle xblContext, XblMultiplayerSessionHandle handle, XblMultiplayerSessionWriteMode writeMode, SDK.XBL.XblMultiplayerWriteSessionHandleResult completionRoutine) Parameters xblContext XblContextHandle handle XblMultiplayerSessionHandle writeMode XblMultiplayerSessionWriteMode completionRoutine SDK.XBL.XblMultiplayerWriteSessionHandleResult XblMultiplayerWriteSessionByHandleAsync(XblContextHandle, XblMultiplayerSessionHandle, XblMultiplayerSessionWriteMode, string, XblWriteSessionByHandleCallback) Wraps the underlying native XblMultiplayerWriteSessionByHandleAsync API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/multiplayer_c/functions/xblmultiplayerwritesessionbyhandleasync public static int XblMultiplayerWriteSessionByHandleAsync(XblContextHandle xboxLiveContext, XblMultiplayerSessionHandle sessionHandle, XblMultiplayerSessionWriteMode writeMode, string sessionHandleId, XblWriteSessionByHandleCallback completionCallback) Parameters xboxLiveContext XblContextHandle sessionHandle XblMultiplayerSessionHandle writeMode XblMultiplayerSessionWriteMode sessionHandleId string completionCallback XblWriteSessionByHandleCallback Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblPresenceGetPresenceAsync(XblContextHandle, ulong, XblPresenceGetPresenceCompleted) public static void XblPresenceGetPresenceAsync(XblContextHandle xblContextHandle, ulong xuid, XblPresenceGetPresenceCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xuid ulong completionRoutine XblPresenceGetPresenceCompleted XblPresenceGetPresenceForMultipleUsersAsync(XblContextHandle, ulong[], XblPresenceQueryFilters, XblPresenceGetPresenceForMultipleUsersCompleted) public static void XblPresenceGetPresenceForMultipleUsersAsync(XblContextHandle xblContextHandle, ulong[] xuids, XblPresenceQueryFilters filters, XblPresenceGetPresenceForMultipleUsersCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xuids ulong[] filters XblPresenceQueryFilters completionRoutine XblPresenceGetPresenceForMultipleUsersCompleted XblPresenceGetPresenceForSocialGroupAsync(XblContextHandle, string, ulong?, XblPresenceQueryFilters, XblPresenceGetPresenceForSocialGroupCompleted) public static void XblPresenceGetPresenceForSocialGroupAsync(XblContextHandle xblContextHandle, string socialGroupName, ulong? socialGroupOwnerXuid, XblPresenceQueryFilters filters, XblPresenceGetPresenceForSocialGroupCompleted completionRoutine) Parameters xblContextHandle XblContextHandle socialGroupName string socialGroupOwnerXuid ulong? filters XblPresenceQueryFilters completionRoutine XblPresenceGetPresenceForSocialGroupCompleted XblPresenceRecordCloseHandle(XblPresenceRecordHandle) public static void XblPresenceRecordCloseHandle(XblPresenceRecordHandle handle) Parameters handle XblPresenceRecordHandle XblPresenceRecordDuplicateHandle(XblPresenceRecordHandle, out XblPresenceRecordHandle) public static int XblPresenceRecordDuplicateHandle(XblPresenceRecordHandle handle, out XblPresenceRecordHandle duplicatedHandle) Parameters handle XblPresenceRecordHandle duplicatedHandle XblPresenceRecordHandle Returns int XblPresenceRecordGetDeviceRecords(XblPresenceRecordHandle, out XblPresenceDeviceRecord[]) public static int XblPresenceRecordGetDeviceRecords(XblPresenceRecordHandle handle, out XblPresenceDeviceRecord[] deviceRecords) Parameters handle XblPresenceRecordHandle deviceRecords XblPresenceDeviceRecord[] Returns int XblPresenceRecordGetUserState(XblPresenceRecordHandle, out XblPresenceUserState) public static int XblPresenceRecordGetUserState(XblPresenceRecordHandle handle, out XblPresenceUserState userState) Parameters handle XblPresenceRecordHandle userState XblPresenceUserState Returns int XblPresenceRecordGetXuid(XblPresenceRecordHandle, out ulong) public static int XblPresenceRecordGetXuid(XblPresenceRecordHandle handle, out ulong xuid) Parameters handle XblPresenceRecordHandle xuid ulong Returns int XblPresenceSetPresenceAsync(XblContextHandle, bool, XblPresenceRichPresenceIds, XblPresenceSetPresenceCompleted) public static void XblPresenceSetPresenceAsync(XblContextHandle xblContextHandle, bool isUserActiveInTitle, XblPresenceRichPresenceIds richPresenceIds, XblPresenceSetPresenceCompleted completionRoutine) Parameters xblContextHandle XblContextHandle isUserActiveInTitle bool richPresenceIds XblPresenceRichPresenceIds completionRoutine XblPresenceSetPresenceCompleted XblPrivacyBatchCheckPermissionAsync(XblContextHandle, XblPermission[], ulong[], XblAnonymousUserType[], XblPrivacyBatchCheckPermissionCompleted) public static void XblPrivacyBatchCheckPermissionAsync(XblContextHandle xblContextHandle, XblPermission[] permissionsToCheck, ulong[] targetXuids, XblAnonymousUserType[] targetAnonymousUserTypes, XblPrivacyBatchCheckPermissionCompleted completionRoutine) Parameters xblContextHandle XblContextHandle permissionsToCheck XblPermission[] targetXuids ulong[] targetAnonymousUserTypes XblAnonymousUserType[] completionRoutine XblPrivacyBatchCheckPermissionCompleted XblPrivacyCheckPermissionAsync(XblContextHandle, XblPermission, ulong, XblPrivacyCheckPermissionCompleted) public static void XblPrivacyCheckPermissionAsync(XblContextHandle xblContextHandle, XblPermission permissionToCheck, ulong targetXuid, XblPrivacyCheckPermissionCompleted completionRoutine) Parameters xblContextHandle XblContextHandle permissionToCheck XblPermission targetXuid ulong completionRoutine XblPrivacyCheckPermissionCompleted XblPrivacyGetAvoidListAsync(XblContextHandle, XblPrivacyGetAvoidListCompleted) public static void XblPrivacyGetAvoidListAsync(XblContextHandle xblContextHandle, XblPrivacyGetAvoidListCompleted completionRoutine) Parameters xblContextHandle XblContextHandle completionRoutine XblPrivacyGetAvoidListCompleted XblPrivacyGetMuteListAsync(XblContextHandle, XblPrivacyGetMuteListCompleted) public static void XblPrivacyGetMuteListAsync(XblContextHandle xblContextHandle, XblPrivacyGetMuteListCompleted completionRoutine) Parameters xblContextHandle XblContextHandle completionRoutine XblPrivacyGetMuteListCompleted XblProfileGetUserProfileAsync(XblContextHandle, ulong, XblProfileGetUserProfileCompleted) public static void XblProfileGetUserProfileAsync(XblContextHandle xblContextHandle, ulong xboxUserId, XblProfileGetUserProfileCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xboxUserId ulong completionRoutine XblProfileGetUserProfileCompleted XblProfileGetUserProfilesAsync(XblContextHandle, ulong[], XblProfileGetUserProfilesCompleted) public static void XblProfileGetUserProfilesAsync(XblContextHandle xblContextHandle, ulong[] xboxUserIds, XblProfileGetUserProfilesCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xboxUserIds ulong[] completionRoutine XblProfileGetUserProfilesCompleted XblProfileGetUserProfilesForSocialGroupAsync(XblContextHandle, string, XblProfileGetUserProfilesForSocialGroupCompleted) public static void XblProfileGetUserProfilesForSocialGroupAsync(XblContextHandle xblContextHandle, string socialGroup, XblProfileGetUserProfilesForSocialGroupCompleted completionRoutine) Parameters xblContextHandle XblContextHandle socialGroup string completionRoutine XblProfileGetUserProfilesForSocialGroupCompleted XblRealTimeActivityAddConnectionStateChangeHandler(XblContextHandle, XblConnectionStateChangeCallback) Wraps the underlying native XblRealTimeActivityAddConnectionStateChangeHandler API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/real_time_activity_c/functions/xblrealtimeactivityaddconnectionstatechangehandler public static XblRealTimeActivityCallbackToken XblRealTimeActivityAddConnectionStateChangeHandler(XblContextHandle xboxLiveContext, XblConnectionStateChangeCallback callback) Parameters xboxLiveContext XblContextHandle callback XblConnectionStateChangeCallback Returns XblRealTimeActivityCallbackToken a XblRealTimeActivityCallbackToken with which to remove the callback XblRealTimeActivityAddResyncHandler(XblContextHandle, XblConnectionResyncCallback) Wraps the underlying native XblRealTimeActivityAddResyncHandler API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/real_time_activity_c/functions/xblrealtimeactivityaddresynchandler public static XblRealTimeActivityCallbackToken XblRealTimeActivityAddResyncHandler(XblContextHandle xboxLiveContext, XblConnectionResyncCallback callback) Parameters xboxLiveContext XblContextHandle callback XblConnectionResyncCallback Returns XblRealTimeActivityCallbackToken a XblRealTimeActivityCallbackToken with which to remove the callback XblRealTimeActivityRemoveConnectionStateChangeHandler(XblContextHandle, ref XblRealTimeActivityCallbackToken) Wraps the underlying native XblRealTimeActivityRemoveConnectionStateChangeHandler API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/real_time_activity_c/functions/xblrealtimeactivityremoveconnectionstatechangehandler public static int XblRealTimeActivityRemoveConnectionStateChangeHandler(XblContextHandle xboxLiveContext, ref XblRealTimeActivityCallbackToken connectionStateChangeCallbackToken) Parameters xboxLiveContext XblContextHandle connectionStateChangeCallbackToken XblRealTimeActivityCallbackToken Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblRealTimeActivityRemoveResyncHandler(XblContextHandle, ref XblRealTimeActivityCallbackToken) Wraps the underlying native XblRealTimeActivityRemoveResyncHandler API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/real_time_activity_c/functions/xblrealtimeactivityremoveresynchandler public static int XblRealTimeActivityRemoveResyncHandler(XblContextHandle xboxLiveContext, ref XblRealTimeActivityCallbackToken connectionResyncCallbackToken) Parameters xboxLiveContext XblContextHandle connectionResyncCallbackToken XblRealTimeActivityCallbackToken Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblSocialAddSocialRelationshipChangedHandler(XblContextHandle, XblSocialRelationshipChangedCallback) Wraps the underlying native XblSocialAddSocialRelationshipChangedHandler API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/social_c/functions/xblsocialaddsocialrelationshipchangedhandler public static int XblSocialAddSocialRelationshipChangedHandler(XblContextHandle xboxLiveContext, XblSocialRelationshipChangedCallback eventCallback) Parameters xboxLiveContext XblContextHandle eventCallback XblSocialRelationshipChangedCallback Returns int an integer representing a callback function ID, or 0 on failure XblSocialGetSocialRelationshipsAsync(XblContextHandle, ulong, XblSocialRelationshipFilter, uint, uint, XblSocialRelationshipCallback) Wraps the underlying native XblSocialGetSocialRelationshipsAsync API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/social_c/functions/xblsocialgetsocialrelationshipsasync public static int XblSocialGetSocialRelationshipsAsync(XblContextHandle xboxLiveContext, ulong xboxUserId, XblSocialRelationshipFilter socialRelationshipFilter, uint startIndex, uint maxItems, XblSocialRelationshipCallback completionCallback) Parameters xboxLiveContext XblContextHandle xboxUserId ulong socialRelationshipFilter XblSocialRelationshipFilter startIndex uint maxItems uint completionCallback XblSocialRelationshipCallback Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblSocialManagerAddLocalUser(XUserHandle, XblSocialManagerExtraDetailLevel) public static int XblSocialManagerAddLocalUser(XUserHandle user, XblSocialManagerExtraDetailLevel extraLevelDetail) Parameters user XUserHandle extraLevelDetail XblSocialManagerExtraDetailLevel Returns int XblSocialManagerCreateSocialUserGroupFromFilters(XUserHandle, XblPresenceFilter, XblRelationshipFilter, out XblSocialManagerUserGroupHandle) public static int XblSocialManagerCreateSocialUserGroupFromFilters(XUserHandle user, XblPresenceFilter presenceDetailLevel, XblRelationshipFilter filter, out XblSocialManagerUserGroupHandle group) Parameters user XUserHandle presenceDetailLevel XblPresenceFilter filter XblRelationshipFilter group XblSocialManagerUserGroupHandle Returns int XblSocialManagerCreateSocialUserGroupFromList(XUserHandle, ulong[], out XblSocialManagerUserGroupHandle) public static int XblSocialManagerCreateSocialUserGroupFromList(XUserHandle user, ulong[] xboxUserIdList, out XblSocialManagerUserGroupHandle group) Parameters user XUserHandle xboxUserIdList ulong[] group XblSocialManagerUserGroupHandle Returns int XblSocialManagerDestroySocialUserGroup(XblSocialManagerUserGroupHandle) public static int XblSocialManagerDestroySocialUserGroup(XblSocialManagerUserGroupHandle group) Parameters group XblSocialManagerUserGroupHandle Returns int XblSocialManagerDoWork(out XblSocialManagerEvent[]) public static int XblSocialManagerDoWork(out XblSocialManagerEvent[] socialEvents) Parameters socialEvents XblSocialManagerEvent[] Returns int XblSocialManagerGetLocalUsers(out XUserHandle[]) public static int XblSocialManagerGetLocalUsers(out XUserHandle[] users) Parameters users XUserHandle[] Returns int XblSocialManagerPresenceRecordIsUserPlayingTitle(XblSocialManagerPresenceRecord, uint) public static bool XblSocialManagerPresenceRecordIsUserPlayingTitle(XblSocialManagerPresenceRecord presenceRecord, uint titleId) Parameters presenceRecord XblSocialManagerPresenceRecord titleId uint Returns bool XblSocialManagerRemoveLocalUser(XUserHandle, XblSocialManagerExtraDetailLevel) public static int XblSocialManagerRemoveLocalUser(XUserHandle user, XblSocialManagerExtraDetailLevel extraLevelDetail) Parameters user XUserHandle extraLevelDetail XblSocialManagerExtraDetailLevel Returns int XblSocialManagerSetRichPresencePollingStatus(XUserHandle, bool) public static int XblSocialManagerSetRichPresencePollingStatus(XUserHandle user, bool shouldEnablePolling) Parameters user XUserHandle shouldEnablePolling bool Returns int XblSocialManagerUpdateSocialUserGroup(XblSocialManagerUserGroupHandle, ulong[]) public static int XblSocialManagerUpdateSocialUserGroup(XblSocialManagerUserGroupHandle group, ulong[] users) Parameters group XblSocialManagerUserGroupHandle users ulong[] Returns int XblSocialManagerUserGroupGetFilters(XblSocialManagerUserGroupHandle, out XblPresenceFilter, out XblRelationshipFilter) public static int XblSocialManagerUserGroupGetFilters(XblSocialManagerUserGroupHandle group, out XblPresenceFilter presenceFilter, out XblRelationshipFilter relationshipFilter) Parameters group XblSocialManagerUserGroupHandle presenceFilter XblPresenceFilter relationshipFilter XblRelationshipFilter Returns int XblSocialManagerUserGroupGetLocalUser(XblSocialManagerUserGroupHandle, out XUserHandle) public static int XblSocialManagerUserGroupGetLocalUser(XblSocialManagerUserGroupHandle group, out XUserHandle localUser) Parameters group XblSocialManagerUserGroupHandle localUser XUserHandle Returns int XblSocialManagerUserGroupGetType(XblSocialManagerUserGroupHandle, out XblSocialUserGroupType) public static int XblSocialManagerUserGroupGetType(XblSocialManagerUserGroupHandle group, out XblSocialUserGroupType type) Parameters group XblSocialManagerUserGroupHandle type XblSocialUserGroupType Returns int XblSocialManagerUserGroupGetUsers(XblSocialManagerUserGroupHandle, out XblSocialManagerUser[]) public static int XblSocialManagerUserGroupGetUsers(XblSocialManagerUserGroupHandle group, out XblSocialManagerUser[] xboxSocialUsers) Parameters group XblSocialManagerUserGroupHandle xboxSocialUsers XblSocialManagerUser[] Returns int XblSocialManagerUserGroupGetUsersTrackedByGroup(XblSocialManagerUserGroupHandle, out ulong[]) public static int XblSocialManagerUserGroupGetUsersTrackedByGroup(XblSocialManagerUserGroupHandle group, out ulong[] trackedUsers) Parameters group XblSocialManagerUserGroupHandle trackedUsers ulong[] Returns int XblSocialRelationshipResultCloseHandle(XblSocialHandle) Wraps the underlying native XblSocialRelationshipResultCloseHandle API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/social_c/functions/xblsocialrelationshipresultclosehandle public static void XblSocialRelationshipResultCloseHandle(XblSocialHandle socialHandle) Parameters socialHandle XblSocialHandle XblSocialRelationshipResultDuplicateHandle(XblSocialHandle, out XblSocialHandle) Wraps the underlying native XblSocialRelationshipResultDuplicateHandle API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/social_c/functions/xblsocialrelationshipresultduplicatehandle public static int XblSocialRelationshipResultDuplicateHandle(XblSocialHandle socialHandle, out XblSocialHandle duplicatedHandle) Parameters socialHandle XblSocialHandle duplicatedHandle XblSocialHandle Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblSocialRelationshipResultGetNextAsync(XblContextHandle, XblSocialHandle, uint, XblSocialRelationshipCallback) Wraps the underlying native XblSocialRelationshipResultGetNextAsync API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/social_c/functions/xblsocialrelationshipresultgetnextasync public static int XblSocialRelationshipResultGetNextAsync(XblContextHandle xboxLiveContext, XblSocialHandle socialHandle, uint maxItems, XblSocialRelationshipCallback completionCallback) Parameters xboxLiveContext XblContextHandle socialHandle XblSocialHandle maxItems uint completionCallback XblSocialRelationshipCallback Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblSocialRelationshipResultGetRelationships(XblSocialHandle, out XblSocialRelationship[]) Wraps the underlying native XblSocialRelationshipResultGetRelationships API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/social_c/functions/xblsocialrelationshipresultgetrelationships public static int XblSocialRelationshipResultGetRelationships(XblSocialHandle socialHandle, out XblSocialRelationship[] relationships) Parameters socialHandle XblSocialHandle relationships XblSocialRelationship[] Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblSocialRelationshipResultGetTotalCount(XblSocialHandle, ref uint) Wraps the underlying native XblSocialRelationshipResultGetTotalCount API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/social_c/functions/xblsocialrelationshipresultgettotalcount public static int XblSocialRelationshipResultGetTotalCount(XblSocialHandle socialHandle, ref uint totalCount) Parameters socialHandle XblSocialHandle totalCount uint Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblSocialRelationshipResultHasNext(XblSocialHandle, ref bool) Wraps the underlying native XblSocialRelationshipResultHasNext API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/social_c/functions/xblsocialrelationshipresulthasnext public static int XblSocialRelationshipResultHasNext(XblSocialHandle socialHandle, ref bool hasNext) Parameters socialHandle XblSocialHandle hasNext bool Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblSocialRemoveSocialRelationshipChangedHandler(XblContextHandle, int) Wraps the underlying native XblSocialRemoveSocialRelationshipChangedHandler API: https://docs.microsoft.com/en-us/gaming/gdk/_content/gc/reference/live/xsapi-c/social_c/functions/xblsocialremovesocialrelationshipchangedhandler public static int XblSocialRemoveSocialRelationshipChangedHandler(XblContextHandle xboxLiveContext, int callbackFunctionId) Parameters xboxLiveContext XblContextHandle callbackFunctionId int Returns int HR.S_OK on success, otherwise HR.FAILED(...) is true XblStringVerifyStringAsync(XblContextHandle, string, XblStringVerifyStringCompleted) public static void XblStringVerifyStringAsync(XblContextHandle xblContextHandle, string stringToVerify, XblStringVerifyStringCompleted completionRoutine) Parameters xblContextHandle XblContextHandle stringToVerify string completionRoutine XblStringVerifyStringCompleted XblStringVerifyStringsAsync(XblContextHandle, string[], XblStringVerifyStringsCompleted) public static void XblStringVerifyStringsAsync(XblContextHandle xblContextHandle, string[] stringsToVerify, XblStringVerifyStringsCompleted completionRoutine) Parameters xblContextHandle XblContextHandle stringsToVerify string[] completionRoutine XblStringVerifyStringsCompleted XblTitleManagedStatsDeleteStatsAsync(XblContextHandle, string[], XblTitleManagedStatsOperationCompleted) public static void XblTitleManagedStatsDeleteStatsAsync(XblContextHandle xblContextHandle, string[] statisticNames, XblTitleManagedStatsOperationCompleted completionRoutine) Parameters xblContextHandle XblContextHandle statisticNames string[] completionRoutine XblTitleManagedStatsOperationCompleted XblTitleManagedStatsUpdateStatsAsync(XblContextHandle, XblTitleManagedStatistic[], XblTitleManagedStatsOperationCompleted) public static void XblTitleManagedStatsUpdateStatsAsync(XblContextHandle xblContextHandle, XblTitleManagedStatistic[] statistics, XblTitleManagedStatsOperationCompleted completionRoutine) Parameters xblContextHandle XblContextHandle statistics XblTitleManagedStatistic[] completionRoutine XblTitleManagedStatsOperationCompleted XblTitleManagedStatsWriteAsync(XblContextHandle, ulong, XblTitleManagedStatistic[], XblTitleManagedStatsOperationCompleted) public static void XblTitleManagedStatsWriteAsync(XblContextHandle xblContextHandle, ulong xboxUserId, XblTitleManagedStatistic[] statistics, XblTitleManagedStatsOperationCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xboxUserId ulong statistics XblTitleManagedStatistic[] completionRoutine XblTitleManagedStatsOperationCompleted XblUserStatisticsAddStatisticChangedHandler(XblContextHandle, XblStatisticChangedCallback) public static int XblUserStatisticsAddStatisticChangedHandler(XblContextHandle xblContextHandle, XblStatisticChangedCallback eventCallback) Parameters xblContextHandle XblContextHandle eventCallback XblStatisticChangedCallback Returns int XblUserStatisticsGetMultipleUserStatisticsAsync(XblContextHandle, ulong[], string, string[], XblUserStatisticsGetMultipleUserStatisticsCompleted) public static void XblUserStatisticsGetMultipleUserStatisticsAsync(XblContextHandle xblContextHandle, ulong[] xboxUserIds, string serviceConfigurationId, string[] statisticNames, XblUserStatisticsGetMultipleUserStatisticsCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xboxUserIds ulong[] serviceConfigurationId string statisticNames string[] completionRoutine XblUserStatisticsGetMultipleUserStatisticsCompleted XblUserStatisticsGetMultipleUserStatisticsForMultipleServiceConfigurationsAsync(XblContextHandle, ulong[], XblRequestedStatistics[], XblUserStatisticsGetMultipleUserStatisticsForMultipleServiceConfigurationsCompleted) public static void XblUserStatisticsGetMultipleUserStatisticsForMultipleServiceConfigurationsAsync(XblContextHandle xblContextHandle, ulong[] xboxUserIds, XblRequestedStatistics[] requestedServiceConfigurationStatisticsCollection, XblUserStatisticsGetMultipleUserStatisticsForMultipleServiceConfigurationsCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xboxUserIds ulong[] requestedServiceConfigurationStatisticsCollection XblRequestedStatistics[] completionRoutine XblUserStatisticsGetMultipleUserStatisticsForMultipleServiceConfigurationsCompleted XblUserStatisticsGetSingleUserStatisticAsync(XblContextHandle, ulong, string, string, XblUserStatisticsGetSingleUserStatisticCompleted) public static void XblUserStatisticsGetSingleUserStatisticAsync(XblContextHandle xblContextHandle, ulong xboxUserId, string serviceConfigurationId, string statisticName, XblUserStatisticsGetSingleUserStatisticCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xboxUserId ulong serviceConfigurationId string statisticName string completionRoutine XblUserStatisticsGetSingleUserStatisticCompleted XblUserStatisticsGetSingleUserStatisticsAsync(XblContextHandle, ulong, string, string[], XblUserStatisticsGetSingleUserStatisticsCompleted) public static void XblUserStatisticsGetSingleUserStatisticsAsync(XblContextHandle xblContextHandle, ulong xboxUserId, string serviceConfigurationId, string[] statisticNames, XblUserStatisticsGetSingleUserStatisticsCompleted completionRoutine) Parameters xblContextHandle XblContextHandle xboxUserId ulong serviceConfigurationId string statisticNames string[] completionRoutine XblUserStatisticsGetSingleUserStatisticsCompleted XblUserStatisticsRemoveStatisticChangedHandler(XblContextHandle, int) public static void XblUserStatisticsRemoveStatisticChangedHandler(XblContextHandle xblContextHandle, int callbackFunctionId) Parameters xblContextHandle XblContextHandle callbackFunctionId int XblUserStatisticsStopTrackingStatistics(XblContextHandle, ulong[], string, string[]) public static void XblUserStatisticsStopTrackingStatistics(XblContextHandle xblContextHandle, ulong[] xuids, string serviceConfigurationId, string[] statisticNames) Parameters xblContextHandle XblContextHandle xuids ulong[] serviceConfigurationId string statisticNames string[] XblUserStatisticsStopTrackingUsers(XblContextHandle, ulong[]) public static void XblUserStatisticsStopTrackingUsers(XblContextHandle xblContextHandle, ulong[] xuids) Parameters xblContextHandle XblContextHandle xuids ulong[] XblUserStatisticsTrackStatistics(XblContextHandle, ulong[], string, string[]) public static void XblUserStatisticsTrackStatistics(XblContextHandle xblContextHandle, ulong[] xuids, string serviceConfigurationId, string[] statisticNames) Parameters xblContextHandle XblContextHandle xuids ulong[] serviceConfigurationId string statisticNames string[]"
  },
  "api/XGamingRuntime.SDK.XStoreDownloadAndInstallPackageUpdatesCompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreDownloadAndInstallPackageUpdatesCompleted.html",
    "title": "Delegate SDK.XStoreDownloadAndInstallPackageUpdatesCompleted | |",
    "keywords": "Delegate SDK.XStoreDownloadAndInstallPackageUpdatesCompleted Namespace XGamingRuntime public delegate void SDK.XStoreDownloadAndInstallPackageUpdatesCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.SDK.XStoreDownloadAndInstallPackagesCompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreDownloadAndInstallPackagesCompleted.html",
    "title": "Delegate SDK.XStoreDownloadAndInstallPackagesCompleted | |",
    "keywords": "Delegate SDK.XStoreDownloadAndInstallPackagesCompleted Namespace XGamingRuntime public delegate void SDK.XStoreDownloadAndInstallPackagesCompleted(int hresult, string[] packageIdentifiers) Parameters hresult int packageIdentifiers string[]"
  },
  "api/XGamingRuntime.SDK.XStoreDownloadPackageUpdatesCompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreDownloadPackageUpdatesCompleted.html",
    "title": "Delegate SDK.XStoreDownloadPackageUpdatesCompleted | |",
    "keywords": "Delegate SDK.XStoreDownloadPackageUpdatesCompleted Namespace XGamingRuntime public delegate void SDK.XStoreDownloadPackageUpdatesCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.SDK.XStoreGetUserCollectionsIdCompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreGetUserCollectionsIdCompleted.html",
    "title": "Delegate SDK.XStoreGetUserCollectionsIdCompleted | |",
    "keywords": "Delegate SDK.XStoreGetUserCollectionsIdCompleted Namespace XGamingRuntime public delegate void SDK.XStoreGetUserCollectionsIdCompleted(int hresult, string token) Parameters hresult int token string"
  },
  "api/XGamingRuntime.SDK.XStoreGetUserPurchaseIdCompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreGetUserPurchaseIdCompleted.html",
    "title": "Delegate SDK.XStoreGetUserPurchaseIdCompleted | |",
    "keywords": "Delegate SDK.XStoreGetUserPurchaseIdCompleted Namespace XGamingRuntime public delegate void SDK.XStoreGetUserPurchaseIdCompleted(int hresult, string token) Parameters hresult int token string"
  },
  "api/XGamingRuntime.SDK.XStoreQueryConsumableBalanceRemainingCompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreQueryConsumableBalanceRemainingCompleted.html",
    "title": "Delegate SDK.XStoreQueryConsumableBalanceRemainingCompleted | |",
    "keywords": "Delegate SDK.XStoreQueryConsumableBalanceRemainingCompleted Namespace XGamingRuntime public delegate void SDK.XStoreQueryConsumableBalanceRemainingCompleted(int hresult, uint quantity) Parameters hresult int quantity uint"
  },
  "api/XGamingRuntime.SDK.XStoreQueryGameAndDlcPackageUpdatesCompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreQueryGameAndDlcPackageUpdatesCompleted.html",
    "title": "Delegate SDK.XStoreQueryGameAndDlcPackageUpdatesCompleted | |",
    "keywords": "Delegate SDK.XStoreQueryGameAndDlcPackageUpdatesCompleted Namespace XGamingRuntime public delegate void SDK.XStoreQueryGameAndDlcPackageUpdatesCompleted(int hresult, XStorePackageUpdate[] packageUpdates) Parameters hresult int packageUpdates XStorePackageUpdate[]"
  },
  "api/XGamingRuntime.SDK.XStoreReportConsumableFulfillmentCompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreReportConsumableFulfillmentCompleted.html",
    "title": "Delegate SDK.XStoreReportConsumableFulfillmentCompleted | |",
    "keywords": "Delegate SDK.XStoreReportConsumableFulfillmentCompleted Namespace XGamingRuntime public delegate void SDK.XStoreReportConsumableFulfillmentCompleted(int hresult, uint quantity) Parameters hresult int quantity uint"
  },
  "api/XGamingRuntime.SDK.XStoreShowAssociatedProductsPageUICompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreShowAssociatedProductsPageUICompleted.html",
    "title": "Delegate SDK.XStoreShowAssociatedProductsPageUICompleted | |",
    "keywords": "Delegate SDK.XStoreShowAssociatedProductsPageUICompleted Namespace XGamingRuntime public delegate void SDK.XStoreShowAssociatedProductsPageUICompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.SDK.XStoreShowProductPageUICompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreShowProductPageUICompleted.html",
    "title": "Delegate SDK.XStoreShowProductPageUICompleted | |",
    "keywords": "Delegate SDK.XStoreShowProductPageUICompleted Namespace XGamingRuntime public delegate void SDK.XStoreShowProductPageUICompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.SDK.XStoreShowPurchaseUICompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreShowPurchaseUICompleted.html",
    "title": "Delegate SDK.XStoreShowPurchaseUICompleted | |",
    "keywords": "Delegate SDK.XStoreShowPurchaseUICompleted Namespace XGamingRuntime public delegate void SDK.XStoreShowPurchaseUICompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.SDK.XStoreShowRateAndReviewUICompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreShowRateAndReviewUICompleted.html",
    "title": "Delegate SDK.XStoreShowRateAndReviewUICompleted | |",
    "keywords": "Delegate SDK.XStoreShowRateAndReviewUICompleted Namespace XGamingRuntime public delegate void SDK.XStoreShowRateAndReviewUICompleted(int hresult, bool wasUpdated) Parameters hresult int wasUpdated bool"
  },
  "api/XGamingRuntime.SDK.XStoreShowRedeemTokenUICompleted.html": {
    "href": "api/XGamingRuntime.SDK.XStoreShowRedeemTokenUICompleted.html",
    "title": "Delegate SDK.XStoreShowRedeemTokenUICompleted | |",
    "keywords": "Delegate SDK.XStoreShowRedeemTokenUICompleted Namespace XGamingRuntime public delegate void SDK.XStoreShowRedeemTokenUICompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.SDK.html": {
    "href": "api/XGamingRuntime.SDK.html",
    "title": "Class SDK | |",
    "keywords": "Class SDK Namespace XGamingRuntime public class SDK Inheritance object SDK Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields defaultQueue public static XTaskQueue defaultQueue Field Value XTaskQueue Methods XClosedCaptionGetProperties(out XClosedCaptionProperties) public static int XClosedCaptionGetProperties(out XClosedCaptionProperties properties) Parameters properties XClosedCaptionProperties Returns int XClosedCaptionSetEnabled(bool) public static int XClosedCaptionSetEnabled(bool enabled) Parameters enabled bool Returns int XGameGetXboxTitleId(out uint) public static int XGameGetXboxTitleId(out uint titleId) Parameters titleId uint Returns int XGameInviteRegisterForEvent(XGameInviteEventCallback, out XRegistrationToken) public static int XGameInviteRegisterForEvent(XGameInviteEventCallback callback, out XRegistrationToken token) Parameters callback XGameInviteEventCallback token XRegistrationToken Returns int XGameInviteUnregisterForEvent(XRegistrationToken) public static void XGameInviteUnregisterForEvent(XRegistrationToken token) Parameters token XRegistrationToken XGameRuntimeInitialize() public static int XGameRuntimeInitialize() Returns int XGameRuntimeUninitialize() public static void XGameRuntimeUninitialize() XGameSaveCloseContainer(XGameSaveContainerHandle) public static void XGameSaveCloseContainer(XGameSaveContainerHandle containerHandle) Parameters containerHandle XGameSaveContainerHandle XGameSaveCloseProvider(XGameSaveProviderHandle) public static void XGameSaveCloseProvider(XGameSaveProviderHandle gameSaveProviderHandle) Parameters gameSaveProviderHandle XGameSaveProviderHandle XGameSaveCloseUpdateHandle(XGameSaveUpdateHandle) public static void XGameSaveCloseUpdateHandle(XGameSaveUpdateHandle updateHandle) Parameters updateHandle XGameSaveUpdateHandle XGameSaveCreateContainer(XGameSaveProviderHandle, string, out XGameSaveContainerHandle) public static int XGameSaveCreateContainer(XGameSaveProviderHandle gameSaveProviderHandle, string containerName, out XGameSaveContainerHandle containerContext) Parameters gameSaveProviderHandle XGameSaveProviderHandle containerName string containerContext XGameSaveContainerHandle Returns int XGameSaveCreateUpdate(XGameSaveContainerHandle, string, out XGameSaveUpdateHandle) public static int XGameSaveCreateUpdate(XGameSaveContainerHandle container, string containerDisplayName, out XGameSaveUpdateHandle updateHandle) Parameters container XGameSaveContainerHandle containerDisplayName string updateHandle XGameSaveUpdateHandle Returns int XGameSaveDeleteContainer(XGameSaveProviderHandle, string) public static int XGameSaveDeleteContainer(XGameSaveProviderHandle gameSaveProviderHandle, string containerName) Parameters gameSaveProviderHandle XGameSaveProviderHandle containerName string Returns int XGameSaveDeleteContainerAsync(XGameSaveProviderHandle, string, XGameSaveDeleteContainerCompleted) public static void XGameSaveDeleteContainerAsync(XGameSaveProviderHandle gameSaveProviderHandle, string containerName, XGameSaveDeleteContainerCompleted completionRoutine) Parameters gameSaveProviderHandle XGameSaveProviderHandle containerName string completionRoutine XGameSaveDeleteContainerCompleted XGameSaveEnumerateBlobInfo(XGameSaveContainerHandle, out XGameSaveBlobInfo[]) public static int XGameSaveEnumerateBlobInfo(XGameSaveContainerHandle container, out XGameSaveBlobInfo[] blobInfos) Parameters container XGameSaveContainerHandle blobInfos XGameSaveBlobInfo[] Returns int XGameSaveEnumerateBlobInfoByName(XGameSaveContainerHandle, string, out XGameSaveBlobInfo[]) public static int XGameSaveEnumerateBlobInfoByName(XGameSaveContainerHandle container, string blobNamePrefix, out XGameSaveBlobInfo[] blobInfos) Parameters container XGameSaveContainerHandle blobNamePrefix string blobInfos XGameSaveBlobInfo[] Returns int XGameSaveEnumerateContainerInfo(XGameSaveProviderHandle, out XGameSaveContainerInfo[]) public static int XGameSaveEnumerateContainerInfo(XGameSaveProviderHandle provider, out XGameSaveContainerInfo[] containerInfos) Parameters provider XGameSaveProviderHandle containerInfos XGameSaveContainerInfo[] Returns int XGameSaveEnumerateContainerInfoByName(XGameSaveProviderHandle, string, out XGameSaveContainerInfo[]) public static int XGameSaveEnumerateContainerInfoByName(XGameSaveProviderHandle provider, string containerNamePrefix, out XGameSaveContainerInfo[] containerInfos) Parameters provider XGameSaveProviderHandle containerNamePrefix string containerInfos XGameSaveContainerInfo[] Returns int XGameSaveGetContainerInfo(XGameSaveProviderHandle, string, out XGameSaveContainerInfo) public static int XGameSaveGetContainerInfo(XGameSaveProviderHandle provider, string containerName, out XGameSaveContainerInfo containerInfo) Parameters provider XGameSaveProviderHandle containerName string containerInfo XGameSaveContainerInfo Returns int XGameSaveGetRemainingQuota(XGameSaveProviderHandle, out long) public static int XGameSaveGetRemainingQuota(XGameSaveProviderHandle gameSaveProviderHandle, out long remainingQuota) Parameters gameSaveProviderHandle XGameSaveProviderHandle remainingQuota long Returns int XGameSaveGetRemainingQuotaAsync(XGameSaveProviderHandle, XGameSaveGetRemainingQuotaCompleted) public static void XGameSaveGetRemainingQuotaAsync(XGameSaveProviderHandle gameSaveProviderHandle, XGameSaveGetRemainingQuotaCompleted completionRoutine) Parameters gameSaveProviderHandle XGameSaveProviderHandle completionRoutine XGameSaveGetRemainingQuotaCompleted XGameSaveInitializeProvider(XUserHandle, string, bool, out XGameSaveProviderHandle) public static int XGameSaveInitializeProvider(XUserHandle userHandle, string configurationId, bool syncOnDemand, out XGameSaveProviderHandle gameSaveProviderHandle) Parameters userHandle XUserHandle configurationId string syncOnDemand bool gameSaveProviderHandle XGameSaveProviderHandle Returns int XGameSaveInitializeProviderAsync(XUserHandle, string, bool, XGameSaveInitializeProviderCompleted) public static void XGameSaveInitializeProviderAsync(XUserHandle userHandle, string configurationId, bool syncOnDemand, XGameSaveInitializeProviderCompleted completionRoutine) Parameters userHandle XUserHandle configurationId string syncOnDemand bool completionRoutine XGameSaveInitializeProviderCompleted XGameSaveReadBlobData(XGameSaveContainerHandle, XGameSaveBlobInfo[], out XGameSaveBlob[]) public static int XGameSaveReadBlobData(XGameSaveContainerHandle container, XGameSaveBlobInfo[] blobInfos, out XGameSaveBlob[] blobs) Parameters container XGameSaveContainerHandle blobInfos XGameSaveBlobInfo[] blobs XGameSaveBlob[] Returns int XGameSaveReadBlobDataAsync(XGameSaveContainerHandle, string[], XGameSaveReadBlobDataCompleted) public static void XGameSaveReadBlobDataAsync(XGameSaveContainerHandle container, string[] blobNames, XGameSaveReadBlobDataCompleted completionRoutine) Parameters container XGameSaveContainerHandle blobNames string[] completionRoutine XGameSaveReadBlobDataCompleted XGameSaveSubmitBlobDelete(XGameSaveUpdateHandle, string) public static int XGameSaveSubmitBlobDelete(XGameSaveUpdateHandle updateHandle, string blobName) Parameters updateHandle XGameSaveUpdateHandle blobName string Returns int XGameSaveSubmitBlobWrite(XGameSaveUpdateHandle, string, byte[]) public static int XGameSaveSubmitBlobWrite(XGameSaveUpdateHandle updateHandle, string blobName, byte[] data) Parameters updateHandle XGameSaveUpdateHandle blobName string data byte[] Returns int XGameSaveSubmitUpdate(XGameSaveUpdateHandle) public static int XGameSaveSubmitUpdate(XGameSaveUpdateHandle updateHandle) Parameters updateHandle XGameSaveUpdateHandle Returns int XGameSaveSubmitUpdateAsync(XGameSaveUpdateHandle, XGameSaveSubmitUpdateCompleted) public static void XGameSaveSubmitUpdateAsync(XGameSaveUpdateHandle updateHandle, XGameSaveSubmitUpdateCompleted completionRoutine) Parameters updateHandle XGameSaveUpdateHandle completionRoutine XGameSaveSubmitUpdateCompleted XGameUIShowWebAuthenticationAsync(XUserHandle, string, string, XGameUiShowWebAuthenticationAsyncCompleted) public static void XGameUIShowWebAuthenticationAsync(XUserHandle requestingUser, string requestUri, string completionUri, XGameUiShowWebAuthenticationAsyncCompleted completionRoutine) Parameters requestingUser XUserHandle requestUri string completionUri string completionRoutine XGameUiShowWebAuthenticationAsyncCompleted XGameUiSetNotificationPositionHint(XGameUiNotificationPositionHint) public static int XGameUiSetNotificationPositionHint(XGameUiNotificationPositionHint position) Parameters position XGameUiNotificationPositionHint Returns int XGameUiShowAchievementsAsync(XUserHandle, uint, XGameUiShowAchievementsCompleted) public static void XGameUiShowAchievementsAsync(XUserHandle requestingUser, uint titleId, XGameUiShowAchievementsCompleted completionRoutine) Parameters requestingUser XUserHandle titleId uint completionRoutine XGameUiShowAchievementsCompleted XGameUiShowErrorDialogAsync(int, string, XGameUiShowErrorDialogCompleted) public static void XGameUiShowErrorDialogAsync(int errorCode, string context, XGameUiShowErrorDialogCompleted completionRoutine) Parameters errorCode int context string completionRoutine XGameUiShowErrorDialogCompleted XGameUiShowMessageDialogAsync(string, string, string, string, string, XGameUiMessageDialogButton, XGameUiMessageDialogButton, XGameUiShowMessageDialogCompleted) public static void XGameUiShowMessageDialogAsync(string titleText, string contentText, string firstButtonText, string secondButtonText, string thirdButtonText, XGameUiMessageDialogButton defaultButton, XGameUiMessageDialogButton cancelButton, XGameUiShowMessageDialogCompleted completionRoutine) Parameters titleText string contentText string firstButtonText string secondButtonText string thirdButtonText string defaultButton XGameUiMessageDialogButton cancelButton XGameUiMessageDialogButton completionRoutine XGameUiShowMessageDialogCompleted XGameUiShowPlayerPickerAsync(XUserHandle, string, ulong[], ulong[], uint, uint, XGameUiShowPlayerPickerAsyncCompleted) public static void XGameUiShowPlayerPickerAsync(XUserHandle requestingUser, string promptText, ulong[] selectFromPlayers, ulong[] preselectedPlayers, uint minSelectionCount, uint maxSelectionCount, XGameUiShowPlayerPickerAsyncCompleted completionRoutine) Parameters requestingUser XUserHandle promptText string selectFromPlayers ulong[] preselectedPlayers ulong[] minSelectionCount uint maxSelectionCount uint completionRoutine XGameUiShowPlayerPickerAsyncCompleted XGameUiShowPlayerProfileCardAsync(XUserHandle, ulong, XGameUiShowPlayerProfileCardAsyncCompleted) public static void XGameUiShowPlayerProfileCardAsync(XUserHandle requestingUser, ulong targetPlayer, XGameUiShowPlayerProfileCardAsyncCompleted completionRoutine) Parameters requestingUser XUserHandle targetPlayer ulong completionRoutine XGameUiShowPlayerProfileCardAsyncCompleted XGameUiShowSendGameInviteAsync(XUserHandle, string, string, string, string, string, XGameUiShowSendGameInviteAsyncCompleted) public static void XGameUiShowSendGameInviteAsync(XUserHandle requestingUser, string sessionConfigurationId, string sessionTemplateName, string sessionId, string invitationText, string customActivationContext, XGameUiShowSendGameInviteAsyncCompleted completionRoutine) Parameters requestingUser XUserHandle sessionConfigurationId string sessionTemplateName string sessionId string invitationText string customActivationContext string completionRoutine XGameUiShowSendGameInviteAsyncCompleted XGameUiShowTextEntryAsync(string, string, string, XGameUiTextEntryInputScope, uint, XGameUiShowTextEntryAsyncCompleted) public static void XGameUiShowTextEntryAsync(string titleText, string descriptionText, string defaultText, XGameUiTextEntryInputScope inputScope, uint maxTextLength, XGameUiShowTextEntryAsyncCompleted completionRoutine) Parameters titleText string descriptionText string defaultText string inputScope XGameUiTextEntryInputScope maxTextLength uint completionRoutine XGameUiShowTextEntryAsyncCompleted XHighContrastGetMode(out XHighContrastMode) public static int XHighContrastGetMode(out XHighContrastMode mode) Parameters mode XHighContrastMode Returns int XLaunchUri(XUserHandle, string) public static int XLaunchUri(XUserHandle requestingUser, string uri) Parameters requestingUser XUserHandle uri string Returns int XPackageCloseInstallationMonitorHandle(XPackageInstallationMonitorHandle) public static void XPackageCloseInstallationMonitorHandle(XPackageInstallationMonitorHandle installationMonitor) Parameters installationMonitor XPackageInstallationMonitorHandle XPackageCloseMountHandle(XPackageMountHandle) public static void XPackageCloseMountHandle(XPackageMountHandle mountHandle) Parameters mountHandle XPackageMountHandle XPackageCreateInstallationMonitor(string, uint, out XPackageInstallationMonitorHandle) public static int XPackageCreateInstallationMonitor(string packageIdentifier, uint minimumUpdateIntervalMs, out XPackageInstallationMonitorHandle installationMonitor) Parameters packageIdentifier string minimumUpdateIntervalMs uint installationMonitor XPackageInstallationMonitorHandle Returns int XPackageEnumerateFeatures(string, out XPackageFeature[]) public static int XPackageEnumerateFeatures(string packageIdentifier, out XPackageFeature[] features) Parameters packageIdentifier string features XPackageFeature[] Returns int XPackageEnumeratePackages(XPackageKind, XPackageEnumerationScope, out XPackageDetails[]) public static int XPackageEnumeratePackages(XPackageKind kind, XPackageEnumerationScope scope, out XPackageDetails[] details) Parameters kind XPackageKind scope XPackageEnumerationScope details XPackageDetails[] Returns int XPackageEstimateDownloadSize(string, out ulong, out bool) public static int XPackageEstimateDownloadSize(string packageIdentifier, out ulong downloadSize, out bool shouldPresentUserConfirmation) Parameters packageIdentifier string downloadSize ulong shouldPresentUserConfirmation bool Returns int XPackageGetCurrentProcessPackageIdentifier(out string) public static int XPackageGetCurrentProcessPackageIdentifier(out string identifier) Parameters identifier string Returns int XPackageGetInstallationProgress(XPackageInstallationMonitorHandle, out XPackageInstallationProgress) public static void XPackageGetInstallationProgress(XPackageInstallationMonitorHandle installationMonitor, out XPackageInstallationProgress installationProgress) Parameters installationMonitor XPackageInstallationMonitorHandle installationProgress XPackageInstallationProgress XPackageGetMountPath(XPackageMountHandle, out string) public static int XPackageGetMountPath(XPackageMountHandle mountHandle, out string path) Parameters mountHandle XPackageMountHandle path string Returns int XPackageGetUserLocale(out string) public static int XPackageGetUserLocale(out string locale) Parameters locale string Returns int XPackageGetWriteStats(out XPackageWriteStats) public static int XPackageGetWriteStats(out XPackageWriteStats writeStats) Parameters writeStats XPackageWriteStats Returns int XPackageIsPackagedProcess() public static bool XPackageIsPackagedProcess() Returns bool XPackageMount(string, out XPackageMountHandle) public static int XPackageMount(string packageIdentifier, out XPackageMountHandle mountHandle) Parameters packageIdentifier string mountHandle XPackageMountHandle Returns int XPackageRegisterInstallationProgressChanged(XPackageInstallationMonitorHandle, XPackageInstallationProgressCallback, out XRegistrationToken) public static int XPackageRegisterInstallationProgressChanged(XPackageInstallationMonitorHandle installationMonitor, XPackageInstallationProgressCallback callback, out XRegistrationToken token) Parameters installationMonitor XPackageInstallationMonitorHandle callback XPackageInstallationProgressCallback token XRegistrationToken Returns int XPackageRegisterPackageInstalled(XPackageInstalledCallback, out XRegistrationToken) public static int XPackageRegisterPackageInstalled(XPackageInstalledCallback callback, out XRegistrationToken token) Parameters callback XPackageInstalledCallback token XRegistrationToken Returns int XPackageUninstallUWPInstance(string) public static int XPackageUninstallUWPInstance(string packageName) Parameters packageName string Returns int XPackageUnregisterInstallationProgressChanged(XPackageInstallationMonitorHandle, XRegistrationToken) public static void XPackageUnregisterInstallationProgressChanged(XPackageInstallationMonitorHandle installationMonitor, XRegistrationToken token) Parameters installationMonitor XPackageInstallationMonitorHandle token XRegistrationToken XPackageUnregisterPackageInstalled(XRegistrationToken) public static void XPackageUnregisterPackageInstalled(XRegistrationToken token) Parameters token XRegistrationToken XPackageUpdateInstallationMonitor(XPackageInstallationMonitorHandle) public static bool XPackageUpdateInstallationMonitor(XPackageInstallationMonitorHandle installationMonitor) Parameters installationMonitor XPackageInstallationMonitorHandle Returns bool XSpeechToTextBeginHypothesisString(string, string, XSpeechToTextType, out uint) public static int XSpeechToTextBeginHypothesisString(string speakerName, string content, XSpeechToTextType type, out uint hypothesisId) Parameters speakerName string content string type XSpeechToTextType hypothesisId uint Returns int XSpeechToTextCancelHypothesisString(uint) public static int XSpeechToTextCancelHypothesisString(uint hypothesisId) Parameters hypothesisId uint Returns int XSpeechToTextFinalizeHypothesisString(uint, string) public static int XSpeechToTextFinalizeHypothesisString(uint hypothesisId, string content) Parameters hypothesisId uint content string Returns int XSpeechToTextSendString(string, string, XSpeechToTextType) public static int XSpeechToTextSendString(string speakerName, string content, XSpeechToTextType type) Parameters speakerName string content string type XSpeechToTextType Returns int XSpeechToTextSetPositionHint(XSpeechToTextPositionHint) public static int XSpeechToTextSetPositionHint(XSpeechToTextPositionHint position) Parameters position XSpeechToTextPositionHint Returns int XSpeechToTextUpdateHypothesisString(uint, string) public static int XSpeechToTextUpdateHypothesisString(uint hypothesisId, string content) Parameters hypothesisId uint content string Returns int XStoreAcquireLicenseForDurablesAsync(XStoreContext, string, XStoreAcquireLicenseForDurablesAsync) public static void XStoreAcquireLicenseForDurablesAsync(XStoreContext context, string storeId, XStoreAcquireLicenseForDurablesAsync completionRoutine) Parameters context XStoreContext storeId string completionRoutine XStoreAcquireLicenseForDurablesAsync XStoreAcquireLicenseForPackageAsync(XStoreContext, string, XStoreAcquireLicenseForPackageCompleted) public static void XStoreAcquireLicenseForPackageAsync(XStoreContext context, string packageIdentifier, XStoreAcquireLicenseForPackageCompleted completionRoutine) Parameters context XStoreContext packageIdentifier string completionRoutine XStoreAcquireLicenseForPackageCompleted XStoreCanAcquireLicenseForPackageAsync(XStoreContext, string, XStoreCanAcquireLicenseForPackageCompleted) public static void XStoreCanAcquireLicenseForPackageAsync(XStoreContext context, string packageIdentifier, XStoreCanAcquireLicenseForPackageCompleted completionRoutine) Parameters context XStoreContext packageIdentifier string completionRoutine XStoreCanAcquireLicenseForPackageCompleted XStoreCanAcquireLicenseForStoreIdAsync(XStoreContext, string, XStoreCanAcquireLicenseForStoreIdCompleted) public static void XStoreCanAcquireLicenseForStoreIdAsync(XStoreContext context, string storeProductId, XStoreCanAcquireLicenseForStoreIdCompleted completionRoutine) Parameters context XStoreContext storeProductId string completionRoutine XStoreCanAcquireLicenseForStoreIdCompleted XStoreCloseContextHandle(XStoreContext) public static void XStoreCloseContextHandle(XStoreContext context) Parameters context XStoreContext XStoreCloseLicenseHandle(XStoreLicense) public static void XStoreCloseLicenseHandle(XStoreLicense license) Parameters license XStoreLicense XStoreCloseProductsQueryHandle(XStoreQueryResult) public static void XStoreCloseProductsQueryHandle(XStoreQueryResult result) Parameters result XStoreQueryResult XStoreCreateContext(out XStoreContext) public static int XStoreCreateContext(out XStoreContext storeContext) Parameters storeContext XStoreContext Returns int XStoreCreateContext(XUserHandle, out XStoreContext) public static int XStoreCreateContext(XUserHandle user, out XStoreContext storeContext) Parameters user XUserHandle storeContext XStoreContext Returns int XStoreDownloadAndInstallPackageUpdatesAsync(XStoreContext, string[], XStoreDownloadAndInstallPackageUpdatesCompleted) public static void XStoreDownloadAndInstallPackageUpdatesAsync(XStoreContext context, string[] packageIdentifiers, SDK.XStoreDownloadAndInstallPackageUpdatesCompleted completionRoutine) Parameters context XStoreContext packageIdentifiers string[] completionRoutine SDK.XStoreDownloadAndInstallPackageUpdatesCompleted XStoreDownloadAndInstallPackagesAsync(XStoreContext, string[], XStoreDownloadAndInstallPackagesCompleted) public static void XStoreDownloadAndInstallPackagesAsync(XStoreContext context, string[] storeIds, SDK.XStoreDownloadAndInstallPackagesCompleted completionRoutine) Parameters context XStoreContext storeIds string[] completionRoutine SDK.XStoreDownloadAndInstallPackagesCompleted XStoreDownloadPackageUpdatesAsync(XStoreContext, string[], XStoreDownloadPackageUpdatesCompleted) public static void XStoreDownloadPackageUpdatesAsync(XStoreContext context, string[] packageIdentifiers, SDK.XStoreDownloadPackageUpdatesCompleted completionRoutine) Parameters context XStoreContext packageIdentifiers string[] completionRoutine SDK.XStoreDownloadPackageUpdatesCompleted XStoreGetUserCollectionsIdAsync(XStoreContext, string, string, XStoreGetUserCollectionsIdCompleted) public static void XStoreGetUserCollectionsIdAsync(XStoreContext context, string serviceTicket, string publisherUserId, SDK.XStoreGetUserCollectionsIdCompleted completionRoutine) Parameters context XStoreContext serviceTicket string publisherUserId string completionRoutine SDK.XStoreGetUserCollectionsIdCompleted XStoreGetUserPurchaseIdAsync(XStoreContext, string, string, XStoreGetUserPurchaseIdCompleted) public static void XStoreGetUserPurchaseIdAsync(XStoreContext context, string serviceTicket, string publisherUserId, SDK.XStoreGetUserPurchaseIdCompleted completionRoutine) Parameters context XStoreContext serviceTicket string publisherUserId string completionRoutine SDK.XStoreGetUserPurchaseIdCompleted XStoreIsAvailabilityPurchasable(XStoreAvailability) public static bool XStoreIsAvailabilityPurchasable(XStoreAvailability availability) Parameters availability XStoreAvailability Returns bool XStoreIsLicenseValid(XStoreLicense) public static bool XStoreIsLicenseValid(XStoreLicense license) Parameters license XStoreLicense Returns bool XStoreProductsQueryNextPageAsync(XStoreQueryResult, XStoreQueryComplete) public static void XStoreProductsQueryNextPageAsync(XStoreQueryResult currentPage, XStoreQueryComplete completionRoutine) Parameters currentPage XStoreQueryResult completionRoutine XStoreQueryComplete XStoreQueryAddOnLicensesAsync(XStoreContext, XStoreQueryAddOnLicensesCompleted) public static void XStoreQueryAddOnLicensesAsync(XStoreContext context, XStoreQueryAddOnLicensesCompleted completionRoutine) Parameters context XStoreContext completionRoutine XStoreQueryAddOnLicensesCompleted XStoreQueryAssociatedProductsAsync(XStoreContext, XStoreProductKind, uint, XStoreQueryComplete) public static void XStoreQueryAssociatedProductsAsync(XStoreContext context, XStoreProductKind productKinds, uint maxItemsToRetrievePerPage, XStoreQueryComplete completionRoutine) Parameters context XStoreContext productKinds XStoreProductKind maxItemsToRetrievePerPage uint completionRoutine XStoreQueryComplete XStoreQueryConsumableBalanceRemainingAsync(XStoreContext, string, XStoreQueryConsumableBalanceRemainingCompleted) public static void XStoreQueryConsumableBalanceRemainingAsync(XStoreContext context, string storeProductId, SDK.XStoreQueryConsumableBalanceRemainingCompleted completionRoutine) Parameters context XStoreContext storeProductId string completionRoutine SDK.XStoreQueryConsumableBalanceRemainingCompleted XStoreQueryEntitledProductsAsync(XStoreContext, XStoreProductKind, uint, XStoreQueryComplete) public static void XStoreQueryEntitledProductsAsync(XStoreContext context, XStoreProductKind productKinds, uint maxItemsToRetrievePerPage, XStoreQueryComplete completionRoutine) Parameters context XStoreContext productKinds XStoreProductKind maxItemsToRetrievePerPage uint completionRoutine XStoreQueryComplete XStoreQueryGameAndDlcPackageUpdatesAsync(XStoreContext, XStoreQueryGameAndDlcPackageUpdatesCompleted) public static void XStoreQueryGameAndDlcPackageUpdatesAsync(XStoreContext context, SDK.XStoreQueryGameAndDlcPackageUpdatesCompleted completionRoutine) Parameters context XStoreContext completionRoutine SDK.XStoreQueryGameAndDlcPackageUpdatesCompleted XStoreQueryGameLicenseAsync(XStoreContext, XStoreQueryGameLicenseCompleted) public static void XStoreQueryGameLicenseAsync(XStoreContext context, XStoreQueryGameLicenseCompleted completionRoutine) Parameters context XStoreContext completionRoutine XStoreQueryGameLicenseCompleted XStoreQueryLicenseTokenAsync(XStoreContext, string[], string, XStoreQueryLicenseTokenCompleted) public static void XStoreQueryLicenseTokenAsync(XStoreContext context, string[] productIds, string customDeveloperString, XStoreQueryLicenseTokenCompleted completionRoutine) Parameters context XStoreContext productIds string[] customDeveloperString string completionRoutine XStoreQueryLicenseTokenCompleted XStoreQueryPackageIdentifier(string, out string) public static int XStoreQueryPackageIdentifier(string storeId, out string packageIdentifier) Parameters storeId string packageIdentifier string Returns int XStoreQueryProductForCurrentGameAsync(XStoreContext, XStoreQueryComplete) public static void XStoreQueryProductForCurrentGameAsync(XStoreContext context, XStoreQueryComplete completionRoutine) Parameters context XStoreContext completionRoutine XStoreQueryComplete XStoreQueryProductForPackageAsync(XStoreContext, XStoreProductKind, string, XStoreQueryComplete) public static void XStoreQueryProductForPackageAsync(XStoreContext context, XStoreProductKind productKinds, string packageIdentifier, XStoreQueryComplete completionRoutine) Parameters context XStoreContext productKinds XStoreProductKind packageIdentifier string completionRoutine XStoreQueryComplete XStoreQueryProductsAsync(XStoreContext, XStoreProductKind, string[], string[], XStoreQueryComplete) public static void XStoreQueryProductsAsync(XStoreContext context, XStoreProductKind productKinds, string[] storeIds, string[] actionFilters, XStoreQueryComplete completionRoutine) Parameters context XStoreContext productKinds XStoreProductKind storeIds string[] actionFilters string[] completionRoutine XStoreQueryComplete XStoreRegisterGameLicenseChanged(XStoreContext, XStoreGameLicenseChangedCallback, out XRegistrationToken) public static int XStoreRegisterGameLicenseChanged(XStoreContext context, XStoreGameLicenseChangedCallback callback, out XRegistrationToken token) Parameters context XStoreContext callback XStoreGameLicenseChangedCallback token XRegistrationToken Returns int XStoreRegisterPackageLicenseLost(XStoreLicense, XStorePackageLicenseLostCallback, out XRegistrationToken) public static int XStoreRegisterPackageLicenseLost(XStoreLicense license, XStorePackageLicenseLostCallback callback, out XRegistrationToken token) Parameters license XStoreLicense callback XStorePackageLicenseLostCallback token XRegistrationToken Returns int XStoreReportConsumableFulfillmentAsync(XStoreContext, string, uint, Guid, XStoreReportConsumableFulfillmentCompleted) public static void XStoreReportConsumableFulfillmentAsync(XStoreContext context, string storeProductId, uint quantity, Guid trackingId, SDK.XStoreReportConsumableFulfillmentCompleted completionRoutine) Parameters context XStoreContext storeProductId string quantity uint trackingId Guid completionRoutine SDK.XStoreReportConsumableFulfillmentCompleted XStoreShowAssociatedProductsUIAsync(XStoreContext, string, XStoreProductKind, XStoreShowAssociatedProductsPageUICompleted) public static int XStoreShowAssociatedProductsUIAsync(XStoreContext context, string storeId, XStoreProductKind productKinds, SDK.XStoreShowAssociatedProductsPageUICompleted completionRoutine) Parameters context XStoreContext storeId string productKinds XStoreProductKind completionRoutine SDK.XStoreShowAssociatedProductsPageUICompleted Returns int XStoreShowProductPageUIAsync(XStoreContext, string, XStoreShowProductPageUICompleted) public static int XStoreShowProductPageUIAsync(XStoreContext context, string storeId, SDK.XStoreShowProductPageUICompleted completionRoutine) Parameters context XStoreContext storeId string completionRoutine SDK.XStoreShowProductPageUICompleted Returns int XStoreShowPurchaseUIAsync(XStoreContext, string, string, string, XStoreShowPurchaseUICompleted) public static void XStoreShowPurchaseUIAsync(XStoreContext context, string storeId, string name, string extendedJsonData, SDK.XStoreShowPurchaseUICompleted completionRoutine) Parameters context XStoreContext storeId string name string extendedJsonData string completionRoutine SDK.XStoreShowPurchaseUICompleted XStoreShowRateAndReviewUIAsync(XStoreContext, XStoreShowRateAndReviewUICompleted) public static void XStoreShowRateAndReviewUIAsync(XStoreContext context, SDK.XStoreShowRateAndReviewUICompleted completionRoutine) Parameters context XStoreContext completionRoutine SDK.XStoreShowRateAndReviewUICompleted XStoreShowRedeemTokenUIAsync(XStoreContext, string, string[], bool, XStoreShowRedeemTokenUICompleted) public static void XStoreShowRedeemTokenUIAsync(XStoreContext context, string token, string[] allowedStoreIds, bool disallowCsvRedeption, SDK.XStoreShowRedeemTokenUICompleted completionRoutine) Parameters context XStoreContext token string allowedStoreIds string[] disallowCsvRedeption bool completionRoutine SDK.XStoreShowRedeemTokenUICompleted XStoreUnregisterGameLicenseChanged(XStoreContext, XRegistrationToken) public static void XStoreUnregisterGameLicenseChanged(XStoreContext context, XRegistrationToken token) Parameters context XStoreContext token XRegistrationToken XStoreUnregisterPackageLicenseLost(XStoreLicense, XRegistrationToken) public static void XStoreUnregisterPackageLicenseLost(XStoreLicense license, XRegistrationToken token) Parameters license XStoreLicense token XRegistrationToken XTaskQueueDispatch(uint) public static void XTaskQueueDispatch(uint timeoutMs = 0) Parameters timeoutMs uint XThreadAssertNotTimeSensitive() public static void XThreadAssertNotTimeSensitive() XThreadIsTimeSensitive() public static bool XThreadIsTimeSensitive() Returns bool XThreadSetTimeSensitive(bool) public static int XThreadSetTimeSensitive(bool isTimeSensitiveThread) Parameters isTimeSensitiveThread bool Returns int XUserAddAsync(XUserAddOptions, XUserAddCompleted) public static void XUserAddAsync(XUserAddOptions options, XUserAddCompleted completionRoutine) Parameters options XUserAddOptions completionRoutine XUserAddCompleted XUserCheckPrivilege(XUserHandle, XUserPrivilegeOptions, XUserPrivilege, out bool, out XUserPrivilegeDenyReason) public static int XUserCheckPrivilege(XUserHandle user, XUserPrivilegeOptions options, XUserPrivilege privilege, out bool hasPrivilege, out XUserPrivilegeDenyReason reason) Parameters user XUserHandle options XUserPrivilegeOptions privilege XUserPrivilege hasPrivilege bool reason XUserPrivilegeDenyReason Returns int XUserCloseHandle(XUserHandle) public static void XUserCloseHandle(XUserHandle user) Parameters user XUserHandle XUserCloseSignOutDeferralHandle(XUserSignOutDeferralHandle) public static int XUserCloseSignOutDeferralHandle(XUserSignOutDeferralHandle deferral) Parameters deferral XUserSignOutDeferralHandle Returns int XUserCompare(XUserHandle, XUserHandle, out int) public static int XUserCompare(XUserHandle user1, XUserHandle user2, out int comparisonResult) Parameters user1 XUserHandle user2 XUserHandle comparisonResult int Returns int XUserDuplicateHandle(XUserHandle, out XUserHandle) public static int XUserDuplicateHandle(XUserHandle handle, out XUserHandle duplicatedHandle) Parameters handle XUserHandle duplicatedHandle XUserHandle Returns int XUserFindUserById(ulong, out XUserHandle) public static int XUserFindUserById(ulong userId, out XUserHandle handle) Parameters userId ulong handle XUserHandle Returns int XUserFindUserByLocalId(XUserLocalId, out XUserHandle) public static int XUserFindUserByLocalId(XUserLocalId userLocalId, out XUserHandle handle) Parameters userLocalId XUserLocalId handle XUserHandle Returns int XUserGetAgeGroup(XUserHandle, out XUserAgeGroup) public static int XUserGetAgeGroup(XUserHandle user, out XUserAgeGroup ageGroup) Parameters user XUserHandle ageGroup XUserAgeGroup Returns int XUserGetGamerPictureAsync(XUserHandle, XUserGamerPictureSize, XUserGetGamerPictureCompleted) public static void XUserGetGamerPictureAsync(XUserHandle user, XUserGamerPictureSize pictureSize, XUserGetGamerPictureCompleted completionRoutine) Parameters user XUserHandle pictureSize XUserGamerPictureSize completionRoutine XUserGetGamerPictureCompleted XUserGetGamertag(XUserHandle, XUserGamertagComponent, out string) public static int XUserGetGamertag(XUserHandle user, XUserGamertagComponent gamertagComponent, out string gamertag) Parameters user XUserHandle gamertagComponent XUserGamertagComponent gamertag string Returns int XUserGetId(XUserHandle, out ulong) public static int XUserGetId(XUserHandle user, out ulong userId) Parameters user XUserHandle userId ulong Returns int XUserGetIsGuest(XUserHandle, out bool) public static int XUserGetIsGuest(XUserHandle user, out bool isGuest) Parameters user XUserHandle isGuest bool Returns int XUserGetLocalId(XUserHandle, out XUserLocalId) public static int XUserGetLocalId(XUserHandle user, out XUserLocalId userLocalId) Parameters user XUserHandle userLocalId XUserLocalId Returns int XUserGetMaxUsers(out uint) public static int XUserGetMaxUsers(out uint maxUsers) Parameters maxUsers uint Returns int XUserGetSignOutDeferral(out XUserSignOutDeferralHandle) public static int XUserGetSignOutDeferral(out XUserSignOutDeferralHandle deferral) Parameters deferral XUserSignOutDeferralHandle Returns int XUserGetState(XUserHandle, out XUserState) public static int XUserGetState(XUserHandle user, out XUserState state) Parameters user XUserHandle state XUserState Returns int XUserGetTokenAndSignatureUtf16Async(XUserHandle, XUserGetTokenAndSignatureOptions, string, string, XUserGetTokenAndSignatureUtf16HttpHeader[], byte[], XUserGetTokenAndSignatureUtf16Result) public static void XUserGetTokenAndSignatureUtf16Async(XUserHandle user, XUserGetTokenAndSignatureOptions options, string method, string url, XUserGetTokenAndSignatureUtf16HttpHeader[] headers, byte[] body, XUserGetTokenAndSignatureUtf16Result completionRoutine) Parameters user XUserHandle options XUserGetTokenAndSignatureOptions method string url string headers XUserGetTokenAndSignatureUtf16HttpHeader[] body byte[] completionRoutine XUserGetTokenAndSignatureUtf16Result XUserRegisterForChangeEvent(XUserChangeEventCallback, out XRegistrationToken) public static int XUserRegisterForChangeEvent(XUserChangeEventCallback callback, out XRegistrationToken registrationToken) Parameters callback XUserChangeEventCallback registrationToken XRegistrationToken Returns int XUserResolveIssueWithUiUtf16Async(XUserHandle, string, XUserResolveIssueWithUiUtf16Result) public static void XUserResolveIssueWithUiUtf16Async(XUserHandle user, string url, XUserResolveIssueWithUiUtf16Result completionRoutine) Parameters user XUserHandle url string completionRoutine XUserResolveIssueWithUiUtf16Result XUserResolvePrivilegeWithUiAsync(XUserHandle, XUserPrivilegeOptions, XUserPrivilege, XUserResolvePrivilegeWithUiCompleted) public static void XUserResolvePrivilegeWithUiAsync(XUserHandle user, XUserPrivilegeOptions options, XUserPrivilege privilege, XUserResolvePrivilegeWithUiCompleted completionRoutine) Parameters user XUserHandle options XUserPrivilegeOptions privilege XUserPrivilege completionRoutine XUserResolvePrivilegeWithUiCompleted XUserUnregisterForChangeEvent(XRegistrationToken) public static void XUserUnregisterForChangeEvent(XRegistrationToken registrationToken) Parameters registrationToken XRegistrationToken"
  },
  "api/XGamingRuntime.XClosedCaptionFontEdgeAttribute.html": {
    "href": "api/XGamingRuntime.XClosedCaptionFontEdgeAttribute.html",
    "title": "Enum XClosedCaptionFontEdgeAttribute | |",
    "keywords": "Enum XClosedCaptionFontEdgeAttribute Namespace XGamingRuntime public enum XClosedCaptionFontEdgeAttribute : uint Fields Default = 0 DepressedEdges = 3 DropShadowedEdges = 5 NoEdgeAttribute = 1 RaisedEdges = 2 UniformedEdges = 4"
  },
  "api/XGamingRuntime.XClosedCaptionFontStyle.html": {
    "href": "api/XGamingRuntime.XClosedCaptionFontStyle.html",
    "title": "Enum XClosedCaptionFontStyle | |",
    "keywords": "Enum XClosedCaptionFontStyle Namespace XGamingRuntime public enum XClosedCaptionFontStyle : uint Fields Casual = 5 Cursive = 6 Default = 0 MonospacedWithSerifs = 1 MonospacedWithoutSerifs = 3 ProportionalWithSerifs = 2 ProportionalWithoutSerifs = 4 SmallCapitals = 7"
  },
  "api/XGamingRuntime.XClosedCaptionProperties.html": {
    "href": "api/XGamingRuntime.XClosedCaptionProperties.html",
    "title": "Class XClosedCaptionProperties | |",
    "keywords": "Class XClosedCaptionProperties Namespace XGamingRuntime public class XClosedCaptionProperties Inheritance object XClosedCaptionProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BackgroundColor public XColor BackgroundColor { get; } Property Value XColor Enabled public bool Enabled { get; } Property Value bool FontColor public XColor FontColor { get; } Property Value XColor FontEdgeAttribute public XClosedCaptionFontEdgeAttribute FontEdgeAttribute { get; } Property Value XClosedCaptionFontEdgeAttribute FontScale public float FontScale { get; } Property Value float FontStyle public XClosedCaptionFontStyle FontStyle { get; } Property Value XClosedCaptionFontStyle WindowColor public XColor WindowColor { get; } Property Value XColor"
  },
  "api/XGamingRuntime.XColor.html": {
    "href": "api/XGamingRuntime.XColor.html",
    "title": "Class XColor | |",
    "keywords": "Class XColor Namespace XGamingRuntime public class XColor Inheritance object XColor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties A public byte A { get; } Property Value byte B public byte B { get; } Property Value byte G public byte G { get; } Property Value byte R public byte R { get; } Property Value byte Value public uint Value { get; } Property Value uint"
  },
  "api/XGamingRuntime.XGameInviteEventCallback.html": {
    "href": "api/XGamingRuntime.XGameInviteEventCallback.html",
    "title": "Delegate XGameInviteEventCallback | |",
    "keywords": "Delegate XGameInviteEventCallback Namespace XGamingRuntime public delegate void XGameInviteEventCallback(string inviteUri) Parameters inviteUri string"
  },
  "api/XGamingRuntime.XGameSaveBlob.html": {
    "href": "api/XGamingRuntime.XGameSaveBlob.html",
    "title": "Class XGameSaveBlob | |",
    "keywords": "Class XGameSaveBlob Namespace XGamingRuntime public class XGameSaveBlob Inheritance object XGameSaveBlob Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public byte[] Data Field Value byte[] Info public XGameSaveBlobInfo Info Field Value XGameSaveBlobInfo"
  },
  "api/XGamingRuntime.XGameSaveBlobInfo.html": {
    "href": "api/XGamingRuntime.XGameSaveBlobInfo.html",
    "title": "Class XGameSaveBlobInfo | |",
    "keywords": "Class XGameSaveBlobInfo Namespace XGamingRuntime public class XGameSaveBlobInfo Inheritance object XGameSaveBlobInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string Name { get; } Property Value string Size public uint Size { get; } Property Value uint"
  },
  "api/XGamingRuntime.XGameSaveContainerHandle.html": {
    "href": "api/XGamingRuntime.XGameSaveContainerHandle.html",
    "title": "Class XGameSaveContainerHandle | |",
    "keywords": "Class XGameSaveContainerHandle Namespace XGamingRuntime public class XGameSaveContainerHandle : EquatableHandle Inheritance object EquatableHandle XGameSaveContainerHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XGameSaveContainerInfo.html": {
    "href": "api/XGamingRuntime.XGameSaveContainerInfo.html",
    "title": "Class XGameSaveContainerInfo | |",
    "keywords": "Class XGameSaveContainerInfo Namespace XGamingRuntime public class XGameSaveContainerInfo Inheritance object XGameSaveContainerInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BlobCount public uint BlobCount { get; } Property Value uint DisplayName public string DisplayName { get; } Property Value string LastModifiedTime public DateTime LastModifiedTime { get; } Property Value DateTime Name public string Name { get; } Property Value string TotalSize public ulong TotalSize { get; } Property Value ulong"
  },
  "api/XGamingRuntime.XGameSaveDeleteContainerCompleted.html": {
    "href": "api/XGamingRuntime.XGameSaveDeleteContainerCompleted.html",
    "title": "Delegate XGameSaveDeleteContainerCompleted | |",
    "keywords": "Delegate XGameSaveDeleteContainerCompleted Namespace XGamingRuntime public delegate void XGameSaveDeleteContainerCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XGameSaveGetRemainingQuotaCompleted.html": {
    "href": "api/XGamingRuntime.XGameSaveGetRemainingQuotaCompleted.html",
    "title": "Delegate XGameSaveGetRemainingQuotaCompleted | |",
    "keywords": "Delegate XGameSaveGetRemainingQuotaCompleted Namespace XGamingRuntime public delegate void XGameSaveGetRemainingQuotaCompleted(int hresult, long remainingQuota) Parameters hresult int remainingQuota long"
  },
  "api/XGamingRuntime.XGameSaveInitializeProviderCompleted.html": {
    "href": "api/XGamingRuntime.XGameSaveInitializeProviderCompleted.html",
    "title": "Delegate XGameSaveInitializeProviderCompleted | |",
    "keywords": "Delegate XGameSaveInitializeProviderCompleted Namespace XGamingRuntime public delegate void XGameSaveInitializeProviderCompleted(int hresult, XGameSaveProviderHandle gameSaveProviderHandle) Parameters hresult int gameSaveProviderHandle XGameSaveProviderHandle"
  },
  "api/XGamingRuntime.XGameSaveProviderHandle.html": {
    "href": "api/XGamingRuntime.XGameSaveProviderHandle.html",
    "title": "Class XGameSaveProviderHandle | |",
    "keywords": "Class XGameSaveProviderHandle Namespace XGamingRuntime public class XGameSaveProviderHandle : EquatableHandle Inheritance object EquatableHandle XGameSaveProviderHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XGameSaveReadBlobDataCompleted.html": {
    "href": "api/XGamingRuntime.XGameSaveReadBlobDataCompleted.html",
    "title": "Delegate XGameSaveReadBlobDataCompleted | |",
    "keywords": "Delegate XGameSaveReadBlobDataCompleted Namespace XGamingRuntime public delegate void XGameSaveReadBlobDataCompleted(int hresult, XGameSaveBlob[] blobs) Parameters hresult int blobs XGameSaveBlob[]"
  },
  "api/XGamingRuntime.XGameSaveSubmitUpdateCompleted.html": {
    "href": "api/XGamingRuntime.XGameSaveSubmitUpdateCompleted.html",
    "title": "Delegate XGameSaveSubmitUpdateCompleted | |",
    "keywords": "Delegate XGameSaveSubmitUpdateCompleted Namespace XGamingRuntime public delegate void XGameSaveSubmitUpdateCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XGameSaveUpdateHandle.html": {
    "href": "api/XGamingRuntime.XGameSaveUpdateHandle.html",
    "title": "Class XGameSaveUpdateHandle | |",
    "keywords": "Class XGameSaveUpdateHandle Namespace XGamingRuntime public class XGameSaveUpdateHandle : EquatableHandle Inheritance object EquatableHandle XGameSaveUpdateHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XGameUiMessageDialogButton.html": {
    "href": "api/XGamingRuntime.XGameUiMessageDialogButton.html",
    "title": "Enum XGameUiMessageDialogButton | |",
    "keywords": "Enum XGameUiMessageDialogButton Namespace XGamingRuntime public enum XGameUiMessageDialogButton : uint Fields First = 0 Second = 1 Third = 2"
  },
  "api/XGamingRuntime.XGameUiNotificationPositionHint.html": {
    "href": "api/XGamingRuntime.XGameUiNotificationPositionHint.html",
    "title": "Enum XGameUiNotificationPositionHint | |",
    "keywords": "Enum XGameUiNotificationPositionHint Namespace XGamingRuntime public enum XGameUiNotificationPositionHint : uint Fields BottomCenter = 0 BottomLeft = 1 BottomRight = 2 TopCenter = 3 TopLeft = 4 TopRight = 5"
  },
  "api/XGamingRuntime.XGameUiShowAchievementsCompleted.html": {
    "href": "api/XGamingRuntime.XGameUiShowAchievementsCompleted.html",
    "title": "Delegate XGameUiShowAchievementsCompleted | |",
    "keywords": "Delegate XGameUiShowAchievementsCompleted Namespace XGamingRuntime public delegate void XGameUiShowAchievementsCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XGameUiShowErrorDialogCompleted.html": {
    "href": "api/XGamingRuntime.XGameUiShowErrorDialogCompleted.html",
    "title": "Delegate XGameUiShowErrorDialogCompleted | |",
    "keywords": "Delegate XGameUiShowErrorDialogCompleted Namespace XGamingRuntime public delegate void XGameUiShowErrorDialogCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XGameUiShowMessageDialogCompleted.html": {
    "href": "api/XGamingRuntime.XGameUiShowMessageDialogCompleted.html",
    "title": "Delegate XGameUiShowMessageDialogCompleted | |",
    "keywords": "Delegate XGameUiShowMessageDialogCompleted Namespace XGamingRuntime public delegate void XGameUiShowMessageDialogCompleted(int hresult, XGameUiMessageDialogButton resultButton) Parameters hresult int resultButton XGameUiMessageDialogButton"
  },
  "api/XGamingRuntime.XGameUiShowPlayerPickerAsyncCompleted.html": {
    "href": "api/XGamingRuntime.XGameUiShowPlayerPickerAsyncCompleted.html",
    "title": "Delegate XGameUiShowPlayerPickerAsyncCompleted | |",
    "keywords": "Delegate XGameUiShowPlayerPickerAsyncCompleted Namespace XGamingRuntime public delegate void XGameUiShowPlayerPickerAsyncCompleted(int hresult, ulong[] resultPlayers) Parameters hresult int resultPlayers ulong[]"
  },
  "api/XGamingRuntime.XGameUiShowPlayerProfileCardAsyncCompleted.html": {
    "href": "api/XGamingRuntime.XGameUiShowPlayerProfileCardAsyncCompleted.html",
    "title": "Delegate XGameUiShowPlayerProfileCardAsyncCompleted | |",
    "keywords": "Delegate XGameUiShowPlayerProfileCardAsyncCompleted Namespace XGamingRuntime public delegate void XGameUiShowPlayerProfileCardAsyncCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XGameUiShowSendGameInviteAsyncCompleted.html": {
    "href": "api/XGamingRuntime.XGameUiShowSendGameInviteAsyncCompleted.html",
    "title": "Delegate XGameUiShowSendGameInviteAsyncCompleted | |",
    "keywords": "Delegate XGameUiShowSendGameInviteAsyncCompleted Namespace XGamingRuntime public delegate void XGameUiShowSendGameInviteAsyncCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XGameUiShowTextEntryAsyncCompleted.html": {
    "href": "api/XGamingRuntime.XGameUiShowTextEntryAsyncCompleted.html",
    "title": "Delegate XGameUiShowTextEntryAsyncCompleted | |",
    "keywords": "Delegate XGameUiShowTextEntryAsyncCompleted Namespace XGamingRuntime public delegate void XGameUiShowTextEntryAsyncCompleted(int hresult, string resultText) Parameters hresult int resultText string"
  },
  "api/XGamingRuntime.XGameUiShowWebAuthenticationAsyncCompleted.html": {
    "href": "api/XGamingRuntime.XGameUiShowWebAuthenticationAsyncCompleted.html",
    "title": "Delegate XGameUiShowWebAuthenticationAsyncCompleted | |",
    "keywords": "Delegate XGameUiShowWebAuthenticationAsyncCompleted Namespace XGamingRuntime public delegate void XGameUiShowWebAuthenticationAsyncCompleted(int hresult, XGameUiWebAuthenticationResultData result) Parameters hresult int result XGameUiWebAuthenticationResultData"
  },
  "api/XGamingRuntime.XGameUiTextEntryInputScope.html": {
    "href": "api/XGamingRuntime.XGameUiTextEntryInputScope.html",
    "title": "Enum XGameUiTextEntryInputScope | |",
    "keywords": "Enum XGameUiTextEntryInputScope Namespace XGamingRuntime public enum XGameUiTextEntryInputScope : uint Fields Alphanumeric = 40 Default = 0 EmailSmtpAddress = 5 Number = 29 Password = 31 Search = 50 TelephoneNumber = 32 Url = 1"
  },
  "api/XGamingRuntime.XGameUiWebAuthenticationResultData.html": {
    "href": "api/XGamingRuntime.XGameUiWebAuthenticationResultData.html",
    "title": "Class XGameUiWebAuthenticationResultData | |",
    "keywords": "Class XGameUiWebAuthenticationResultData Namespace XGamingRuntime public class XGameUiWebAuthenticationResultData Inheritance object XGameUiWebAuthenticationResultData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields responseCompletionUri public string responseCompletionUri Field Value string responseCompletionUriSize public ulong responseCompletionUriSize Field Value ulong responseStatus public int responseStatus Field Value int"
  },
  "api/XGamingRuntime.XHighContrastMode.html": {
    "href": "api/XGamingRuntime.XHighContrastMode.html",
    "title": "Enum XHighContrastMode | |",
    "keywords": "Enum XHighContrastMode Namespace XGamingRuntime public enum XHighContrastMode : uint Fields Dark = 1 Light = 2 Off = 0 Other = 3"
  },
  "api/XGamingRuntime.XPackageChunkAvailability.html": {
    "href": "api/XGamingRuntime.XPackageChunkAvailability.html",
    "title": "Enum XPackageChunkAvailability | |",
    "keywords": "Enum XPackageChunkAvailability Namespace XGamingRuntime public enum XPackageChunkAvailability : uint Fields Installable = 2 Pending = 1 Ready = 0 Unavailable = 3"
  },
  "api/XGamingRuntime.XPackageChunkSelectorType.html": {
    "href": "api/XGamingRuntime.XPackageChunkSelectorType.html",
    "title": "Enum XPackageChunkSelectorType | |",
    "keywords": "Enum XPackageChunkSelectorType Namespace XGamingRuntime public enum XPackageChunkSelectorType : uint Fields Chunk = 2 Feature = 3 Language = 0 Tag = 1"
  },
  "api/XGamingRuntime.XPackageDetails.html": {
    "href": "api/XGamingRuntime.XPackageDetails.html",
    "title": "Class XPackageDetails | |",
    "keywords": "Class XPackageDetails Namespace XGamingRuntime public class XPackageDetails Inheritance object XPackageDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public uint Count { get; } Property Value uint Description public string Description { get; } Property Value string DisplayName public string DisplayName { get; } Property Value string Index public uint Index { get; } Property Value uint Installing public bool Installing { get; } Property Value bool Kind public XPackageKind Kind { get; } Property Value XPackageKind PackageIdentifier public string PackageIdentifier { get; } Property Value string Publisher public string Publisher { get; } Property Value string StoreId public string StoreId { get; } Property Value string Version public XVersion Version { get; } Property Value XVersion"
  },
  "api/XGamingRuntime.XPackageEnumerationScope.html": {
    "href": "api/XGamingRuntime.XPackageEnumerationScope.html",
    "title": "Enum XPackageEnumerationScope | |",
    "keywords": "Enum XPackageEnumerationScope Namespace XGamingRuntime public enum XPackageEnumerationScope : uint Fields ThisAndRelated = 1 ThisOnly = 0"
  },
  "api/XGamingRuntime.XPackageFeature.html": {
    "href": "api/XGamingRuntime.XPackageFeature.html",
    "title": "Class XPackageFeature | |",
    "keywords": "Class XPackageFeature Namespace XGamingRuntime public class XPackageFeature Inheritance object XPackageFeature Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DisplayName public string DisplayName { get; } Property Value string Hidden public bool Hidden { get; } Property Value bool Id public string Id { get; } Property Value string Tags public string Tags { get; } Property Value string"
  },
  "api/XGamingRuntime.XPackageInstallationMonitorHandle.html": {
    "href": "api/XGamingRuntime.XPackageInstallationMonitorHandle.html",
    "title": "Class XPackageInstallationMonitorHandle | |",
    "keywords": "Class XPackageInstallationMonitorHandle Namespace XGamingRuntime public class XPackageInstallationMonitorHandle : EquatableHandle Inheritance object EquatableHandle XPackageInstallationMonitorHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XPackageInstallationProgress.html": {
    "href": "api/XGamingRuntime.XPackageInstallationProgress.html",
    "title": "Class XPackageInstallationProgress | |",
    "keywords": "Class XPackageInstallationProgress Namespace XGamingRuntime public class XPackageInstallationProgress Inheritance object XPackageInstallationProgress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Completed public bool Completed { get; } Property Value bool InstalledBytes public ulong InstalledBytes { get; } Property Value ulong LaunchBytes public ulong LaunchBytes { get; } Property Value ulong Launchable public bool Launchable { get; } Property Value bool TotalBytes public ulong TotalBytes { get; } Property Value ulong"
  },
  "api/XGamingRuntime.XPackageInstallationProgressCallback.html": {
    "href": "api/XGamingRuntime.XPackageInstallationProgressCallback.html",
    "title": "Delegate XPackageInstallationProgressCallback | |",
    "keywords": "Delegate XPackageInstallationProgressCallback Namespace XGamingRuntime public delegate void XPackageInstallationProgressCallback(XPackageInstallationMonitorHandle installationMonitor) Parameters installationMonitor XPackageInstallationMonitorHandle"
  },
  "api/XGamingRuntime.XPackageInstalledCallback.html": {
    "href": "api/XGamingRuntime.XPackageInstalledCallback.html",
    "title": "Delegate XPackageInstalledCallback | |",
    "keywords": "Delegate XPackageInstalledCallback Namespace XGamingRuntime public delegate void XPackageInstalledCallback(XPackageDetails details) Parameters details XPackageDetails"
  },
  "api/XGamingRuntime.XPackageKind.html": {
    "href": "api/XGamingRuntime.XPackageKind.html",
    "title": "Enum XPackageKind | |",
    "keywords": "Enum XPackageKind Namespace XGamingRuntime public enum XPackageKind : uint Fields Content = 1 Game = 0"
  },
  "api/XGamingRuntime.XPackageMountHandle.html": {
    "href": "api/XGamingRuntime.XPackageMountHandle.html",
    "title": "Class XPackageMountHandle | |",
    "keywords": "Class XPackageMountHandle Namespace XGamingRuntime public class XPackageMountHandle Inheritance object XPackageMountHandle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XPackageWriteStats.html": {
    "href": "api/XGamingRuntime.XPackageWriteStats.html",
    "title": "Class XPackageWriteStats | |",
    "keywords": "Class XPackageWriteStats Namespace XGamingRuntime public class XPackageWriteStats Inheritance object XPackageWriteStats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Budget public ulong Budget { get; } Property Value ulong BytesWritten public ulong BytesWritten { get; } Property Value ulong Elapsed public ulong Elapsed { get; } Property Value ulong Interval public ulong Interval { get; } Property Value ulong"
  },
  "api/XGamingRuntime.XRegistrationToken.html": {
    "href": "api/XGamingRuntime.XRegistrationToken.html",
    "title": "Class XRegistrationToken | |",
    "keywords": "Class XRegistrationToken Namespace XGamingRuntime public class XRegistrationToken Inheritance object XRegistrationToken Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XSpeechToTextPositionHint.html": {
    "href": "api/XGamingRuntime.XSpeechToTextPositionHint.html",
    "title": "Enum XSpeechToTextPositionHint | |",
    "keywords": "Enum XSpeechToTextPositionHint Namespace XGamingRuntime public enum XSpeechToTextPositionHint : uint Fields BottomCenter = 0 BottomLeft = 1 BottomRight = 2 MiddleLeft = 4 MiddleRight = 3 TopCenter = 5 TopLeft = 6 TopRight = 7"
  },
  "api/XGamingRuntime.XSpeechToTextType.html": {
    "href": "api/XGamingRuntime.XSpeechToTextType.html",
    "title": "Enum XSpeechToTextType | |",
    "keywords": "Enum XSpeechToTextType Namespace XGamingRuntime public enum XSpeechToTextType : uint Fields Text = 1 Voice = 0"
  },
  "api/XGamingRuntime.XStoreAcquireLicenseForDurablesAsync.html": {
    "href": "api/XGamingRuntime.XStoreAcquireLicenseForDurablesAsync.html",
    "title": "Delegate XStoreAcquireLicenseForDurablesAsync | |",
    "keywords": "Delegate XStoreAcquireLicenseForDurablesAsync Namespace XGamingRuntime public delegate void XStoreAcquireLicenseForDurablesAsync(int hresult, XStoreLicense license) Parameters hresult int license XStoreLicense"
  },
  "api/XGamingRuntime.XStoreAcquireLicenseForPackageCompleted.html": {
    "href": "api/XGamingRuntime.XStoreAcquireLicenseForPackageCompleted.html",
    "title": "Delegate XStoreAcquireLicenseForPackageCompleted | |",
    "keywords": "Delegate XStoreAcquireLicenseForPackageCompleted Namespace XGamingRuntime public delegate void XStoreAcquireLicenseForPackageCompleted(int hresult, XStoreLicense license) Parameters hresult int license XStoreLicense"
  },
  "api/XGamingRuntime.XStoreAddonLicense.html": {
    "href": "api/XGamingRuntime.XStoreAddonLicense.html",
    "title": "Class XStoreAddonLicense | |",
    "keywords": "Class XStoreAddonLicense Namespace XGamingRuntime public class XStoreAddonLicense Inheritance object XStoreAddonLicense Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ExpirationDate public DateTime ExpirationDate { get; } Property Value DateTime InAppOfferToken public string InAppOfferToken { get; } Property Value string IsActive public bool IsActive { get; } Property Value bool SkuStoreId public string SkuStoreId { get; } Property Value string"
  },
  "api/XGamingRuntime.XStoreAvailability.html": {
    "href": "api/XGamingRuntime.XStoreAvailability.html",
    "title": "Class XStoreAvailability | |",
    "keywords": "Class XStoreAvailability Namespace XGamingRuntime public class XStoreAvailability Inheritance object XStoreAvailability Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailabilityId public string AvailabilityId { get; } Property Value string EndDate public DateTime EndDate { get; } Property Value DateTime Price public XStorePrice Price { get; } Property Value XStorePrice"
  },
  "api/XGamingRuntime.XStoreCanAcquireLicenseForPackageCompleted.html": {
    "href": "api/XGamingRuntime.XStoreCanAcquireLicenseForPackageCompleted.html",
    "title": "Delegate XStoreCanAcquireLicenseForPackageCompleted | |",
    "keywords": "Delegate XStoreCanAcquireLicenseForPackageCompleted Namespace XGamingRuntime public delegate void XStoreCanAcquireLicenseForPackageCompleted(int hresult, XStoreCanAcquireLicenseResult result) Parameters hresult int result XStoreCanAcquireLicenseResult"
  },
  "api/XGamingRuntime.XStoreCanAcquireLicenseForStoreIdCompleted.html": {
    "href": "api/XGamingRuntime.XStoreCanAcquireLicenseForStoreIdCompleted.html",
    "title": "Delegate XStoreCanAcquireLicenseForStoreIdCompleted | |",
    "keywords": "Delegate XStoreCanAcquireLicenseForStoreIdCompleted Namespace XGamingRuntime public delegate void XStoreCanAcquireLicenseForStoreIdCompleted(int hresult, XStoreCanAcquireLicenseResult result) Parameters hresult int result XStoreCanAcquireLicenseResult"
  },
  "api/XGamingRuntime.XStoreCanAcquireLicenseResult.html": {
    "href": "api/XGamingRuntime.XStoreCanAcquireLicenseResult.html",
    "title": "Class XStoreCanAcquireLicenseResult | |",
    "keywords": "Class XStoreCanAcquireLicenseResult Namespace XGamingRuntime public class XStoreCanAcquireLicenseResult Inheritance object XStoreCanAcquireLicenseResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LicensableSku public string LicensableSku { get; } Property Value string Status public XStoreCanLicenseStatus Status { get; } Property Value XStoreCanLicenseStatus"
  },
  "api/XGamingRuntime.XStoreCanLicenseStatus.html": {
    "href": "api/XGamingRuntime.XStoreCanLicenseStatus.html",
    "title": "Enum XStoreCanLicenseStatus | |",
    "keywords": "Enum XStoreCanLicenseStatus Namespace XGamingRuntime public enum XStoreCanLicenseStatus : uint Fields Licensable = 1 NotLicensableToUser = 0"
  },
  "api/XGamingRuntime.XStoreCollectionData.html": {
    "href": "api/XGamingRuntime.XStoreCollectionData.html",
    "title": "Class XStoreCollectionData | |",
    "keywords": "Class XStoreCollectionData Namespace XGamingRuntime public class XStoreCollectionData Inheritance object XStoreCollectionData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AcquiredDate public DateTime AcquiredDate { get; } Property Value DateTime CampaignId public string CampaignId { get; } Property Value string DeveloperOfferId public string DeveloperOfferId { get; } Property Value string EndDate public DateTime EndDate { get; } Property Value DateTime IsTrial public bool IsTrial { get; } Property Value bool Quantity public uint Quantity { get; } Property Value uint StartDate public DateTime StartDate { get; } Property Value DateTime TrialTimeRemainingInSeconds public uint TrialTimeRemainingInSeconds { get; } Property Value uint"
  },
  "api/XGamingRuntime.XStoreConsumableResult.html": {
    "href": "api/XGamingRuntime.XStoreConsumableResult.html",
    "title": "Class XStoreConsumableResult | |",
    "keywords": "Class XStoreConsumableResult Namespace XGamingRuntime public class XStoreConsumableResult Inheritance object XStoreConsumableResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Quantity public uint Quantity { get; } Property Value uint"
  },
  "api/XGamingRuntime.XStoreContext.html": {
    "href": "api/XGamingRuntime.XStoreContext.html",
    "title": "Class XStoreContext | |",
    "keywords": "Class XStoreContext Namespace XGamingRuntime public class XStoreContext : EquatableHandle Inheritance object EquatableHandle XStoreContext Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XStoreDurationUnit.html": {
    "href": "api/XGamingRuntime.XStoreDurationUnit.html",
    "title": "Enum XStoreDurationUnit | |",
    "keywords": "Enum XStoreDurationUnit Namespace XGamingRuntime public enum XStoreDurationUnit : uint Fields Day = 2 Hour = 1 Minute = 0 Month = 4 Week = 3 Year = 5"
  },
  "api/XGamingRuntime.XStoreGameLicense.html": {
    "href": "api/XGamingRuntime.XStoreGameLicense.html",
    "title": "Class XStoreGameLicense | |",
    "keywords": "Class XStoreGameLicense Namespace XGamingRuntime public class XStoreGameLicense Inheritance object XStoreGameLicense Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ExpirationDate public DateTime ExpirationDate { get; } Property Value DateTime IsActive public bool IsActive { get; } Property Value bool IsDiscLicense public bool IsDiscLicense { get; } Property Value bool IsTrial public bool IsTrial { get; } Property Value bool IsTrialOwnedByThisUser public bool IsTrialOwnedByThisUser { get; } Property Value bool SkuStoreId public string SkuStoreId { get; } Property Value string TrialTimeRemainingInSeconds public uint TrialTimeRemainingInSeconds { get; } Property Value uint TrialUniqueId public string TrialUniqueId { get; } Property Value string"
  },
  "api/XGamingRuntime.XStoreGameLicenseChangedCallback.html": {
    "href": "api/XGamingRuntime.XStoreGameLicenseChangedCallback.html",
    "title": "Delegate XStoreGameLicenseChangedCallback | |",
    "keywords": "Delegate XStoreGameLicenseChangedCallback Namespace XGamingRuntime public delegate void XStoreGameLicenseChangedCallback()"
  },
  "api/XGamingRuntime.XStoreImage.html": {
    "href": "api/XGamingRuntime.XStoreImage.html",
    "title": "Class XStoreImage | |",
    "keywords": "Class XStoreImage Namespace XGamingRuntime public class XStoreImage Inheritance object XStoreImage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Caption public string Caption { get; } Property Value string Height public uint Height { get; } Property Value uint ImagePurposeTag public string ImagePurposeTag { get; } Property Value string Uri public string Uri { get; } Property Value string Width public uint Width { get; } Property Value uint"
  },
  "api/XGamingRuntime.XStoreLicense.html": {
    "href": "api/XGamingRuntime.XStoreLicense.html",
    "title": "Class XStoreLicense | |",
    "keywords": "Class XStoreLicense Namespace XGamingRuntime public class XStoreLicense : EquatableHandle Inheritance object EquatableHandle XStoreLicense Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XStorePackageLicenseLostCallback.html": {
    "href": "api/XGamingRuntime.XStorePackageLicenseLostCallback.html",
    "title": "Delegate XStorePackageLicenseLostCallback | |",
    "keywords": "Delegate XStorePackageLicenseLostCallback Namespace XGamingRuntime public delegate void XStorePackageLicenseLostCallback()"
  },
  "api/XGamingRuntime.XStorePackageUpdate.html": {
    "href": "api/XGamingRuntime.XStorePackageUpdate.html",
    "title": "Class XStorePackageUpdate | |",
    "keywords": "Class XStorePackageUpdate Namespace XGamingRuntime public class XStorePackageUpdate Inheritance object XStorePackageUpdate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsMandatory public bool IsMandatory { get; } Property Value bool PackageIdentifier public string PackageIdentifier { get; } Property Value string"
  },
  "api/XGamingRuntime.XStorePrice.html": {
    "href": "api/XGamingRuntime.XStorePrice.html",
    "title": "Class XStorePrice | |",
    "keywords": "Class XStorePrice Namespace XGamingRuntime public class XStorePrice Inheritance object XStorePrice Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BasePrice public float BasePrice { get; } Property Value float CurrencyCode public string CurrencyCode { get; } Property Value string FormattedBasePrice public string FormattedBasePrice { get; } Property Value string FormattedPrice public string FormattedPrice { get; } Property Value string FormattedRecurrencePrice public string FormattedRecurrencePrice { get; } Property Value string IsOnSale public bool IsOnSale { get; } Property Value bool Price public float Price { get; } Property Value float RecurrencePrice public float RecurrencePrice { get; } Property Value float SaleEndDate public DateTime SaleEndDate { get; } Property Value DateTime"
  },
  "api/XGamingRuntime.XStoreProduct.html": {
    "href": "api/XGamingRuntime.XStoreProduct.html",
    "title": "Class XStoreProduct | |",
    "keywords": "Class XStoreProduct Namespace XGamingRuntime public class XStoreProduct Inheritance object XStoreProduct Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string Description { get; } Property Value string HasDigitalDownload public bool HasDigitalDownload { get; } Property Value bool Images public XStoreImage[] Images { get; } Property Value XStoreImage[] InAppOfferToken public string InAppOfferToken { get; } Property Value string IsInUserCollection public bool IsInUserCollection { get; } Property Value bool Keywords public string[] Keywords { get; } Property Value string[] Language public string Language { get; } Property Value string LinkUri public string LinkUri { get; } Property Value string Price public XStorePrice Price { get; } Property Value XStorePrice ProductKind public XStoreProductKind ProductKind { get; } Property Value XStoreProductKind Skus public XStoreSku[] Skus { get; } Property Value XStoreSku[] StoreId public string StoreId { get; } Property Value string Title public string Title { get; } Property Value string Videos public XStoreVideo[] Videos { get; } Property Value XStoreVideo[]"
  },
  "api/XGamingRuntime.XStoreProductKind.html": {
    "href": "api/XGamingRuntime.XStoreProductKind.html",
    "title": "Enum XStoreProductKind | |",
    "keywords": "Enum XStoreProductKind Namespace XGamingRuntime [Flags] public enum XStoreProductKind : uint Fields Consumable = 1 Durable = 2 Game = 4 None = 0 Pass = 8 UnmanagedConsumable = 16"
  },
  "api/XGamingRuntime.XStoreQueryAddOnLicensesCompleted.html": {
    "href": "api/XGamingRuntime.XStoreQueryAddOnLicensesCompleted.html",
    "title": "Delegate XStoreQueryAddOnLicensesCompleted | |",
    "keywords": "Delegate XStoreQueryAddOnLicensesCompleted Namespace XGamingRuntime public delegate void XStoreQueryAddOnLicensesCompleted(int hresult, XStoreAddonLicense[] licenses) Parameters hresult int licenses XStoreAddonLicense[]"
  },
  "api/XGamingRuntime.XStoreQueryComplete.html": {
    "href": "api/XGamingRuntime.XStoreQueryComplete.html",
    "title": "Delegate XStoreQueryComplete | |",
    "keywords": "Delegate XStoreQueryComplete Namespace XGamingRuntime public delegate void XStoreQueryComplete(int hresult, XStoreQueryResult result) Parameters hresult int result XStoreQueryResult"
  },
  "api/XGamingRuntime.XStoreQueryGameLicenseCompleted.html": {
    "href": "api/XGamingRuntime.XStoreQueryGameLicenseCompleted.html",
    "title": "Delegate XStoreQueryGameLicenseCompleted | |",
    "keywords": "Delegate XStoreQueryGameLicenseCompleted Namespace XGamingRuntime public delegate void XStoreQueryGameLicenseCompleted(int hresult, XStoreGameLicense license) Parameters hresult int license XStoreGameLicense"
  },
  "api/XGamingRuntime.XStoreQueryLicenseTokenCompleted.html": {
    "href": "api/XGamingRuntime.XStoreQueryLicenseTokenCompleted.html",
    "title": "Delegate XStoreQueryLicenseTokenCompleted | |",
    "keywords": "Delegate XStoreQueryLicenseTokenCompleted Namespace XGamingRuntime public delegate void XStoreQueryLicenseTokenCompleted(int hresult, string token) Parameters hresult int token string"
  },
  "api/XGamingRuntime.XStoreQueryResult.html": {
    "href": "api/XGamingRuntime.XStoreQueryResult.html",
    "title": "Class XStoreQueryResult | |",
    "keywords": "Class XStoreQueryResult Namespace XGamingRuntime public class XStoreQueryResult Inheritance object XStoreQueryResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HasMorePages public bool HasMorePages { get; } Property Value bool PageItems public XStoreProduct[] PageItems { get; } Property Value XStoreProduct[]"
  },
  "api/XGamingRuntime.XStoreRateAndReviewResult.html": {
    "href": "api/XGamingRuntime.XStoreRateAndReviewResult.html",
    "title": "Class XStoreRateAndReviewResult | |",
    "keywords": "Class XStoreRateAndReviewResult Namespace XGamingRuntime public class XStoreRateAndReviewResult Inheritance object XStoreRateAndReviewResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties WasUpdated public bool WasUpdated { get; } Property Value bool"
  },
  "api/XGamingRuntime.XStoreSku.html": {
    "href": "api/XGamingRuntime.XStoreSku.html",
    "title": "Class XStoreSku | |",
    "keywords": "Class XStoreSku Namespace XGamingRuntime public class XStoreSku Inheritance object XStoreSku Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Availabilities public XStoreAvailability[] Availabilities { get; } Property Value XStoreAvailability[] BundledSkus public string[] BundledSkus { get; } Property Value string[] CollectionData public XStoreCollectionData CollectionData { get; } Property Value XStoreCollectionData Description public string Description { get; } Property Value string Images public XStoreImage[] Images { get; } Property Value XStoreImage[] IsInUserCollection public bool IsInUserCollection { get; } Property Value bool IsSubscription public bool IsSubscription { get; } Property Value bool IsTrial public bool IsTrial { get; } Property Value bool Language public string Language { get; } Property Value string Price public XStorePrice Price { get; } Property Value XStorePrice SkuId public string SkuId { get; } Property Value string SubscriptionInfo public XStoreSubscriptionInfo SubscriptionInfo { get; } Property Value XStoreSubscriptionInfo Title public string Title { get; } Property Value string Videos public XStoreVideo[] Videos { get; } Property Value XStoreVideo[]"
  },
  "api/XGamingRuntime.XStoreSubscriptionInfo.html": {
    "href": "api/XGamingRuntime.XStoreSubscriptionInfo.html",
    "title": "Class XStoreSubscriptionInfo | |",
    "keywords": "Class XStoreSubscriptionInfo Namespace XGamingRuntime public class XStoreSubscriptionInfo Inheritance object XStoreSubscriptionInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BillingPeriod public uint BillingPeriod { get; } Property Value uint BillingPeriodUnit public XStoreDurationUnit BillingPeriodUnit { get; } Property Value XStoreDurationUnit HasTrialPeriod public bool HasTrialPeriod { get; } Property Value bool TrialPeriod public uint TrialPeriod { get; } Property Value uint TrialPeriodUnit public XStoreDurationUnit TrialPeriodUnit { get; } Property Value XStoreDurationUnit"
  },
  "api/XGamingRuntime.XStoreVideo.html": {
    "href": "api/XGamingRuntime.XStoreVideo.html",
    "title": "Class XStoreVideo | |",
    "keywords": "Class XStoreVideo Namespace XGamingRuntime public class XStoreVideo Inheritance object XStoreVideo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Caption public string Caption { get; } Property Value string Height public uint Height { get; } Property Value uint PreviewImage public XStoreImage PreviewImage { get; } Property Value XStoreImage Uri public string Uri { get; } Property Value string VideoPurposeTag public string VideoPurposeTag { get; } Property Value string Width public uint Width { get; } Property Value uint"
  },
  "api/XGamingRuntime.XUserAddCompleted.html": {
    "href": "api/XGamingRuntime.XUserAddCompleted.html",
    "title": "Delegate XUserAddCompleted | |",
    "keywords": "Delegate XUserAddCompleted Namespace XGamingRuntime public delegate void XUserAddCompleted(int hresult, XUserHandle userHandle) Parameters hresult int userHandle XUserHandle"
  },
  "api/XGamingRuntime.XUserAddOptions.html": {
    "href": "api/XGamingRuntime.XUserAddOptions.html",
    "title": "Enum XUserAddOptions | |",
    "keywords": "Enum XUserAddOptions Namespace XGamingRuntime [Flags] public enum XUserAddOptions : uint Fields AddDefaultUserAllowingUI = 4 AddDefaultUserSilently = 1 AllowGuests = 2 None = 0"
  },
  "api/XGamingRuntime.XUserAgeGroup.html": {
    "href": "api/XGamingRuntime.XUserAgeGroup.html",
    "title": "Enum XUserAgeGroup | |",
    "keywords": "Enum XUserAgeGroup Namespace XGamingRuntime public enum XUserAgeGroup : uint Fields Adult = 3 Child = 1 Teen = 2 Unknown = 0"
  },
  "api/XGamingRuntime.XUserChangeEvent.html": {
    "href": "api/XGamingRuntime.XUserChangeEvent.html",
    "title": "Enum XUserChangeEvent | |",
    "keywords": "Enum XUserChangeEvent Namespace XGamingRuntime public enum XUserChangeEvent : uint Fields GamerPicture = 4 Gamertag = 3 Privileges = 5 SignedInAgain = 0 SignedOut = 2 SigningOut = 1"
  },
  "api/XGamingRuntime.XUserChangeEventCallback.html": {
    "href": "api/XGamingRuntime.XUserChangeEventCallback.html",
    "title": "Delegate XUserChangeEventCallback | |",
    "keywords": "Delegate XUserChangeEventCallback Namespace XGamingRuntime public delegate void XUserChangeEventCallback(XUserLocalId userLocalId, XUserChangeEvent eventType) Parameters userLocalId XUserLocalId eventType XUserChangeEvent"
  },
  "api/XGamingRuntime.XUserGamerPictureSize.html": {
    "href": "api/XGamingRuntime.XUserGamerPictureSize.html",
    "title": "Enum XUserGamerPictureSize | |",
    "keywords": "Enum XUserGamerPictureSize Namespace XGamingRuntime public enum XUserGamerPictureSize : uint Fields ExtraLarge = 3 Large = 2 Medium = 1 Small = 0"
  },
  "api/XGamingRuntime.XUserGamertagComponent.html": {
    "href": "api/XGamingRuntime.XUserGamertagComponent.html",
    "title": "Enum XUserGamertagComponent | |",
    "keywords": "Enum XUserGamertagComponent Namespace XGamingRuntime public enum XUserGamertagComponent : uint Fields Classic = 0 Modern = 1 ModernSuffix = 2 UniqueModern = 3"
  },
  "api/XGamingRuntime.XUserGetGamerPictureCompleted.html": {
    "href": "api/XGamingRuntime.XUserGetGamerPictureCompleted.html",
    "title": "Delegate XUserGetGamerPictureCompleted | |",
    "keywords": "Delegate XUserGetGamerPictureCompleted Namespace XGamingRuntime public delegate void XUserGetGamerPictureCompleted(int hresult, byte[] buffer) Parameters hresult int buffer byte[]"
  },
  "api/XGamingRuntime.XUserGetTokenAndSignatureOptions.html": {
    "href": "api/XGamingRuntime.XUserGetTokenAndSignatureOptions.html",
    "title": "Enum XUserGetTokenAndSignatureOptions | |",
    "keywords": "Enum XUserGetTokenAndSignatureOptions Namespace XGamingRuntime [Flags] public enum XUserGetTokenAndSignatureOptions : uint Fields AllUsers = 2 ForceRefresh = 1 None = 0"
  },
  "api/XGamingRuntime.XUserGetTokenAndSignatureUtf16Data.html": {
    "href": "api/XGamingRuntime.XUserGetTokenAndSignatureUtf16Data.html",
    "title": "Class XUserGetTokenAndSignatureUtf16Data | |",
    "keywords": "Class XUserGetTokenAndSignatureUtf16Data Namespace XGamingRuntime public class XUserGetTokenAndSignatureUtf16Data Inheritance object XUserGetTokenAndSignatureUtf16Data Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Signature public string Signature { get; } Property Value string Token public string Token { get; } Property Value string"
  },
  "api/XGamingRuntime.XUserGetTokenAndSignatureUtf16HttpHeader.html": {
    "href": "api/XGamingRuntime.XUserGetTokenAndSignatureUtf16HttpHeader.html",
    "title": "Class XUserGetTokenAndSignatureUtf16HttpHeader | |",
    "keywords": "Class XUserGetTokenAndSignatureUtf16HttpHeader Namespace XGamingRuntime public class XUserGetTokenAndSignatureUtf16HttpHeader Inheritance object XUserGetTokenAndSignatureUtf16HttpHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XUserGetTokenAndSignatureUtf16HttpHeader(string, string) public XUserGetTokenAndSignatureUtf16HttpHeader(string name, string value) Parameters name string value string Properties Name public string Name { get; } Property Value string Value public string Value { get; } Property Value string"
  },
  "api/XGamingRuntime.XUserGetTokenAndSignatureUtf16Result.html": {
    "href": "api/XGamingRuntime.XUserGetTokenAndSignatureUtf16Result.html",
    "title": "Delegate XUserGetTokenAndSignatureUtf16Result | |",
    "keywords": "Delegate XUserGetTokenAndSignatureUtf16Result Namespace XGamingRuntime public delegate void XUserGetTokenAndSignatureUtf16Result(int hresult, XUserGetTokenAndSignatureUtf16Data tokenAndSignature) Parameters hresult int tokenAndSignature XUserGetTokenAndSignatureUtf16Data"
  },
  "api/XGamingRuntime.XUserHandle.html": {
    "href": "api/XGamingRuntime.XUserHandle.html",
    "title": "Class XUserHandle | |",
    "keywords": "Class XUserHandle Namespace XGamingRuntime public class XUserHandle : EquatableHandle Inheritance object EquatableHandle XUserHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XUserLocalId.html": {
    "href": "api/XGamingRuntime.XUserLocalId.html",
    "title": "Struct XUserLocalId | |",
    "keywords": "Struct XUserLocalId Namespace XGamingRuntime public struct XUserLocalId Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors XUserLocalId(ulong) public XUserLocalId(ulong value) Parameters value ulong Fields value public readonly ulong value Field Value ulong"
  },
  "api/XGamingRuntime.XUserPrivilege.html": {
    "href": "api/XGamingRuntime.XUserPrivilege.html",
    "title": "Enum XUserPrivilege | |",
    "keywords": "Enum XUserPrivilege Namespace XGamingRuntime public enum XUserPrivilege : uint Fields AddFriends = 255 Broadcast = 190 CloudJoinSession = 208 CloudManageSession = 207 CloudSavedGames = 209 Clubs = 188 Communications = 252 CrossPlay = 185 GameDvr = 198 ManageProfilePrivacy = 196 Multiplayer = 254 MultiplayerParties = 203 Sessions = 189 SocialNetworkSharing = 220 UserGeneratedContent = 247"
  },
  "api/XGamingRuntime.XUserPrivilegeDenyReason.html": {
    "href": "api/XGamingRuntime.XUserPrivilegeDenyReason.html",
    "title": "Enum XUserPrivilegeDenyReason | |",
    "keywords": "Enum XUserPrivilegeDenyReason Namespace XGamingRuntime public enum XUserPrivilegeDenyReason : uint Fields Banned = 3 None = 0 PurchaseRequired = 1 Restricted = 2 Unknown = 4294967295"
  },
  "api/XGamingRuntime.XUserPrivilegeOptions.html": {
    "href": "api/XGamingRuntime.XUserPrivilegeOptions.html",
    "title": "Enum XUserPrivilegeOptions | |",
    "keywords": "Enum XUserPrivilegeOptions Namespace XGamingRuntime [Flags] public enum XUserPrivilegeOptions : uint Fields AllUsers = 1 None = 0"
  },
  "api/XGamingRuntime.XUserResolveIssueWithUiUtf16Result.html": {
    "href": "api/XGamingRuntime.XUserResolveIssueWithUiUtf16Result.html",
    "title": "Delegate XUserResolveIssueWithUiUtf16Result | |",
    "keywords": "Delegate XUserResolveIssueWithUiUtf16Result Namespace XGamingRuntime public delegate void XUserResolveIssueWithUiUtf16Result(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XUserResolvePrivilegeWithUiCompleted.html": {
    "href": "api/XGamingRuntime.XUserResolvePrivilegeWithUiCompleted.html",
    "title": "Delegate XUserResolvePrivilegeWithUiCompleted | |",
    "keywords": "Delegate XUserResolvePrivilegeWithUiCompleted Namespace XGamingRuntime public delegate void XUserResolvePrivilegeWithUiCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XUserSignOutDeferralHandle.html": {
    "href": "api/XGamingRuntime.XUserSignOutDeferralHandle.html",
    "title": "Class XUserSignOutDeferralHandle | |",
    "keywords": "Class XUserSignOutDeferralHandle Namespace XGamingRuntime public class XUserSignOutDeferralHandle : EquatableHandle Inheritance object EquatableHandle XUserSignOutDeferralHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XUserState.html": {
    "href": "api/XGamingRuntime.XUserState.html",
    "title": "Enum XUserState | |",
    "keywords": "Enum XUserState Namespace XGamingRuntime public enum XUserState : uint Fields SignedIn = 0 SignedOut = 2 SigningOut = 1"
  },
  "api/XGamingRuntime.XVersion.html": {
    "href": "api/XGamingRuntime.XVersion.html",
    "title": "Class XVersion | |",
    "keywords": "Class XVersion Namespace XGamingRuntime public class XVersion Inheritance object XVersion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Build public ushort Build { get; } Property Value ushort Major public ushort Major { get; } Property Value ushort Minor public ushort Minor { get; } Property Value ushort Revision public ushort Revision { get; } Property Value ushort"
  },
  "api/XGamingRuntime.XblAchievement.html": {
    "href": "api/XGamingRuntime.XblAchievement.html",
    "title": "Class XblAchievement | |",
    "keywords": "Class XblAchievement Namespace XGamingRuntime public class XblAchievement Inheritance object XblAchievement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Available public XblAchievementTimeWindow Available { get; } Property Value XblAchievementTimeWindow DeepLink public string DeepLink { get; } Property Value string EstimatedUnlockTime public ulong EstimatedUnlockTime { get; } Property Value ulong Id public string Id { get; } Property Value string IsRevoked public bool IsRevoked { get; } Property Value bool IsSecret public bool IsSecret { get; } Property Value bool LockedDescription public string LockedDescription { get; } Property Value string MediaAssets public XblAchievementMediaAsset[] MediaAssets { get; } Property Value XblAchievementMediaAsset[] Name public string Name { get; } Property Value string ParticipationType public XblAchievementParticipationType ParticipationType { get; } Property Value XblAchievementParticipationType PlatformsAvailableOn public string[] PlatformsAvailableOn { get; } Property Value string[] ProductId public string ProductId { get; } Property Value string ProgressState public XblAchievementProgressState ProgressState { get; } Property Value XblAchievementProgressState Progression public XblAchievementProgression Progression { get; } Property Value XblAchievementProgression Rewards public XblAchievementReward[] Rewards { get; } Property Value XblAchievementReward[] ServiceConfigurationId public string ServiceConfigurationId { get; } Property Value string TitleAssociations public XblAchievementTitleAssociation[] TitleAssociations { get; } Property Value XblAchievementTitleAssociation[] Type public XblAchievementType Type { get; } Property Value XblAchievementType UnlockedDescription public string UnlockedDescription { get; } Property Value string"
  },
  "api/XGamingRuntime.XblAchievementMediaAsset.html": {
    "href": "api/XGamingRuntime.XblAchievementMediaAsset.html",
    "title": "Class XblAchievementMediaAsset | |",
    "keywords": "Class XblAchievementMediaAsset Namespace XGamingRuntime public class XblAchievementMediaAsset Inheritance object XblAchievementMediaAsset Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MediaAssetType public XblAchievementMediaAssetType MediaAssetType { get; } Property Value XblAchievementMediaAssetType Name public string Name { get; } Property Value string Url public string Url { get; } Property Value string"
  },
  "api/XGamingRuntime.XblAchievementMediaAssetType.html": {
    "href": "api/XGamingRuntime.XblAchievementMediaAssetType.html",
    "title": "Enum XblAchievementMediaAssetType | |",
    "keywords": "Enum XblAchievementMediaAssetType Namespace XGamingRuntime public enum XblAchievementMediaAssetType : uint Fields Art = 2 An art media asset. Icon = 1 An icon media asset. Unknown = 0 The media asset type is unknown."
  },
  "api/XGamingRuntime.XblAchievementOrderBy.html": {
    "href": "api/XGamingRuntime.XblAchievementOrderBy.html",
    "title": "Enum XblAchievementOrderBy | |",
    "keywords": "Enum XblAchievementOrderBy Namespace XGamingRuntime public enum XblAchievementOrderBy : uint Fields DefaultOrder = 0 Default order does not guarantee sort order. TitleId = 1 Sort by title id. UnlockTime = 2 Sort by achievement unlock time."
  },
  "api/XGamingRuntime.XblAchievementParticipationType.html": {
    "href": "api/XGamingRuntime.XblAchievementParticipationType.html",
    "title": "Enum XblAchievementParticipationType | |",
    "keywords": "Enum XblAchievementParticipationType Namespace XGamingRuntime public enum XblAchievementParticipationType : uint Fields Group = 2 An achievement that can be earned as a group participant. Individual = 1 An achievement that can be earned as an individual participant. Unknown = 0 The participation type is unknown."
  },
  "api/XGamingRuntime.XblAchievementProgressState.html": {
    "href": "api/XGamingRuntime.XblAchievementProgressState.html",
    "title": "Enum XblAchievementProgressState | |",
    "keywords": "Enum XblAchievementProgressState Namespace XGamingRuntime public enum XblAchievementProgressState : uint Fields Achieved = 1 Achievement has been earned. InProgress = 3 Achievement progress has started. NotStarted = 2 Achievement progress has not been started. Unknown = 0 Achievement progress is unknown."
  },
  "api/XGamingRuntime.XblAchievementProgression.html": {
    "href": "api/XGamingRuntime.XblAchievementProgression.html",
    "title": "Class XblAchievementProgression | |",
    "keywords": "Class XblAchievementProgression Namespace XGamingRuntime public class XblAchievementProgression Inheritance object XblAchievementProgression Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Requirements public XblAchievementRequirement[] Requirements { get; } Property Value XblAchievementRequirement[] TimeUnlocked public DateTime TimeUnlocked { get; } Property Value DateTime"
  },
  "api/XGamingRuntime.XblAchievementRequirement.html": {
    "href": "api/XGamingRuntime.XblAchievementRequirement.html",
    "title": "Class XblAchievementRequirement | |",
    "keywords": "Class XblAchievementRequirement Namespace XGamingRuntime public class XblAchievementRequirement Inheritance object XblAchievementRequirement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentProgressValue public string CurrentProgressValue { get; } Property Value string Id public string Id { get; } Property Value string TargetProgressValue public string TargetProgressValue { get; } Property Value string"
  },
  "api/XGamingRuntime.XblAchievementReward.html": {
    "href": "api/XGamingRuntime.XblAchievementReward.html",
    "title": "Class XblAchievementReward | |",
    "keywords": "Class XblAchievementReward Namespace XGamingRuntime public class XblAchievementReward Inheritance object XblAchievementReward Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string Description { get; } Property Value string MediaAsset public XblAchievementMediaAsset MediaAsset { get; } Property Value XblAchievementMediaAsset Name public string Name { get; } Property Value string RewardType public XblAchievementRewardType RewardType { get; } Property Value XblAchievementRewardType Value public string Value { get; } Property Value string ValueType public string ValueType { get; } Property Value string"
  },
  "api/XGamingRuntime.XblAchievementRewardType.html": {
    "href": "api/XGamingRuntime.XblAchievementRewardType.html",
    "title": "Enum XblAchievementRewardType | |",
    "keywords": "Enum XblAchievementRewardType Namespace XGamingRuntime public enum XblAchievementRewardType : uint Fields Art = 3 A digital art reward. Gamerscore = 1 A Gamerscore reward. InApp = 2 An in-app reward, defined and delivered by the title. Unknown = 0 The reward type is unknown."
  },
  "api/XGamingRuntime.XblAchievementTimeWindow.html": {
    "href": "api/XGamingRuntime.XblAchievementTimeWindow.html",
    "title": "Class XblAchievementTimeWindow | |",
    "keywords": "Class XblAchievementTimeWindow Namespace XGamingRuntime public class XblAchievementTimeWindow Inheritance object XblAchievementTimeWindow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EndDate public DateTime EndDate { get; } Property Value DateTime StartDate public DateTime StartDate { get; } Property Value DateTime"
  },
  "api/XGamingRuntime.XblAchievementTitleAssociation.html": {
    "href": "api/XGamingRuntime.XblAchievementTitleAssociation.html",
    "title": "Class XblAchievementTitleAssociation | |",
    "keywords": "Class XblAchievementTitleAssociation Namespace XGamingRuntime public class XblAchievementTitleAssociation Inheritance object XblAchievementTitleAssociation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string Name { get; } Property Value string TitleId public uint TitleId { get; } Property Value uint"
  },
  "api/XGamingRuntime.XblAchievementType.html": {
    "href": "api/XGamingRuntime.XblAchievementType.html",
    "title": "Enum XblAchievementType | |",
    "keywords": "Enum XblAchievementType Namespace XGamingRuntime public enum XblAchievementType : uint Fields All = 1 Gets all achievements regardless of type. Challenge = 3 A challenge achievement that may only be unlocked within a certain time period. Challenge achievements can't give Gamerscore as a reward. Persistent = 2 A persistent achievement that may be unlocked at any time. Persistent achievements can give Gamerscore as a reward. Unknown = 0 The achievement type is unknown."
  },
  "api/XGamingRuntime.XblAchievementsResultHandle.html": {
    "href": "api/XGamingRuntime.XblAchievementsResultHandle.html",
    "title": "Class XblAchievementsResultHandle | |",
    "keywords": "Class XblAchievementsResultHandle Namespace XGamingRuntime public class XblAchievementsResultHandle : EquatableHandle Inheritance object EquatableHandle XblAchievementsResultHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XblActivityCompletionCallback.html": {
    "href": "api/XGamingRuntime.XblActivityCompletionCallback.html",
    "title": "Delegate XblActivityCompletionCallback | |",
    "keywords": "Delegate XblActivityCompletionCallback Namespace XGamingRuntime public delegate void XblActivityCompletionCallback(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XblAnonymousUserType.html": {
    "href": "api/XGamingRuntime.XblAnonymousUserType.html",
    "title": "Enum XblAnonymousUserType | |",
    "keywords": "Enum XblAnonymousUserType Namespace XGamingRuntime public enum XblAnonymousUserType : uint Fields CrossNetworkFriend = 2 CrossNetworkUser = 1 Unknown = 0"
  },
  "api/XGamingRuntime.XblConnectionIdChangedCallback.html": {
    "href": "api/XGamingRuntime.XblConnectionIdChangedCallback.html",
    "title": "Delegate XblConnectionIdChangedCallback | |",
    "keywords": "Delegate XblConnectionIdChangedCallback Namespace XGamingRuntime public delegate void XblConnectionIdChangedCallback()"
  },
  "api/XGamingRuntime.XblConnectionResyncCallback.html": {
    "href": "api/XGamingRuntime.XblConnectionResyncCallback.html",
    "title": "Delegate XblConnectionResyncCallback | |",
    "keywords": "Delegate XblConnectionResyncCallback Namespace XGamingRuntime public delegate void XblConnectionResyncCallback()"
  },
  "api/XGamingRuntime.XblConnectionStateChangeCallback.html": {
    "href": "api/XGamingRuntime.XblConnectionStateChangeCallback.html",
    "title": "Delegate XblConnectionStateChangeCallback | |",
    "keywords": "Delegate XblConnectionStateChangeCallback Namespace XGamingRuntime public delegate void XblConnectionStateChangeCallback(XblRealTimeActivityConnectionState newConnectionState) Parameters newConnectionState XblRealTimeActivityConnectionState"
  },
  "api/XGamingRuntime.XblContextHandle.html": {
    "href": "api/XGamingRuntime.XblContextHandle.html",
    "title": "Class XblContextHandle | |",
    "keywords": "Class XblContextHandle Namespace XGamingRuntime public class XblContextHandle : EquatableHandle Inheritance object EquatableHandle XblContextHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblContextHandle(XblContextHandle) public XblContextHandle(XblContextHandle interopHandle) Parameters interopHandle XblContextHandle Properties InteropHandle public XblContextHandle InteropHandle { get; set; } Property Value XblContextHandle"
  },
  "api/XGamingRuntime.XblDeviceToken.html": {
    "href": "api/XGamingRuntime.XblDeviceToken.html",
    "title": "Class XblDeviceToken | |",
    "keywords": "Class XblDeviceToken Namespace XGamingRuntime public class XblDeviceToken Inheritance object XblDeviceToken Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Value public string Value { get; } Property Value string"
  },
  "api/XGamingRuntime.XblErrorCondition.html": {
    "href": "api/XGamingRuntime.XblErrorCondition.html",
    "title": "Enum XblErrorCondition | |",
    "keywords": "Enum XblErrorCondition Namespace XGamingRuntime public enum XblErrorCondition : uint Fields Auth = 3 An error condition related to attempting to authenticate. GenericError = 1 A generic error condition. GenericOutOfRange = 2 An error condition related to an object being out of range. Http304NotModified = 6 The requested resource was not modified. Http404NotFound = 7 The requested resource was not found. Http412PreconditionFailed = 8 The precondition given in one or more of the request-header fields evaluated to false when it was tested on the server. Http429TooManyRequests = 9 Client is sending too many requests HttpGeneric = 5 An error condition related to an HTTP method call. HttpServiceTimeout = 10 The service timed out while attempting to process the request. Network = 4 An error condition related to network connectivity. NoError = 0 No error. Rta = 11 An error related to real time activity."
  },
  "api/XGamingRuntime.XblGetSessionCallback.html": {
    "href": "api/XGamingRuntime.XblGetSessionCallback.html",
    "title": "Delegate XblGetSessionCallback | |",
    "keywords": "Delegate XblGetSessionCallback Namespace XGamingRuntime public delegate void XblGetSessionCallback(int hresult, XblMultiplayerSessionHandle sessionHandle) Parameters hresult int sessionHandle XblMultiplayerSessionHandle"
  },
  "api/XGamingRuntime.XblGuid.html": {
    "href": "api/XGamingRuntime.XblGuid.html",
    "title": "Class XblGuid | |",
    "keywords": "Class XblGuid Namespace XGamingRuntime public class XblGuid Inheritance object XblGuid Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Value public string Value { get; } Property Value string"
  },
  "api/XGamingRuntime.XblHopperStatisticsResponse.html": {
    "href": "api/XGamingRuntime.XblHopperStatisticsResponse.html",
    "title": "Struct XblHopperStatisticsResponse | |",
    "keywords": "Struct XblHopperStatisticsResponse Namespace XGamingRuntime public struct XblHopperStatisticsResponse Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields estimatedWaitTime public long estimatedWaitTime Field Value long hopperName public string hopperName Field Value string playersWaitingToMatch public uint playersWaitingToMatch Field Value uint"
  },
  "api/XGamingRuntime.XblHresult.html": {
    "href": "api/XGamingRuntime.XblHresult.html",
    "title": "Enum XblHresult | |",
    "keywords": "Enum XblHresult Namespace XGamingRuntime public enum XblHresult Fields E_HC_ALREADY_INITIALISED = -1994174460 E_HC_CONNECT_ALREADY_CALLED = -1994174459 E_HC_INTERNAL_STILLINUSE = -1994174456 E_HC_NETWORK_NOT_INITIALIZED = -1994174457 E_HC_NOT_INITIALISED = -1994174463 E_HC_NO_NETWORK = -1994174458 E_HC_PERFORM_ALREADY_CALLED = -1994174461 E_XBL_ALREADY_INITIALIZED = 1994173945 E_XBL_AUTH_NO_TOKEN = -1994173946 E_XBL_AUTH_RUNTIME_ERROR = -1994173947 E_XBL_AUTH_UNKNOWN_ERROR = -1994173948 E_XBL_NOT_INITIALIZED = -1994173944 E_XBL_RTA_ACCESS_DENIED = -1994173949 E_XBL_RTA_GENERIC_ERROR = -1994173951 E_XBL_RTA_NOT_ACTIVATED = -1994173943 E_XBL_RTA_SUBSCRIPTION_LIMIT_REACHED = -1994173950 E_XBL_RUNTIME_ERROR = -1994173952 HRESULT_NOT_RECOGNIZED = 0 HRESULT not recognized."
  },
  "api/XGamingRuntime.XblHttpCallHandle.html": {
    "href": "api/XGamingRuntime.XblHttpCallHandle.html",
    "title": "Class XblHttpCallHandle | |",
    "keywords": "Class XblHttpCallHandle Namespace XGamingRuntime public class XblHttpCallHandle : EquatableHandle Inheritance object EquatableHandle XblHttpCallHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XblHttpCallPerformCompleted.html": {
    "href": "api/XGamingRuntime.XblHttpCallPerformCompleted.html",
    "title": "Delegate XblHttpCallPerformCompleted | |",
    "keywords": "Delegate XblHttpCallPerformCompleted Namespace XGamingRuntime public delegate void XblHttpCallPerformCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XblHttpCallResponseBodyType.html": {
    "href": "api/XGamingRuntime.XblHttpCallResponseBodyType.html",
    "title": "Enum XblHttpCallResponseBodyType | |",
    "keywords": "Enum XblHttpCallResponseBodyType Namespace XGamingRuntime public enum XblHttpCallResponseBodyType : uint Fields String = 0 Vector = 1"
  },
  "api/XGamingRuntime.XblLeaderboardColumn.html": {
    "href": "api/XGamingRuntime.XblLeaderboardColumn.html",
    "title": "Class XblLeaderboardColumn | |",
    "keywords": "Class XblLeaderboardColumn Namespace XGamingRuntime public class XblLeaderboardColumn Inheritance object XblLeaderboardColumn Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties StatName public string StatName { get; } Property Value string StatType public XblLeaderboardStatType StatType { get; } Property Value XblLeaderboardStatType"
  },
  "api/XGamingRuntime.XblLeaderboardGetLeaderboardCompleted.html": {
    "href": "api/XGamingRuntime.XblLeaderboardGetLeaderboardCompleted.html",
    "title": "Delegate XblLeaderboardGetLeaderboardCompleted | |",
    "keywords": "Delegate XblLeaderboardGetLeaderboardCompleted Namespace XGamingRuntime public delegate void XblLeaderboardGetLeaderboardCompleted(int hresult, XblLeaderboardResult xblLeaderboardResult) Parameters hresult int xblLeaderboardResult XblLeaderboardResult"
  },
  "api/XGamingRuntime.XblLeaderboardGetNextCompleted.html": {
    "href": "api/XGamingRuntime.XblLeaderboardGetNextCompleted.html",
    "title": "Delegate XblLeaderboardGetNextCompleted | |",
    "keywords": "Delegate XblLeaderboardGetNextCompleted Namespace XGamingRuntime public delegate void XblLeaderboardGetNextCompleted(int hresult, XblLeaderboardResult xblLeaderboardResult) Parameters hresult int xblLeaderboardResult XblLeaderboardResult"
  },
  "api/XGamingRuntime.XblLeaderboardQuery.html": {
    "href": "api/XGamingRuntime.XblLeaderboardQuery.html",
    "title": "Class XblLeaderboardQuery | |",
    "keywords": "Class XblLeaderboardQuery Namespace XGamingRuntime public class XblLeaderboardQuery Inheritance object XblLeaderboardQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AdditionalColumnleaderboardNames public string[] AdditionalColumnleaderboardNames { get; } Property Value string[] ContinuationToken public string ContinuationToken { get; } Property Value string LeaderboardName public string LeaderboardName { get; } Property Value string MaxItems public uint MaxItems { get; } Property Value uint Order public XblLeaderboardSortOrder Order { get; } Property Value XblLeaderboardSortOrder QueryType public XblLeaderboardQueryType QueryType { get; } Property Value XblLeaderboardQueryType ServiceConfigurationId public string ServiceConfigurationId { get; } Property Value string SkipResultToRank public uint SkipResultToRank { get; } Property Value uint SkipToXboxUserId public ulong SkipToXboxUserId { get; } Property Value ulong SocialGroup public XblSocialGroupType SocialGroup { get; } Property Value XblSocialGroupType StatName public string StatName { get; } Property Value string XboxUserId public ulong XboxUserId { get; } Property Value ulong Methods Create(ulong, string, string, string, XblSocialGroupType, string[], XblLeaderboardSortOrder, uint, ulong, uint, string, XblLeaderboardQueryType, out XblLeaderboardQuery) public static int Create(ulong xboxUserId, string serviceConfigurationId, string leaderboardName, string statName, XblSocialGroupType socialGroup, string[] additionalColumnleaderboardNames, XblLeaderboardSortOrder order, uint maxItems, ulong skipToXboxUserId, uint skipResultToRank, string continuationToken, XblLeaderboardQueryType queryType, out XblLeaderboardQuery leaderboardQuery) Parameters xboxUserId ulong serviceConfigurationId string leaderboardName string statName string socialGroup XblSocialGroupType additionalColumnleaderboardNames string[] order XblLeaderboardSortOrder maxItems uint skipToXboxUserId ulong skipResultToRank uint continuationToken string queryType XblLeaderboardQueryType leaderboardQuery XblLeaderboardQuery Returns int"
  },
  "api/XGamingRuntime.XblLeaderboardQueryType.html": {
    "href": "api/XGamingRuntime.XblLeaderboardQueryType.html",
    "title": "Enum XblLeaderboardQueryType | |",
    "keywords": "Enum XblLeaderboardQueryType Namespace XGamingRuntime public enum XblLeaderboardQueryType : uint Fields TitleManagedStatBackedGlobal = 1 TitleManagedStatBackedSocial = 2 UserStatBacked = 0"
  },
  "api/XGamingRuntime.XblLeaderboardResult.html": {
    "href": "api/XGamingRuntime.XblLeaderboardResult.html",
    "title": "Class XblLeaderboardResult | |",
    "keywords": "Class XblLeaderboardResult Namespace XGamingRuntime public class XblLeaderboardResult Inheritance object XblLeaderboardResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Columns public XblLeaderboardColumn[] Columns { get; } Property Value XblLeaderboardColumn[] HasNext public bool HasNext { get; } Property Value bool NextQuery public XblLeaderboardQuery NextQuery { get; } Property Value XblLeaderboardQuery Rows public XblLeaderboardRow[] Rows { get; } Property Value XblLeaderboardRow[] TotalRowCount public uint TotalRowCount { get; } Property Value uint"
  },
  "api/XGamingRuntime.XblLeaderboardRow.html": {
    "href": "api/XGamingRuntime.XblLeaderboardRow.html",
    "title": "Class XblLeaderboardRow | |",
    "keywords": "Class XblLeaderboardRow Namespace XGamingRuntime public class XblLeaderboardRow Inheritance object XblLeaderboardRow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ColumnValues public string[] ColumnValues { get; } Property Value string[] Gamertag public string Gamertag { get; } Property Value string GlobalRank public uint GlobalRank { get; } Property Value uint ModernGamertag public string ModernGamertag { get; } Property Value string ModernGamertagSuffix public string ModernGamertagSuffix { get; } Property Value string Percentile public double Percentile { get; } Property Value double Rank public uint Rank { get; } Property Value uint UniqueModernGamertag public string UniqueModernGamertag { get; } Property Value string XboxUserId public ulong XboxUserId { get; } Property Value ulong"
  },
  "api/XGamingRuntime.XblLeaderboardSortOrder.html": {
    "href": "api/XGamingRuntime.XblLeaderboardSortOrder.html",
    "title": "Enum XblLeaderboardSortOrder | |",
    "keywords": "Enum XblLeaderboardSortOrder Namespace XGamingRuntime public enum XblLeaderboardSortOrder : uint Fields Ascending = 1 Sorting the leaderboard lowest to highest. Descending = 0 Sorting the leaderboard highest to lowest."
  },
  "api/XGamingRuntime.XblLeaderboardStatType.html": {
    "href": "api/XGamingRuntime.XblLeaderboardStatType.html",
    "title": "Enum XblLeaderboardStatType | |",
    "keywords": "Enum XblLeaderboardStatType Namespace XGamingRuntime public enum XblLeaderboardStatType : uint Fields Boolean = 1 Boolean. Double = 2 Double. Other = 4 Unknown. String = 3 String. Uint64 = 0 Unsigned 64 bit integer."
  },
  "api/XGamingRuntime.XblMatchTicket.html": {
    "href": "api/XGamingRuntime.XblMatchTicket.html",
    "title": "Struct XblMatchTicket | |",
    "keywords": "Struct XblMatchTicket Namespace XGamingRuntime public struct XblMatchTicket Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields estimatedWaitTime public long estimatedWaitTime Field Value long matchTicketId public string matchTicketId Field Value string"
  },
  "api/XGamingRuntime.XblMatchTicketDetailsResponse.html": {
    "href": "api/XGamingRuntime.XblMatchTicketDetailsResponse.html",
    "title": "Struct XblMatchTicketDetailsResponse | |",
    "keywords": "Struct XblMatchTicketDetailsResponse Namespace XGamingRuntime public struct XblMatchTicketDetailsResponse Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields estimatedWaitTime public long estimatedWaitTime Field Value long matchStatus public XblTicketStatus matchStatus Field Value XblTicketStatus preserveSession public XblPreserveSessionMode preserveSession Field Value XblPreserveSessionMode targetSession public XblMultiplayerSessionReference targetSession Field Value XblMultiplayerSessionReference ticketAttributesJson public string ticketAttributesJson Field Value string ticketSession public XblMultiplayerSessionReference ticketSession Field Value XblMultiplayerSessionReference"
  },
  "api/XGamingRuntime.XblMatchmakingCreateTicketCallback.html": {
    "href": "api/XGamingRuntime.XblMatchmakingCreateTicketCallback.html",
    "title": "Delegate XblMatchmakingCreateTicketCallback | |",
    "keywords": "Delegate XblMatchmakingCreateTicketCallback Namespace XGamingRuntime public delegate void XblMatchmakingCreateTicketCallback(int hresult, XblMatchTicket matchTicket) Parameters hresult int matchTicket XblMatchTicket"
  },
  "api/XGamingRuntime.XblMatchmakingDeleteTicketCallback.html": {
    "href": "api/XGamingRuntime.XblMatchmakingDeleteTicketCallback.html",
    "title": "Delegate XblMatchmakingDeleteTicketCallback | |",
    "keywords": "Delegate XblMatchmakingDeleteTicketCallback Namespace XGamingRuntime public delegate void XblMatchmakingDeleteTicketCallback(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XblMatchmakingStatisticsCallback.html": {
    "href": "api/XGamingRuntime.XblMatchmakingStatisticsCallback.html",
    "title": "Delegate XblMatchmakingStatisticsCallback | |",
    "keywords": "Delegate XblMatchmakingStatisticsCallback Namespace XGamingRuntime public delegate void XblMatchmakingStatisticsCallback(int hresult, XblHopperStatisticsResponse statistics) Parameters hresult int statistics XblHopperStatisticsResponse"
  },
  "api/XGamingRuntime.XblMatchmakingStatus.html": {
    "href": "api/XGamingRuntime.XblMatchmakingStatus.html",
    "title": "Enum XblMatchmakingStatus | |",
    "keywords": "Enum XblMatchmakingStatus Namespace XGamingRuntime public enum XblMatchmakingStatus : uint Fields Canceled = 5 Expired = 3 Found = 4 None = 1 Searching = 2 Unknown = 0"
  },
  "api/XGamingRuntime.XblMatchmakingTicketDetailsCallback.html": {
    "href": "api/XGamingRuntime.XblMatchmakingTicketDetailsCallback.html",
    "title": "Delegate XblMatchmakingTicketDetailsCallback | |",
    "keywords": "Delegate XblMatchmakingTicketDetailsCallback Namespace XGamingRuntime public delegate void XblMatchmakingTicketDetailsCallback(int hresult, XblMatchTicketDetailsResponse details) Parameters hresult int details XblMatchTicketDetailsResponse"
  },
  "api/XGamingRuntime.XblMultiplayerActivityDetails.html": {
    "href": "api/XGamingRuntime.XblMultiplayerActivityDetails.html",
    "title": "Class XblMultiplayerActivityDetails | |",
    "keywords": "Class XblMultiplayerActivityDetails Namespace XGamingRuntime public class XblMultiplayerActivityDetails Inheritance object XblMultiplayerActivityDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Closed public bool Closed { get; } Property Value bool CustomSessionPropertiesJson public string CustomSessionPropertiesJson { get; } Property Value string HandleId public string HandleId { get; } Property Value string JoinRestriction public XblMultiplayerSessionRestriction JoinRestriction { get; } Property Value XblMultiplayerSessionRestriction MaxMembersCount public uint MaxMembersCount { get; } Property Value uint MembersCount public uint MembersCount { get; } Property Value uint OwnerXuid public ulong OwnerXuid { get; } Property Value ulong SessionReference public XblMultiplayerSessionReference SessionReference { get; } Property Value XblMultiplayerSessionReference TitleId public uint TitleId { get; } Property Value uint Visibility public XblMultiplayerSessionVisibility Visibility { get; } Property Value XblMultiplayerSessionVisibility"
  },
  "api/XGamingRuntime.XblMultiplayerActivityEncounterType.html": {
    "href": "api/XGamingRuntime.XblMultiplayerActivityEncounterType.html",
    "title": "Enum XblMultiplayerActivityEncounterType | |",
    "keywords": "Enum XblMultiplayerActivityEncounterType Namespace XGamingRuntime public enum XblMultiplayerActivityEncounterType : uint Fields Default = 0 Opponent = 2 Teammate = 1"
  },
  "api/XGamingRuntime.XblMultiplayerActivityGetActivityCompleted.html": {
    "href": "api/XGamingRuntime.XblMultiplayerActivityGetActivityCompleted.html",
    "title": "Delegate XblMultiplayerActivityGetActivityCompleted | |",
    "keywords": "Delegate XblMultiplayerActivityGetActivityCompleted Namespace XGamingRuntime public delegate void XblMultiplayerActivityGetActivityCompleted(int HRESULT, XblMultiplayerActivityInfo[] activityInfos) Parameters HRESULT int activityInfos XblMultiplayerActivityInfo[]"
  },
  "api/XGamingRuntime.XblMultiplayerActivityInfo.html": {
    "href": "api/XGamingRuntime.XblMultiplayerActivityInfo.html",
    "title": "Class XblMultiplayerActivityInfo | |",
    "keywords": "Class XblMultiplayerActivityInfo Namespace XGamingRuntime public class XblMultiplayerActivityInfo Inheritance object XblMultiplayerActivityInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblMultiplayerActivityInfo() public XblMultiplayerActivityInfo() Properties ConnectionString public string ConnectionString { get; set; } Property Value string CurrentPlayers public int CurrentPlayers { get; set; } Property Value int GroupId public string GroupId { get; set; } Property Value string JoinRestriction public XblMultiplayerActivityJoinRestriction JoinRestriction { get; set; } Property Value XblMultiplayerActivityJoinRestriction MaxPlayers public int MaxPlayers { get; set; } Property Value int Platform public XblMultiplayerActivityPlatform Platform { get; set; } Property Value XblMultiplayerActivityPlatform Xuid public ulong Xuid { get; set; } Property Value ulong"
  },
  "api/XGamingRuntime.XblMultiplayerActivityJoinRestriction.html": {
    "href": "api/XGamingRuntime.XblMultiplayerActivityJoinRestriction.html",
    "title": "Enum XblMultiplayerActivityJoinRestriction | |",
    "keywords": "Enum XblMultiplayerActivityJoinRestriction Namespace XGamingRuntime public enum XblMultiplayerActivityJoinRestriction : uint Fields Followed = 2 InviteOnly = 1 Public = 0"
  },
  "api/XGamingRuntime.XblMultiplayerActivityOperationCompleted.html": {
    "href": "api/XGamingRuntime.XblMultiplayerActivityOperationCompleted.html",
    "title": "Delegate XblMultiplayerActivityOperationCompleted | |",
    "keywords": "Delegate XblMultiplayerActivityOperationCompleted Namespace XGamingRuntime public delegate void XblMultiplayerActivityOperationCompleted(int HRESULT) Parameters HRESULT int"
  },
  "api/XGamingRuntime.XblMultiplayerActivityPlatform.html": {
    "href": "api/XGamingRuntime.XblMultiplayerActivityPlatform.html",
    "title": "Enum XblMultiplayerActivityPlatform | |",
    "keywords": "Enum XblMultiplayerActivityPlatform Namespace XGamingRuntime public enum XblMultiplayerActivityPlatform : uint Fields All = 60 Android = 30 Nintendo = 40 PlayStation = 50 Scarlett = 4 Unknown = 0 Win32 = 3 WindowsOneCore = 2 XboxOne = 1 iOS = 20"
  },
  "api/XGamingRuntime.XblMultiplayerActivityRecentPlayerUpdate.html": {
    "href": "api/XGamingRuntime.XblMultiplayerActivityRecentPlayerUpdate.html",
    "title": "Class XblMultiplayerActivityRecentPlayerUpdate | |",
    "keywords": "Class XblMultiplayerActivityRecentPlayerUpdate Namespace XGamingRuntime public class XblMultiplayerActivityRecentPlayerUpdate Inheritance object XblMultiplayerActivityRecentPlayerUpdate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblMultiplayerActivityRecentPlayerUpdate() public XblMultiplayerActivityRecentPlayerUpdate() Properties EncounterType public XblMultiplayerActivityEncounterType EncounterType { get; set; } Property Value XblMultiplayerActivityEncounterType Xuid public ulong Xuid { get; set; } Property Value ulong"
  },
  "api/XGamingRuntime.XblMultiplayerConnectionAddressDeviceTokenPair.html": {
    "href": "api/XGamingRuntime.XblMultiplayerConnectionAddressDeviceTokenPair.html",
    "title": "Class XblMultiplayerConnectionAddressDeviceTokenPair | |",
    "keywords": "Class XblMultiplayerConnectionAddressDeviceTokenPair Namespace XGamingRuntime public class XblMultiplayerConnectionAddressDeviceTokenPair Inheritance object XblMultiplayerConnectionAddressDeviceTokenPair Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConnectionAddress public string ConnectionAddress { get; } Property Value string DeviceToken public XblDeviceToken DeviceToken { get; } Property Value XblDeviceToken"
  },
  "api/XGamingRuntime.XblMultiplayerEvent.html": {
    "href": "api/XGamingRuntime.XblMultiplayerEvent.html",
    "title": "Class XblMultiplayerEvent | |",
    "keywords": "Class XblMultiplayerEvent Namespace XGamingRuntime public class XblMultiplayerEvent Inheritance object XblMultiplayerEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Context public object Context { get; } Property Value object ErrorMessage public string ErrorMessage { get; } Property Value string EventArgsHandle public XblMultiplayerEventArgsHandle EventArgsHandle { get; } Property Value XblMultiplayerEventArgsHandle EventType public XblMultiplayerEventType EventType { get; } Property Value XblMultiplayerEventType Result public int Result { get; } Property Value int SessionType public XblMultiplayerSessionType SessionType { get; } Property Value XblMultiplayerSessionType"
  },
  "api/XGamingRuntime.XblMultiplayerEventArgsHandle.html": {
    "href": "api/XGamingRuntime.XblMultiplayerEventArgsHandle.html",
    "title": "Class XblMultiplayerEventArgsHandle | |",
    "keywords": "Class XblMultiplayerEventArgsHandle Namespace XGamingRuntime public class XblMultiplayerEventArgsHandle : EquatableHandle Inheritance object EquatableHandle XblMultiplayerEventArgsHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XblMultiplayerEventType.html": {
    "href": "api/XGamingRuntime.XblMultiplayerEventType.html",
    "title": "Enum XblMultiplayerEventType | |",
    "keywords": "Enum XblMultiplayerEventType Namespace XGamingRuntime public enum XblMultiplayerEventType : uint Fields ArbitrationComplete = 22 Deprecated ClientDisconnectedFromMultiplayerService = 18 FindMatchCompleted = 14 HostChanged = 10 InviteSent = 19 JoinGameCompleted = 15 JoinLobbyCompleted = 17 JoinabilityStateChanged = 12 LeaveGameCompleted = 16 LocalMemberConnectionAddressWriteCompleted = 6 LocalMemberPropertyWriteCompleted = 5 MemberJoined = 2 MemberLeft = 3 MemberPropertyChanged = 4 PerformQosMeasurements = 13 SessionPropertyChanged = 7 SessionPropertyWriteCompleted = 8 SessionSynchronizedPropertyWriteCompleted = 9 SynchronizedHostWriteCompleted = 11 TournamentGameSessionReady = 21 Deprecated TournamentRegistrationStateChanged = 20 Deprecated UserAdded = 0 UserRemoved = 1"
  },
  "api/XGamingRuntime.XblMultiplayerHandlerCallbackToken.html": {
    "href": "api/XGamingRuntime.XblMultiplayerHandlerCallbackToken.html",
    "title": "Struct XblMultiplayerHandlerCallbackToken | |",
    "keywords": "Struct XblMultiplayerHandlerCallbackToken Namespace XGamingRuntime public struct XblMultiplayerHandlerCallbackToken Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields FunctionContext public XblFunctionContext FunctionContext Field Value XblFunctionContext InvalidHandlerId public const int InvalidHandlerId = 0 Field Value int Methods IsValid() public bool IsValid() Returns bool IsValid(int) public static bool IsValid(int interopHandlerId) Parameters interopHandlerId int Returns bool Reset() public void Reset()"
  },
  "api/XGamingRuntime.XblMultiplayerInitializationStage.html": {
    "href": "api/XGamingRuntime.XblMultiplayerInitializationStage.html",
    "title": "Enum XblMultiplayerInitializationStage | |",
    "keywords": "Enum XblMultiplayerInitializationStage Namespace XGamingRuntime public enum XblMultiplayerInitializationStage : uint Fields Evaluating = 4 Failed = 5 Joining = 2 Measuring = 3 None = 1 Unknown = 0"
  },
  "api/XGamingRuntime.XblMultiplayerJoinability.html": {
    "href": "api/XGamingRuntime.XblMultiplayerJoinability.html",
    "title": "Enum XblMultiplayerJoinability | |",
    "keywords": "Enum XblMultiplayerJoinability Namespace XGamingRuntime public enum XblMultiplayerJoinability : uint Fields Closed = 4 DisableWhileGameInProgress = 3 InviteOnly = 2 JoinableByFriends = 1 None = 0"
  },
  "api/XGamingRuntime.XblMultiplayerManagerMember.html": {
    "href": "api/XGamingRuntime.XblMultiplayerManagerMember.html",
    "title": "Class XblMultiplayerManagerMember | |",
    "keywords": "Class XblMultiplayerManagerMember Namespace XGamingRuntime public class XblMultiplayerManagerMember Inheritance object XblMultiplayerManagerMember Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConnectionAddress public string ConnectionAddress { get; } Property Value string DebugGamertag public string DebugGamertag { get; } Property Value string DeviceToken public string DeviceToken { get; } Property Value string InitialTeam public string InitialTeam { get; } Property Value string IsInGame public bool IsInGame { get; } Property Value bool IsInLobby public bool IsInLobby { get; } Property Value bool IsLocal public bool IsLocal { get; } Property Value bool MemberId public uint MemberId { get; } Property Value uint PropertiesJson public string PropertiesJson { get; } Property Value string Status public XblMultiplayerSessionMemberStatus Status { get; } Property Value XblMultiplayerSessionMemberStatus TeamId Deprecated public string TeamId { get; } Property Value string Xuid public ulong Xuid { get; } Property Value ulong"
  },
  "api/XGamingRuntime.XblMultiplayerMatchStatus.html": {
    "href": "api/XGamingRuntime.XblMultiplayerMatchStatus.html",
    "title": "Enum XblMultiplayerMatchStatus | |",
    "keywords": "Enum XblMultiplayerMatchStatus Namespace XGamingRuntime public enum XblMultiplayerMatchStatus : uint Fields Canceled = 14 Canceling = 13 Completed = 10 Evaluating = 9 Expired = 12 Failed = 15 Found = 3 Joining = 4 Measuring = 6 None = 0 Resubmitting = 11 Searching = 2 SubmittingMatchTicket = 1 UploadingQosMeasurements = 7 WaitingForRemoteClientsToJoin = 5 WaitingForRemoteClientsToUploadQos = 8"
  },
  "api/XGamingRuntime.XblMultiplayerMatchmakingServer.html": {
    "href": "api/XGamingRuntime.XblMultiplayerMatchmakingServer.html",
    "title": "Class XblMultiplayerMatchmakingServer | |",
    "keywords": "Class XblMultiplayerMatchmakingServer Namespace XGamingRuntime public class XblMultiplayerMatchmakingServer Inheritance object XblMultiplayerMatchmakingServer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Status public XblMatchmakingStatus Status { get; } Property Value XblMatchmakingStatus StatusDetails public string StatusDetails { get; } Property Value string TargetSessionRef public XblMultiplayerSessionReference TargetSessionRef { get; } Property Value XblMultiplayerSessionReference TypicalWaitInSeconds public uint TypicalWaitInSeconds { get; } Property Value uint"
  },
  "api/XGamingRuntime.XblMultiplayerMeasurementFailure.html": {
    "href": "api/XGamingRuntime.XblMultiplayerMeasurementFailure.html",
    "title": "Enum XblMultiplayerMeasurementFailure | |",
    "keywords": "Enum XblMultiplayerMeasurementFailure Namespace XGamingRuntime public enum XblMultiplayerMeasurementFailure : uint Fields BandwidthDown = 5 BandwidthUp = 4 Episode = 8 Group = 6 Latency = 3 Network = 7 None = 1 Timeout = 2 Unknown = 0"
  },
  "api/XGamingRuntime.XblMultiplayerMemberInitialization.html": {
    "href": "api/XGamingRuntime.XblMultiplayerMemberInitialization.html",
    "title": "Class XblMultiplayerMemberInitialization | |",
    "keywords": "Class XblMultiplayerMemberInitialization Namespace XGamingRuntime public class XblMultiplayerMemberInitialization Inheritance object XblMultiplayerMemberInitialization Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblMultiplayerMemberInitialization() public XblMultiplayerMemberInitialization() Properties EvaluationTimeout public ulong EvaluationTimeout { get; set; } Property Value ulong ExternalEvaluation public bool ExternalEvaluation { get; set; } Property Value bool JoinTimeout public ulong JoinTimeout { get; set; } Property Value ulong MeasurementTimeout public ulong MeasurementTimeout { get; set; } Property Value ulong MembersNeededToStart public uint MembersNeededToStart { get; set; } Property Value uint"
  },
  "api/XGamingRuntime.XblMultiplayerMetrics.html": {
    "href": "api/XGamingRuntime.XblMultiplayerMetrics.html",
    "title": "Enum XblMultiplayerMetrics | |",
    "keywords": "Enum XblMultiplayerMetrics Namespace XGamingRuntime public enum XblMultiplayerMetrics : uint Fields Bandwidth = 3 BandwidthDown = 2 BandwidthUp = 1 Latency = 4 Unknown = 0"
  },
  "api/XGamingRuntime.XblMultiplayerPeerToHostRequirements.html": {
    "href": "api/XGamingRuntime.XblMultiplayerPeerToHostRequirements.html",
    "title": "Class XblMultiplayerPeerToHostRequirements | |",
    "keywords": "Class XblMultiplayerPeerToHostRequirements Namespace XGamingRuntime public class XblMultiplayerPeerToHostRequirements Inheritance object XblMultiplayerPeerToHostRequirements Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BandwidthDownMinimumInKbps public ulong BandwidthDownMinimumInKbps { get; } Property Value ulong BandwidthUpMinimumInKbps public ulong BandwidthUpMinimumInKbps { get; } Property Value ulong HostSelectionMetric public XblMultiplayerMetrics HostSelectionMetric { get; } Property Value XblMultiplayerMetrics LatencyMaximum public ulong LatencyMaximum { get; } Property Value ulong"
  },
  "api/XGamingRuntime.XblMultiplayerPeerToPeerRequirements.html": {
    "href": "api/XGamingRuntime.XblMultiplayerPeerToPeerRequirements.html",
    "title": "Class XblMultiplayerPeerToPeerRequirements | |",
    "keywords": "Class XblMultiplayerPeerToPeerRequirements Namespace XGamingRuntime public class XblMultiplayerPeerToPeerRequirements Inheritance object XblMultiplayerPeerToPeerRequirements Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblMultiplayerPeerToPeerRequirements() public XblMultiplayerPeerToPeerRequirements() Properties BandwidthMinimumInKbps public ulong BandwidthMinimumInKbps { get; set; } Property Value ulong LatencyMaximum public ulong LatencyMaximum { get; set; } Property Value ulong"
  },
  "api/XGamingRuntime.XblMultiplayerPerformQoSMeasurementsArgs.html": {
    "href": "api/XGamingRuntime.XblMultiplayerPerformQoSMeasurementsArgs.html",
    "title": "Class XblMultiplayerPerformQoSMeasurementsArgs | |",
    "keywords": "Class XblMultiplayerPerformQoSMeasurementsArgs Namespace XGamingRuntime public class XblMultiplayerPerformQoSMeasurementsArgs Inheritance object XblMultiplayerPerformQoSMeasurementsArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties RemoteClients public XblMultiplayerConnectionAddressDeviceTokenPair[] RemoteClients { get; } Property Value XblMultiplayerConnectionAddressDeviceTokenPair[]"
  },
  "api/XGamingRuntime.XblMultiplayerRole.html": {
    "href": "api/XGamingRuntime.XblMultiplayerRole.html",
    "title": "Class XblMultiplayerRole | |",
    "keywords": "Class XblMultiplayerRole Namespace XGamingRuntime public class XblMultiplayerRole Inheritance object XblMultiplayerRole Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MaxMemberCount public uint MaxMemberCount { get; } Property Value uint MemberXuids public ulong[] MemberXuids { get; } Property Value ulong[] Name public string Name { get; } Property Value string RoleType public XblMultiplayerRoleType RoleType { get; } Property Value XblMultiplayerRoleType TargetCount public uint TargetCount { get; } Property Value uint"
  },
  "api/XGamingRuntime.XblMultiplayerRoleType.html": {
    "href": "api/XGamingRuntime.XblMultiplayerRoleType.html",
    "title": "Class XblMultiplayerRoleType | |",
    "keywords": "Class XblMultiplayerRoleType Namespace XGamingRuntime public class XblMultiplayerRoleType Inheritance object XblMultiplayerRoleType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MutableRoleSettings public XblMutableRoleSettings MutableRoleSettings { get; } Property Value XblMutableRoleSettings Name public string Name { get; } Property Value string OwnerManaged public bool OwnerManaged { get; } Property Value bool Roles public XblMultiplayerRole[] Roles { get; } Property Value XblMultiplayerRole[]"
  },
  "api/XGamingRuntime.XblMultiplayerSearchHandle.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSearchHandle.html",
    "title": "Class XblMultiplayerSearchHandle | |",
    "keywords": "Class XblMultiplayerSearchHandle Namespace XGamingRuntime public class XblMultiplayerSearchHandle : EquatableHandle Inheritance object EquatableHandle XblMultiplayerSearchHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XblMultiplayerSessionCapabilities.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionCapabilities.html",
    "title": "Class XblMultiplayerSessionCapabilities | |",
    "keywords": "Class XblMultiplayerSessionCapabilities Namespace XGamingRuntime public class XblMultiplayerSessionCapabilities Inheritance object XblMultiplayerSessionCapabilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblMultiplayerSessionCapabilities() public XblMultiplayerSessionCapabilities() Properties Arbitration Deprecated public bool Arbitration { get; set; } Property Value bool ConnectionRequiredForActiveMembers public bool ConnectionRequiredForActiveMembers { get; set; } Property Value bool Connectivity public bool Connectivity { get; set; } Property Value bool Crossplay public bool Crossplay { get; set; } Property Value bool Gameplay public bool Gameplay { get; set; } Property Value bool HasOwners public bool HasOwners { get; set; } Property Value bool Large public bool Large { get; set; } Property Value bool Searchable public bool Searchable { get; set; } Property Value bool SuppressPresenceActivityCheck public bool SuppressPresenceActivityCheck { get; set; } Property Value bool Team Deprecated public bool Team { get; set; } Property Value bool UserAuthorizationStyle public bool UserAuthorizationStyle { get; set; } Property Value bool"
  },
  "api/XGamingRuntime.XblMultiplayerSessionChangeEventArgs.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionChangeEventArgs.html",
    "title": "Class XblMultiplayerSessionChangeEventArgs | |",
    "keywords": "Class XblMultiplayerSessionChangeEventArgs Namespace XGamingRuntime public class XblMultiplayerSessionChangeEventArgs Inheritance object XblMultiplayerSessionChangeEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Branch public string Branch { get; } Property Value string ChangeNumber public ulong ChangeNumber { get; } Property Value ulong SessionReference public XblMultiplayerSessionReference SessionReference { get; } Property Value XblMultiplayerSessionReference"
  },
  "api/XGamingRuntime.XblMultiplayerSessionChangeTypes.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionChangeTypes.html",
    "title": "Enum XblMultiplayerSessionChangeTypes | |",
    "keywords": "Enum XblMultiplayerSessionChangeTypes Namespace XGamingRuntime [Flags] public enum XblMultiplayerSessionChangeTypes : uint Fields ArbitrationPropertyChange = 1024 Deprecated CustomPropertyChange = 128 Everything = 1 HostDeviceTokenChange = 2 InitializationStateChange = 4 MatchmakingStatusChange = 8 MemberCustomPropertyChange = 256 MemberListChange = 16 MemberStatusChange = 32 None = 0 SessionJoinabilityChange = 64 TournamentPropertyChange = 512 Deprecated"
  },
  "api/XGamingRuntime.XblMultiplayerSessionConstants.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionConstants.html",
    "title": "Class XblMultiplayerSessionConstants | |",
    "keywords": "Class XblMultiplayerSessionConstants Namespace XGamingRuntime public class XblMultiplayerSessionConstants Inheritance object XblMultiplayerSessionConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ArbitrationTimeout Deprecated public ulong ArbitrationTimeout { get; } Property Value ulong ClientMatchmakingCapable public bool ClientMatchmakingCapable { get; } Property Value bool CustomJson public string CustomJson { get; } Property Value string EnableMetricsBandwidthDown public bool EnableMetricsBandwidthDown { get; } Property Value bool EnableMetricsBandwidthUp public bool EnableMetricsBandwidthUp { get; } Property Value bool EnableMetricsCustom public bool EnableMetricsCustom { get; } Property Value bool EnableMetricsLatency public bool EnableMetricsLatency { get; } Property Value bool ForfeitTimeout Deprecated public ulong ForfeitTimeout { get; } Property Value ulong InitiatorXuids public ulong[] InitiatorXuids { get; } Property Value ulong[] MaxMembersInSession public uint MaxMembersInSession { get; } Property Value uint MeasurementServerAddressesJson public string MeasurementServerAddressesJson { get; } Property Value string MemberInactiveTimeout public ulong MemberInactiveTimeout { get; } Property Value ulong MemberInitialization public XblMultiplayerMemberInitialization MemberInitialization { get; } Property Value XblMultiplayerMemberInitialization MemberReadyTimeout public ulong MemberReadyTimeout { get; } Property Value ulong MemberReservedTimeout public ulong MemberReservedTimeout { get; } Property Value ulong PeerToHostRequirements public XblMultiplayerPeerToHostRequirements PeerToHostRequirements { get; } Property Value XblMultiplayerPeerToHostRequirements PeerToPeerRequirements public XblMultiplayerPeerToPeerRequirements PeerToPeerRequirements { get; } Property Value XblMultiplayerPeerToPeerRequirements SessionCapabilities public XblMultiplayerSessionCapabilities SessionCapabilities { get; } Property Value XblMultiplayerSessionCapabilities SessionCloudComputePackageConstantsJson public string SessionCloudComputePackageConstantsJson { get; } Property Value string SessionEmptyTimeout public ulong SessionEmptyTimeout { get; } Property Value ulong Visibility public XblMultiplayerSessionVisibility Visibility { get; } Property Value XblMultiplayerSessionVisibility"
  },
  "api/XGamingRuntime.XblMultiplayerSessionHandle.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionHandle.html",
    "title": "Class XblMultiplayerSessionHandle | |",
    "keywords": "Class XblMultiplayerSessionHandle Namespace XGamingRuntime public class XblMultiplayerSessionHandle : EquatableHandle Inheritance object EquatableHandle XblMultiplayerSessionHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblMultiplayerSessionHandle(XblMultiplayerSessionHandle) public XblMultiplayerSessionHandle(XblMultiplayerSessionHandle interopHandle) Parameters interopHandle XblMultiplayerSessionHandle Properties InteropHandle public XblMultiplayerSessionHandle InteropHandle { get; set; } Property Value XblMultiplayerSessionHandle"
  },
  "api/XGamingRuntime.XblMultiplayerSessionInfo.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionInfo.html",
    "title": "Class XblMultiplayerSessionInfo | |",
    "keywords": "Class XblMultiplayerSessionInfo Namespace XGamingRuntime public class XblMultiplayerSessionInfo Inheritance object XblMultiplayerSessionInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Branch public string Branch { get; } Property Value string ChangeNumber public ulong ChangeNumber { get; } Property Value ulong ContractVersion public uint ContractVersion { get; } Property Value uint CorrelationId public string CorrelationId { get; } Property Value string NextTimer public DateTime NextTimer { get; } Property Value DateTime SearchHandleId public string SearchHandleId { get; } Property Value string StartTime public DateTime StartTime { get; } Property Value DateTime"
  },
  "api/XGamingRuntime.XblMultiplayerSessionInitArgs.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionInitArgs.html",
    "title": "Class XblMultiplayerSessionInitArgs | |",
    "keywords": "Class XblMultiplayerSessionInitArgs Namespace XGamingRuntime public class XblMultiplayerSessionInitArgs Inheritance object XblMultiplayerSessionInitArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblMultiplayerSessionInitArgs(uint, XblMultiplayerSessionVisibility, string, params ulong[]) public XblMultiplayerSessionInitArgs(uint maxMembers, XblMultiplayerSessionVisibility visibility, string customJson, params ulong[] initiatorXuids) Parameters maxMembers uint visibility XblMultiplayerSessionVisibility customJson string initiatorXuids ulong[] Properties CustomJson public string CustomJson { get; } Property Value string InitiatorXuids public ulong[] InitiatorXuids { get; } Property Value ulong[] MaxMembersInSession public uint MaxMembersInSession { get; } Property Value uint Visibility public XblMultiplayerSessionVisibility Visibility { get; } Property Value XblMultiplayerSessionVisibility"
  },
  "api/XGamingRuntime.XblMultiplayerSessionInitializationInfo.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionInitializationInfo.html",
    "title": "Class XblMultiplayerSessionInitializationInfo | |",
    "keywords": "Class XblMultiplayerSessionInitializationInfo Namespace XGamingRuntime public class XblMultiplayerSessionInitializationInfo Inheritance object XblMultiplayerSessionInitializationInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Episode public uint Episode { get; } Property Value uint Stage public XblMultiplayerInitializationStage Stage { get; } Property Value XblMultiplayerInitializationStage StageStartTime public DateTime StageStartTime { get; } Property Value DateTime"
  },
  "api/XGamingRuntime.XblMultiplayerSessionMember.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionMember.html",
    "title": "Class XblMultiplayerSessionMember | |",
    "keywords": "Class XblMultiplayerSessionMember Namespace XGamingRuntime public class XblMultiplayerSessionMember Inheritance object XblMultiplayerSessionMember Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ActiveTitleId public uint ActiveTitleId { get; } Property Value uint ArbitrationStatus Deprecated public XblTournamentArbitrationStatus ArbitrationStatus { get; } Property Value XblTournamentArbitrationStatus CustomConstantsJson public string CustomConstantsJson { get; } Property Value string CustomPropertiesJson public string CustomPropertiesJson { get; } Property Value string DeviceToken public XblDeviceToken DeviceToken { get; } Property Value XblDeviceToken Encounters public string[] Encounters { get; } Property Value string[] Gamertag public string Gamertag { get; } Property Value string Groups public string[] Groups { get; } Property Value string[] InitialTeam public string InitialTeam { get; } Property Value string InitializationEpisode public uint InitializationEpisode { get; } Property Value uint InitializationFailureCause public XblMultiplayerMeasurementFailure InitializationFailureCause { get; } Property Value XblMultiplayerMeasurementFailure InitializeRequested public bool InitializeRequested { get; } Property Value bool Internal public nint Internal { get; } Property Value nint IsCurrentUser public bool IsCurrentUser { get; } Property Value bool IsTurnAvailable public bool IsTurnAvailable { get; } Property Value bool JoinTime public DateTime JoinTime { get; } Property Value DateTime MatchmakingResultServerMeasurementsJson public string MatchmakingResultServerMeasurementsJson { get; } Property Value string MemberId public uint MemberId { get; } Property Value uint MembersInGroupIds public uint[] MembersInGroupIds { get; } Property Value uint[] Nat public XblNetworkAddressTranslationSetting Nat { get; } Property Value XblNetworkAddressTranslationSetting QosMeasurementsJson public string QosMeasurementsJson { get; } Property Value string Roles public XblMultiplayerSessionMemberRole[] Roles { get; } Property Value XblMultiplayerSessionMemberRole[] SecureDeviceBaseAddress64 public string SecureDeviceBaseAddress64 { get; } Property Value string ServerMeasurementsJson public string ServerMeasurementsJson { get; } Property Value string Status public XblMultiplayerSessionMemberStatus Status { get; } Property Value XblMultiplayerSessionMemberStatus TeamId Deprecated public string TeamId { get; } Property Value string TournamentTeamSessionReference Deprecated public XblMultiplayerSessionReference TournamentTeamSessionReference { get; } Property Value XblMultiplayerSessionReference Xuid public ulong Xuid { get; } Property Value ulong"
  },
  "api/XGamingRuntime.XblMultiplayerSessionMemberRole.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionMemberRole.html",
    "title": "Class XblMultiplayerSessionMemberRole | |",
    "keywords": "Class XblMultiplayerSessionMemberRole Namespace XGamingRuntime public class XblMultiplayerSessionMemberRole Inheritance object XblMultiplayerSessionMemberRole Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties RoleName public string RoleName { get; } Property Value string RoleTypeName public string RoleTypeName { get; } Property Value string"
  },
  "api/XGamingRuntime.XblMultiplayerSessionMemberStatus.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionMemberStatus.html",
    "title": "Enum XblMultiplayerSessionMemberStatus | |",
    "keywords": "Enum XblMultiplayerSessionMemberStatus Namespace XGamingRuntime public enum XblMultiplayerSessionMemberStatus : uint Fields Active = 3 Inactive = 1 Ready = 2 Reserved = 0"
  },
  "api/XGamingRuntime.XblMultiplayerSessionNumberAttribute.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionNumberAttribute.html",
    "title": "Class XblMultiplayerSessionNumberAttribute | |",
    "keywords": "Class XblMultiplayerSessionNumberAttribute Namespace XGamingRuntime public class XblMultiplayerSessionNumberAttribute Inheritance object XblMultiplayerSessionNumberAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblMultiplayerSessionNumberAttribute(string, double) public XblMultiplayerSessionNumberAttribute(string name, double value) Parameters name string value double Properties Name public string Name { get; } Property Value string Value public double Value { get; } Property Value double"
  },
  "api/XGamingRuntime.XblMultiplayerSessionProperties.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionProperties.html",
    "title": "Class XblMultiplayerSessionProperties | |",
    "keywords": "Class XblMultiplayerSessionProperties Namespace XGamingRuntime public class XblMultiplayerSessionProperties Inheritance object XblMultiplayerSessionProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllocateCloudCompute public bool AllocateCloudCompute { get; } Property Value bool Closed public bool Closed { get; } Property Value bool HostDeviceToken public XblDeviceToken HostDeviceToken { get; } Property Value XblDeviceToken JoinRestriction public XblMultiplayerSessionRestriction JoinRestriction { get; } Property Value XblMultiplayerSessionRestriction Keywords public string[] Keywords { get; } Property Value string[] Locked public bool Locked { get; } Property Value bool MatchmakingResubmit public bool MatchmakingResubmit { get; } Property Value bool MatchmakingServerConnectionString public string MatchmakingServerConnectionString { get; } Property Value string MatchmakingTargetSessionConstantsJson public string MatchmakingTargetSessionConstantsJson { get; } Property Value string ReadRestriction public XblMultiplayerSessionRestriction ReadRestriction { get; } Property Value XblMultiplayerSessionRestriction ServerConnectionStringCandidates public string[] ServerConnectionStringCandidates { get; } Property Value string[] SessionCustomPropertiesJson public string SessionCustomPropertiesJson { get; } Property Value string SessionOwnerMemberIds public uint[] SessionOwnerMemberIds { get; } Property Value uint[] TurnCollection public uint[] TurnCollection { get; } Property Value uint[]"
  },
  "api/XGamingRuntime.XblMultiplayerSessionQuery.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionQuery.html",
    "title": "Class XblMultiplayerSessionQuery | |",
    "keywords": "Class XblMultiplayerSessionQuery Namespace XGamingRuntime public class XblMultiplayerSessionQuery Inheritance object XblMultiplayerSessionQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ContractVersionFilter public uint ContractVersionFilter Field Value uint IncludeInactiveSessions public bool IncludeInactiveSessions Field Value bool IncludePrivateSessions public bool IncludePrivateSessions Field Value bool IncludeReservations public bool IncludeReservations Field Value bool KeywordFilter public string KeywordFilter Field Value string MaxItems public uint MaxItems Field Value uint Scid public string Scid Field Value string SessionTemplateNameFilter public string SessionTemplateNameFilter Field Value string VisibilityFilter public XblMultiplayerSessionVisibility VisibilityFilter Field Value XblMultiplayerSessionVisibility XuidFilters public ulong[] XuidFilters Field Value ulong[] XuidFiltersCount public uint XuidFiltersCount Field Value uint"
  },
  "api/XGamingRuntime.XblMultiplayerSessionQueryResult.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionQueryResult.html",
    "title": "Class XblMultiplayerSessionQueryResult | |",
    "keywords": "Class XblMultiplayerSessionQueryResult Namespace XGamingRuntime public class XblMultiplayerSessionQueryResult Inheritance object XblMultiplayerSessionQueryResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AcceptedMemberCount public uint AcceptedMemberCount Field Value uint IsMyTurn public bool IsMyTurn Field Value bool JoinRestriction public XblMultiplayerSessionRestriction JoinRestriction Field Value XblMultiplayerSessionRestriction SessionReference public XblMultiplayerSessionReference SessionReference Field Value XblMultiplayerSessionReference StartTime public long StartTime Field Value long Status public XblMultiplayerSessionStatus Status Field Value XblMultiplayerSessionStatus Visibility public XblMultiplayerSessionVisibility Visibility Field Value XblMultiplayerSessionVisibility Xuid public ulong Xuid Field Value ulong"
  },
  "api/XGamingRuntime.XblMultiplayerSessionReference.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionReference.html",
    "title": "Class XblMultiplayerSessionReference | |",
    "keywords": "Class XblMultiplayerSessionReference Namespace XGamingRuntime public class XblMultiplayerSessionReference Inheritance object XblMultiplayerSessionReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Scid public string Scid { get; } Property Value string SessionName public string SessionName { get; } Property Value string SessionTemplateName public string SessionTemplateName { get; } Property Value string"
  },
  "api/XGamingRuntime.XblMultiplayerSessionRestriction.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionRestriction.html",
    "title": "Enum XblMultiplayerSessionRestriction | |",
    "keywords": "Enum XblMultiplayerSessionRestriction Namespace XGamingRuntime public enum XblMultiplayerSessionRestriction : uint Fields Followed = 3 Local = 2 None = 1 Unknown = 0"
  },
  "api/XGamingRuntime.XblMultiplayerSessionStatus.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionStatus.html",
    "title": "Enum XblMultiplayerSessionStatus | |",
    "keywords": "Enum XblMultiplayerSessionStatus Namespace XGamingRuntime public enum XblMultiplayerSessionStatus : uint Fields Active = 1 Inactive = 2 Reserved = 3 Unknown = 0"
  },
  "api/XGamingRuntime.XblMultiplayerSessionStringAttribute.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionStringAttribute.html",
    "title": "Class XblMultiplayerSessionStringAttribute | |",
    "keywords": "Class XblMultiplayerSessionStringAttribute Namespace XGamingRuntime public class XblMultiplayerSessionStringAttribute Inheritance object XblMultiplayerSessionStringAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblMultiplayerSessionStringAttribute(string, string) public XblMultiplayerSessionStringAttribute(string name, string value) Parameters name string value string Properties Name public string Name { get; } Property Value string Value public string Value { get; } Property Value string"
  },
  "api/XGamingRuntime.XblMultiplayerSessionTag.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionTag.html",
    "title": "Class XblMultiplayerSessionTag | |",
    "keywords": "Class XblMultiplayerSessionTag Namespace XGamingRuntime public class XblMultiplayerSessionTag Inheritance object XblMultiplayerSessionTag Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblMultiplayerSessionTag(string) public XblMultiplayerSessionTag(string value) Parameters value string Properties Value public string Value { get; } Property Value string"
  },
  "api/XGamingRuntime.XblMultiplayerSessionType.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionType.html",
    "title": "Enum XblMultiplayerSessionType | |",
    "keywords": "Enum XblMultiplayerSessionType Namespace XGamingRuntime public enum XblMultiplayerSessionType : uint Fields GameSession = 2 LobbySession = 1 MatchSession = 3 Unknown = 0"
  },
  "api/XGamingRuntime.XblMultiplayerSessionVisibility.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionVisibility.html",
    "title": "Enum XblMultiplayerSessionVisibility | |",
    "keywords": "Enum XblMultiplayerSessionVisibility Namespace XGamingRuntime public enum XblMultiplayerSessionVisibility : uint Fields Any = 1 Full = 4 Open = 5 PrivateSession = 2 Unknown = 0 Visible = 3"
  },
  "api/XGamingRuntime.XblMultiplayerSessionWriteMode.html": {
    "href": "api/XGamingRuntime.XblMultiplayerSessionWriteMode.html",
    "title": "Enum XblMultiplayerSessionWriteMode | |",
    "keywords": "Enum XblMultiplayerSessionWriteMode Namespace XGamingRuntime public enum XblMultiplayerSessionWriteMode : uint Fields CreateNew = 0 SynchronizedUpdate = 3 UpdateExisting = 2 UpdateOrCreateNew = 1"
  },
  "api/XGamingRuntime.XblMutableRoleSettings.html": {
    "href": "api/XGamingRuntime.XblMutableRoleSettings.html",
    "title": "Enum XblMutableRoleSettings | |",
    "keywords": "Enum XblMutableRoleSettings Namespace XGamingRuntime [Flags] public enum XblMutableRoleSettings : uint Fields Max = 1 None = 0 Target = 2"
  },
  "api/XGamingRuntime.XblNetworkAddressTranslationSetting.html": {
    "href": "api/XGamingRuntime.XblNetworkAddressTranslationSetting.html",
    "title": "Enum XblNetworkAddressTranslationSetting | |",
    "keywords": "Enum XblNetworkAddressTranslationSetting Namespace XGamingRuntime public enum XblNetworkAddressTranslationSetting : uint Fields Moderate = 2 Open = 1 Strict = 3 Unknown = 0"
  },
  "api/XGamingRuntime.XblPermission.html": {
    "href": "api/XGamingRuntime.XblPermission.html",
    "title": "Enum XblPermission | |",
    "keywords": "Enum XblPermission Namespace XGamingRuntime public enum XblPermission : uint Fields BroadcastWithTwitch = 1019 CommunicateUsingText = 1000 CommunicateUsingVideo = 1001 CommunicateUsingVoice = 1002 PlayMultiplayer = 1014 ShareItem = 1024 ShareTargetContentToExternalNetworks = 1025 Unknown = 0 ViewTargetExerciseInfo = 1009 ViewTargetGameHistory = 1005 ViewTargetMusicHistory = 1007 ViewTargetMusicStatus = 1013 ViewTargetPresence = 1011 ViewTargetProfile = 1004 ViewTargetUserCreatedContent = 1018 ViewTargetVideoHistory = 1006 ViewTargetVideoStatus = 1012 WriteComment = 1022"
  },
  "api/XGamingRuntime.XblPermissionCheckResult.html": {
    "href": "api/XGamingRuntime.XblPermissionCheckResult.html",
    "title": "Class XblPermissionCheckResult | |",
    "keywords": "Class XblPermissionCheckResult Namespace XGamingRuntime public class XblPermissionCheckResult Inheritance object XblPermissionCheckResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsAllowed public bool IsAllowed { get; } Property Value bool PermissionRequested public XblPermission PermissionRequested { get; } Property Value XblPermission Reasons public XblPermissionDenyReasonDetails[] Reasons { get; } Property Value XblPermissionDenyReasonDetails[] TargetUserType public XblAnonymousUserType TargetUserType { get; } Property Value XblAnonymousUserType TargetXuid public ulong TargetXuid { get; } Property Value ulong"
  },
  "api/XGamingRuntime.XblPermissionDenyReason.html": {
    "href": "api/XGamingRuntime.XblPermissionDenyReason.html",
    "title": "Enum XblPermissionDenyReason | |",
    "keywords": "Enum XblPermissionDenyReason Namespace XGamingRuntime public enum XblPermissionDenyReason : uint Fields BlockListRestrictsTarget = 5 MissingPrivilege = 3 MuteListRestrictsTarget = 7 NotAllowed = 2 PrivacySettingsRestrictsTarget = 9 PrivilegeRestrictsTarget = 4 Unknown = 0"
  },
  "api/XGamingRuntime.XblPermissionDenyReasonDetails.html": {
    "href": "api/XGamingRuntime.XblPermissionDenyReasonDetails.html",
    "title": "Class XblPermissionDenyReasonDetails | |",
    "keywords": "Class XblPermissionDenyReasonDetails Namespace XGamingRuntime public class XblPermissionDenyReasonDetails Inheritance object XblPermissionDenyReasonDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Reason public XblPermissionDenyReason Reason { get; } Property Value XblPermissionDenyReason RestrictedPrivacySetting public XblPrivacySetting RestrictedPrivacySetting { get; } Property Value XblPrivacySetting RestrictedPrivilege public XblPrivilege RestrictedPrivilege { get; } Property Value XblPrivilege"
  },
  "api/XGamingRuntime.XblPreferredColor.html": {
    "href": "api/XGamingRuntime.XblPreferredColor.html",
    "title": "Class XblPreferredColor | |",
    "keywords": "Class XblPreferredColor Namespace XGamingRuntime public class XblPreferredColor Inheritance object XblPreferredColor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PrimaryColor public string PrimaryColor { get; } Property Value string SecondaryColor public string SecondaryColor { get; } Property Value string TertiaryColor public string TertiaryColor { get; } Property Value string"
  },
  "api/XGamingRuntime.XblPresenceBroadcastProvider.html": {
    "href": "api/XGamingRuntime.XblPresenceBroadcastProvider.html",
    "title": "Enum XblPresenceBroadcastProvider | |",
    "keywords": "Enum XblPresenceBroadcastProvider Namespace XGamingRuntime public enum XblPresenceBroadcastProvider : uint Fields Twitch = 1 Streaming using Twitch. Unknown = 0 Unknown streaming provider."
  },
  "api/XGamingRuntime.XblPresenceBroadcastRecord.html": {
    "href": "api/XGamingRuntime.XblPresenceBroadcastRecord.html",
    "title": "Class XblPresenceBroadcastRecord | |",
    "keywords": "Class XblPresenceBroadcastRecord Namespace XGamingRuntime public class XblPresenceBroadcastRecord Inheritance object XblPresenceBroadcastRecord Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BroadcastId public string BroadcastId { get; } Property Value string Provider public XblPresenceBroadcastProvider Provider { get; } Property Value XblPresenceBroadcastProvider Session public string Session { get; } Property Value string StartTime public DateTime StartTime { get; } Property Value DateTime ViewerCount public uint ViewerCount { get; } Property Value uint"
  },
  "api/XGamingRuntime.XblPresenceDetailLevel.html": {
    "href": "api/XGamingRuntime.XblPresenceDetailLevel.html",
    "title": "Enum XblPresenceDetailLevel | |",
    "keywords": "Enum XblPresenceDetailLevel Namespace XGamingRuntime public enum XblPresenceDetailLevel : uint Fields All = 4 All detail possible. User, device, title and rich presence info will be provided. Default = 0 Default detail level. Device = 2 Device detail level. User and device presence info only, no title or rich presence info. Title = 3 Title detail level. User, device and title presence info only, no rich presence info. User = 1 User detail level. User presence info only, no device, title or rich presence info."
  },
  "api/XGamingRuntime.XblPresenceDeviceRecord.html": {
    "href": "api/XGamingRuntime.XblPresenceDeviceRecord.html",
    "title": "Class XblPresenceDeviceRecord | |",
    "keywords": "Class XblPresenceDeviceRecord Namespace XGamingRuntime public class XblPresenceDeviceRecord Inheritance object XblPresenceDeviceRecord Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DeviceType public XblPresenceDeviceType DeviceType { get; } Property Value XblPresenceDeviceType TitleRecords public XblPresenceTitleRecord[] TitleRecords { get; } Property Value XblPresenceTitleRecord[]"
  },
  "api/XGamingRuntime.XblPresenceDeviceType.html": {
    "href": "api/XGamingRuntime.XblPresenceDeviceType.html",
    "title": "Enum XblPresenceDeviceType | |",
    "keywords": "Enum XblPresenceDeviceType Namespace XGamingRuntime public enum XblPresenceDeviceType : uint Fields Android = 11 Android device. AppleTV = 12 AppleTV device. Nintendo = 13 Nintendo device. PC = 5 Games for Windows LIVE device PlayStation = 14 PlayStation device. Scarlett = 16 Scarlett device. Unknown = 0 Unknown device Web = 3 Web device, like Xbox.com Win32 = 15 Win32 based device. Windows8 = 6 Xbox LIVE for Windows device WindowsOneCore = 8 Windows One Core devices WindowsOneCoreMobile = 9 Windows One Core Mobile devices WindowsPhone = 1 Windows Phone device WindowsPhone7 = 2 Windows Phone 7 device Xbox360 = 4 Xbox360 device XboxOne = 7 Xbox One device iOS = 10 iOS device."
  },
  "api/XGamingRuntime.XblPresenceFilter.html": {
    "href": "api/XGamingRuntime.XblPresenceFilter.html",
    "title": "Enum XblPresenceFilter | |",
    "keywords": "Enum XblPresenceFilter Namespace XGamingRuntime public enum XblPresenceFilter : uint Fields All = 7 Everyone. AllOffline = 5 Everyone currently offline. AllOnline = 4 Everyone currently online. AllTitle = 6 Everyone who has played or is playing the title. TitleOffline = 2 Has played this title and is offline. TitleOnline = 1 Is currently playing current title and is online. TitleOnlineOutsideTitle = 3 Has played this title, is online but not currently playing this title. Unknown = 0 Unknown."
  },
  "api/XGamingRuntime.XblPresenceGetPresenceCompleted.html": {
    "href": "api/XGamingRuntime.XblPresenceGetPresenceCompleted.html",
    "title": "Delegate XblPresenceGetPresenceCompleted | |",
    "keywords": "Delegate XblPresenceGetPresenceCompleted Namespace XGamingRuntime public delegate void XblPresenceGetPresenceCompleted(int hresult, XblPresenceRecordHandle presenceRecordHandle) Parameters hresult int presenceRecordHandle XblPresenceRecordHandle"
  },
  "api/XGamingRuntime.XblPresenceGetPresenceForMultipleUsersCompleted.html": {
    "href": "api/XGamingRuntime.XblPresenceGetPresenceForMultipleUsersCompleted.html",
    "title": "Delegate XblPresenceGetPresenceForMultipleUsersCompleted | |",
    "keywords": "Delegate XblPresenceGetPresenceForMultipleUsersCompleted Namespace XGamingRuntime public delegate void XblPresenceGetPresenceForMultipleUsersCompleted(int hresult, XblPresenceRecordHandle[] presenceRecordHandles) Parameters hresult int presenceRecordHandles XblPresenceRecordHandle[]"
  },
  "api/XGamingRuntime.XblPresenceGetPresenceForSocialGroupCompleted.html": {
    "href": "api/XGamingRuntime.XblPresenceGetPresenceForSocialGroupCompleted.html",
    "title": "Delegate XblPresenceGetPresenceForSocialGroupCompleted | |",
    "keywords": "Delegate XblPresenceGetPresenceForSocialGroupCompleted Namespace XGamingRuntime public delegate void XblPresenceGetPresenceForSocialGroupCompleted(int hresult, XblPresenceRecordHandle[] presenceRecordHandles) Parameters hresult int presenceRecordHandles XblPresenceRecordHandle[]"
  },
  "api/XGamingRuntime.XblPresenceMediaIdType.html": {
    "href": "api/XGamingRuntime.XblPresenceMediaIdType.html",
    "title": "Enum XblPresenceMediaIdType | |",
    "keywords": "Enum XblPresenceMediaIdType Namespace XGamingRuntime public enum XblPresenceMediaIdType : uint Fields Bing = 1 Bing media Id. MediaProvider = 2 MediaProvider media Id. Unknown = 0 Unknown media Id."
  },
  "api/XGamingRuntime.XblPresenceQueryFilters.html": {
    "href": "api/XGamingRuntime.XblPresenceQueryFilters.html",
    "title": "Class XblPresenceQueryFilters | |",
    "keywords": "Class XblPresenceQueryFilters Namespace XGamingRuntime public class XblPresenceQueryFilters Inheritance object XblPresenceQueryFilters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BroadcastingOnly public bool BroadcastingOnly { get; } Property Value bool DetailLevel public XblPresenceDetailLevel DetailLevel { get; } Property Value XblPresenceDetailLevel DeviceTypes public XblPresenceDeviceType[] DeviceTypes { get; } Property Value XblPresenceDeviceType[] OnlineOnly public bool OnlineOnly { get; } Property Value bool TitleIds public uint[] TitleIds { get; } Property Value uint[] Methods Create(XblPresenceDeviceType[], uint[], XblPresenceDetailLevel, bool, bool, out XblPresenceQueryFilters) public static int Create(XblPresenceDeviceType[] deviceTypes, uint[] titleIds, XblPresenceDetailLevel detailLevel, bool onlineOnly, bool broadcastingOnly, out XblPresenceQueryFilters queryFilters) Parameters deviceTypes XblPresenceDeviceType[] titleIds uint[] detailLevel XblPresenceDetailLevel onlineOnly bool broadcastingOnly bool queryFilters XblPresenceQueryFilters Returns int"
  },
  "api/XGamingRuntime.XblPresenceRecordHandle.html": {
    "href": "api/XGamingRuntime.XblPresenceRecordHandle.html",
    "title": "Class XblPresenceRecordHandle | |",
    "keywords": "Class XblPresenceRecordHandle Namespace XGamingRuntime public class XblPresenceRecordHandle : EquatableHandle Inheritance object EquatableHandle XblPresenceRecordHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XblPresenceRichPresenceIds.html": {
    "href": "api/XGamingRuntime.XblPresenceRichPresenceIds.html",
    "title": "Class XblPresenceRichPresenceIds | |",
    "keywords": "Class XblPresenceRichPresenceIds Namespace XGamingRuntime public class XblPresenceRichPresenceIds Inheritance object XblPresenceRichPresenceIds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PresenceId public string PresenceId { get; } Property Value string PresenceTokenIds public string[] PresenceTokenIds { get; } Property Value string[] ServiceConfigurationId public string ServiceConfigurationId { get; } Property Value string Methods Create(string, string, string[], out XblPresenceRichPresenceIds) public static int Create(string serviceConfigurationId, string presenceId, string[] presenceTokenIds, out XblPresenceRichPresenceIds richPresenceIds) Parameters serviceConfigurationId string presenceId string presenceTokenIds string[] richPresenceIds XblPresenceRichPresenceIds Returns int"
  },
  "api/XGamingRuntime.XblPresenceSetPresenceCompleted.html": {
    "href": "api/XGamingRuntime.XblPresenceSetPresenceCompleted.html",
    "title": "Delegate XblPresenceSetPresenceCompleted | |",
    "keywords": "Delegate XblPresenceSetPresenceCompleted Namespace XGamingRuntime public delegate void XblPresenceSetPresenceCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XblPresenceTitleRecord.html": {
    "href": "api/XGamingRuntime.XblPresenceTitleRecord.html",
    "title": "Class XblPresenceTitleRecord | |",
    "keywords": "Class XblPresenceTitleRecord Namespace XGamingRuntime public class XblPresenceTitleRecord Inheritance object XblPresenceTitleRecord Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BroadcastRecord public XblPresenceBroadcastRecord BroadcastRecord { get; } Property Value XblPresenceBroadcastRecord LastModified public DateTime LastModified { get; } Property Value DateTime RichPresenceString public string RichPresenceString { get; } Property Value string TitleActive public bool TitleActive { get; } Property Value bool TitleId public uint TitleId { get; } Property Value uint TitleName public string TitleName { get; } Property Value string ViewState public XblPresenceTitleViewState ViewState { get; } Property Value XblPresenceTitleViewState"
  },
  "api/XGamingRuntime.XblPresenceTitleState.html": {
    "href": "api/XGamingRuntime.XblPresenceTitleState.html",
    "title": "Enum XblPresenceTitleState | |",
    "keywords": "Enum XblPresenceTitleState Namespace XGamingRuntime public enum XblPresenceTitleState : uint Fields Ended = 2 Indicates the user ended playing the title. Started = 1 Indicates the user started playing the title. Unknown = 0 Indicates this is a Unknown state."
  },
  "api/XGamingRuntime.XblPresenceTitleViewState.html": {
    "href": "api/XGamingRuntime.XblPresenceTitleViewState.html",
    "title": "Enum XblPresenceTitleViewState | |",
    "keywords": "Enum XblPresenceTitleViewState Namespace XGamingRuntime public enum XblPresenceTitleViewState : uint Fields Background = 4 The title's running in the background and is not visible. Filled = 2 The title's view is using part of the screen with another application snapped. FullScreen = 1 The title's view is using the full screen. Snapped = 3 The title's view is snapped with another application using a part of the screen. Unknown = 0 Unknown view state."
  },
  "api/XGamingRuntime.XblPresenceUserState.html": {
    "href": "api/XGamingRuntime.XblPresenceUserState.html",
    "title": "Enum XblPresenceUserState | |",
    "keywords": "Enum XblPresenceUserState Namespace XGamingRuntime public enum XblPresenceUserState : uint Fields Away = 2 User is signed-in to Xbox LIVE, but inactive in all titles. Offline = 3 User is not signed in to Xbox LIVE. Online = 1 User is signed in to Xbox LIVE and active in a title. Unknown = 0 The state is unknown."
  },
  "api/XGamingRuntime.XblPreserveSessionMode.html": {
    "href": "api/XGamingRuntime.XblPreserveSessionMode.html",
    "title": "Enum XblPreserveSessionMode | |",
    "keywords": "Enum XblPreserveSessionMode Namespace XGamingRuntime public enum XblPreserveSessionMode : uint Fields Always = 1 Never = 2 Unknown = 0"
  },
  "api/XGamingRuntime.XblPrivacyBatchCheckPermissionCompleted.html": {
    "href": "api/XGamingRuntime.XblPrivacyBatchCheckPermissionCompleted.html",
    "title": "Delegate XblPrivacyBatchCheckPermissionCompleted | |",
    "keywords": "Delegate XblPrivacyBatchCheckPermissionCompleted Namespace XGamingRuntime public delegate void XblPrivacyBatchCheckPermissionCompleted(int hresult, XblPermissionCheckResult[] result) Parameters hresult int result XblPermissionCheckResult[]"
  },
  "api/XGamingRuntime.XblPrivacyCheckPermissionCompleted.html": {
    "href": "api/XGamingRuntime.XblPrivacyCheckPermissionCompleted.html",
    "title": "Delegate XblPrivacyCheckPermissionCompleted | |",
    "keywords": "Delegate XblPrivacyCheckPermissionCompleted Namespace XGamingRuntime public delegate void XblPrivacyCheckPermissionCompleted(int hresult, XblPermissionCheckResult result) Parameters hresult int result XblPermissionCheckResult"
  },
  "api/XGamingRuntime.XblPrivacyGetAvoidListCompleted.html": {
    "href": "api/XGamingRuntime.XblPrivacyGetAvoidListCompleted.html",
    "title": "Delegate XblPrivacyGetAvoidListCompleted | |",
    "keywords": "Delegate XblPrivacyGetAvoidListCompleted Namespace XGamingRuntime public delegate void XblPrivacyGetAvoidListCompleted(int hresult, ulong[] xuids) Parameters hresult int xuids ulong[]"
  },
  "api/XGamingRuntime.XblPrivacyGetMuteListCompleted.html": {
    "href": "api/XGamingRuntime.XblPrivacyGetMuteListCompleted.html",
    "title": "Delegate XblPrivacyGetMuteListCompleted | |",
    "keywords": "Delegate XblPrivacyGetMuteListCompleted Namespace XGamingRuntime public delegate void XblPrivacyGetMuteListCompleted(int hresult, ulong[] xuids) Parameters hresult int xuids ulong[]"
  },
  "api/XGamingRuntime.XblPrivacySetting.html": {
    "href": "api/XGamingRuntime.XblPrivacySetting.html",
    "title": "Enum XblPrivacySetting | |",
    "keywords": "Enum XblPrivacySetting Namespace XGamingRuntime public enum XblPrivacySetting : uint Fields AllowProfileViewing = 21 AllowUserCreatedContentViewing = 20 CanShareIdentity = 24 CollectLiveTvData = 15 CollectVoiceData = 8 CollectVoiceDataXboxOneFull = 23 CollectVoiceGameChatData = 28 CollectVoiceSearchData = 26 CollectXboxVideoData = 16 CommunicateDuringCrossNetworkPlay = 30 CommunicateUsingTextAndVoice = 3 CommunicateUsingVideo = 7 ShareActivityFeed = 29 ShareClubMembership = 27 ShareContentToExternalNetworks = 25 ShareExerciseInfo = 11 ShareFriendList = 1 ShareGameHistory = 2 ShareIdentity = 12 ShareIdentityInGame = 13 ShareIdentityTransitively = 17 ShareMusicHistory = 19 SharePresence = 4 ShareProfile = 5 ShareRecordedGameSessions = 14 ShareVideoAndMusicStatus = 6 ShareVideoHistory = 18 ShareXboxMusicActivity = 9 ShowRealTimeActivity = 22 Unknown = 0"
  },
  "api/XGamingRuntime.XblPrivilege.html": {
    "href": "api/XGamingRuntime.XblPrivilege.html",
    "title": "Enum XblPrivilege | |",
    "keywords": "Enum XblPrivilege Namespace XGamingRuntime public enum XblPrivilege : uint Fields AllowAddFriend = 255 AllowCommunications = 252 AllowIngameVoiceCommunications = 205 AllowMultiplayer = 254 AllowProfileViewing = 249 AllowVideoCommunications = 235 Unknown = 0"
  },
  "api/XGamingRuntime.XblProfileGetUserProfileCompleted.html": {
    "href": "api/XGamingRuntime.XblProfileGetUserProfileCompleted.html",
    "title": "Delegate XblProfileGetUserProfileCompleted | |",
    "keywords": "Delegate XblProfileGetUserProfileCompleted Namespace XGamingRuntime public delegate void XblProfileGetUserProfileCompleted(int hresult, XblUserProfile result) Parameters hresult int result XblUserProfile"
  },
  "api/XGamingRuntime.XblProfileGetUserProfilesCompleted.html": {
    "href": "api/XGamingRuntime.XblProfileGetUserProfilesCompleted.html",
    "title": "Delegate XblProfileGetUserProfilesCompleted | |",
    "keywords": "Delegate XblProfileGetUserProfilesCompleted Namespace XGamingRuntime public delegate void XblProfileGetUserProfilesCompleted(int hresult, XblUserProfile[] result) Parameters hresult int result XblUserProfile[]"
  },
  "api/XGamingRuntime.XblProfileGetUserProfilesForSocialGroupCompleted.html": {
    "href": "api/XGamingRuntime.XblProfileGetUserProfilesForSocialGroupCompleted.html",
    "title": "Delegate XblProfileGetUserProfilesForSocialGroupCompleted | |",
    "keywords": "Delegate XblProfileGetUserProfilesForSocialGroupCompleted Namespace XGamingRuntime public delegate void XblProfileGetUserProfilesForSocialGroupCompleted(int hresult, XblUserProfile[] result) Parameters hresult int result XblUserProfile[]"
  },
  "api/XGamingRuntime.XblRealTimeActivityCallbackToken.html": {
    "href": "api/XGamingRuntime.XblRealTimeActivityCallbackToken.html",
    "title": "Struct XblRealTimeActivityCallbackToken | |",
    "keywords": "Struct XblRealTimeActivityCallbackToken Namespace XGamingRuntime public struct XblRealTimeActivityCallbackToken Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields InteropHandlerId public int InteropHandlerId Field Value int InvalidHandlerId public const int InvalidHandlerId = 0 Field Value int Methods IsValid() public bool IsValid() Returns bool IsValid(int) public static bool IsValid(int interopHandlerId) Parameters interopHandlerId int Returns bool Reset() public void Reset()"
  },
  "api/XGamingRuntime.XblRealTimeActivityConnectionState.html": {
    "href": "api/XGamingRuntime.XblRealTimeActivityConnectionState.html",
    "title": "Enum XblRealTimeActivityConnectionState | |",
    "keywords": "Enum XblRealTimeActivityConnectionState Namespace XGamingRuntime public enum XblRealTimeActivityConnectionState : uint Fields Connected = 0 Connecting = 1 Disconnected = 2"
  },
  "api/XGamingRuntime.XblRelationshipFilter.html": {
    "href": "api/XGamingRuntime.XblRelationshipFilter.html",
    "title": "Enum XblRelationshipFilter | |",
    "keywords": "Enum XblRelationshipFilter Namespace XGamingRuntime public enum XblRelationshipFilter : uint Fields Favorite = 2 Favorites of the user Friends = 1 Friends of the user (user is following) Unknown = 0 Unknown"
  },
  "api/XGamingRuntime.XblRequestedStatistics.html": {
    "href": "api/XGamingRuntime.XblRequestedStatistics.html",
    "title": "Class XblRequestedStatistics | |",
    "keywords": "Class XblRequestedStatistics Namespace XGamingRuntime public class XblRequestedStatistics Inheritance object XblRequestedStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ServiceConfigurationId public string ServiceConfigurationId { get; } Property Value string Statistics public string[] Statistics { get; } Property Value string[] Methods Create(string, string[], out XblRequestedStatistics) public static int Create(string serviceConfigurationId, string[] statistics, out XblRequestedStatistics requestedStatistics) Parameters serviceConfigurationId string statistics string[] requestedStatistics XblRequestedStatistics Returns int"
  },
  "api/XGamingRuntime.XblSendInvitesCompletionCallback.html": {
    "href": "api/XGamingRuntime.XblSendInvitesCompletionCallback.html",
    "title": "Delegate XblSendInvitesCompletionCallback | |",
    "keywords": "Delegate XblSendInvitesCompletionCallback Namespace XGamingRuntime public delegate void XblSendInvitesCompletionCallback(int hresult, string[] inviteHandles) Parameters hresult int inviteHandles string[]"
  },
  "api/XGamingRuntime.XblServiceConfigurationStatistic.html": {
    "href": "api/XGamingRuntime.XblServiceConfigurationStatistic.html",
    "title": "Class XblServiceConfigurationStatistic | |",
    "keywords": "Class XblServiceConfigurationStatistic Namespace XGamingRuntime public class XblServiceConfigurationStatistic Inheritance object XblServiceConfigurationStatistic Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ServiceConfigurationId public string ServiceConfigurationId { get; } Property Value string Statistics public XblStatistic[] Statistics { get; } Property Value XblStatistic[]"
  },
  "api/XGamingRuntime.XblSessionChangedCallback.html": {
    "href": "api/XGamingRuntime.XblSessionChangedCallback.html",
    "title": "Delegate XblSessionChangedCallback | |",
    "keywords": "Delegate XblSessionChangedCallback Namespace XGamingRuntime public delegate void XblSessionChangedCallback(XblMultiplayerSessionChangeEventArgs eventArgs) Parameters eventArgs XblMultiplayerSessionChangeEventArgs"
  },
  "api/XGamingRuntime.XblSocialGroupType.html": {
    "href": "api/XGamingRuntime.XblSocialGroupType.html",
    "title": "Enum XblSocialGroupType | |",
    "keywords": "Enum XblSocialGroupType Namespace XGamingRuntime public enum XblSocialGroupType : uint Fields Favorites = 2 Social group for the people tagged as favorites. None = 0 No social group. People = 1 Social group for the people followed."
  },
  "api/XGamingRuntime.XblSocialHandle.html": {
    "href": "api/XGamingRuntime.XblSocialHandle.html",
    "title": "Struct XblSocialHandle | |",
    "keywords": "Struct XblSocialHandle Namespace XGamingRuntime public struct XblSocialHandle Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields interopHandle public nint interopHandle Field Value nint"
  },
  "api/XGamingRuntime.XblSocialManagerEvent.html": {
    "href": "api/XGamingRuntime.XblSocialManagerEvent.html",
    "title": "Class XblSocialManagerEvent | |",
    "keywords": "Class XblSocialManagerEvent Namespace XGamingRuntime public class XblSocialManagerEvent Inheritance object XblSocialManagerEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EventType public XblSocialManagerEventType EventType { get; } Property Value XblSocialManagerEventType Hr public int Hr { get; } Property Value int LoadedGroup public XblSocialManagerUserGroupHandle LoadedGroup { get; } Property Value XblSocialManagerUserGroupHandle User public XUserHandle User { get; } Property Value XUserHandle UsersAffected public XblSocialManagerUser[] UsersAffected { get; } Property Value XblSocialManagerUser[]"
  },
  "api/XGamingRuntime.XblSocialManagerEventType.html": {
    "href": "api/XGamingRuntime.XblSocialManagerEventType.html",
    "title": "Enum XblSocialManagerEventType | |",
    "keywords": "Enum XblSocialManagerEventType Namespace XGamingRuntime public enum XblSocialManagerEventType : uint Fields LocalUserAdded = 5 Social graph load complete from adding a local user PresenceChanged = 2 Users presence record has changed ProfilesChanged = 3 Users profile information has changed SocialRelationshipsChanged = 4 Relationship to users has changed SocialUserGroupLoaded = 6 Xbox Social User Group load complete (will only trigger for views that take a list of users) SocialUserGroupUpdated = 7 Social user group updated UnknownEvent = 8 Unknown UsersAddedToSocialGraph = 0 Users added to social graph UsersRemovedFromSocialGraph = 1 Users removed from social graph"
  },
  "api/XGamingRuntime.XblSocialManagerExtraDetailLevel.html": {
    "href": "api/XGamingRuntime.XblSocialManagerExtraDetailLevel.html",
    "title": "Enum XblSocialManagerExtraDetailLevel | |",
    "keywords": "Enum XblSocialManagerExtraDetailLevel Namespace XGamingRuntime [Flags] public enum XblSocialManagerExtraDetailLevel : uint Fields All = TitleHistoryLevel | PreferredColorLevel Add all extra detail NoExtraDetail = 0 Only get default PeopleHub information (presence, profile) PreferredColorLevel = 2 Add extra detail for the preferred color for the users TitleHistoryLevel = 1 Add extra detail for the title history for the users"
  },
  "api/XGamingRuntime.XblSocialManagerPresenceRecord.html": {
    "href": "api/XGamingRuntime.XblSocialManagerPresenceRecord.html",
    "title": "Class XblSocialManagerPresenceRecord | |",
    "keywords": "Class XblSocialManagerPresenceRecord Namespace XGamingRuntime public class XblSocialManagerPresenceRecord Inheritance object XblSocialManagerPresenceRecord Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PresenceTitleRecords public XblSocialManagerPresenceTitleRecord[] PresenceTitleRecords Field Value XblSocialManagerPresenceTitleRecord[] Properties UserState public XblPresenceUserState UserState { get; } Property Value XblPresenceUserState"
  },
  "api/XGamingRuntime.XblSocialManagerPresenceTitleRecord.html": {
    "href": "api/XGamingRuntime.XblSocialManagerPresenceTitleRecord.html",
    "title": "Class XblSocialManagerPresenceTitleRecord | |",
    "keywords": "Class XblSocialManagerPresenceTitleRecord Namespace XGamingRuntime public class XblSocialManagerPresenceTitleRecord Inheritance object XblSocialManagerPresenceTitleRecord Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DeviceType public XblPresenceDeviceType DeviceType { get; } Property Value XblPresenceDeviceType IsBroadcasting public bool IsBroadcasting { get; } Property Value bool IsPrimary public bool IsPrimary { get; } Property Value bool IsTitleActive public bool IsTitleActive { get; } Property Value bool PresenceText public string PresenceText { get; } Property Value string TitleId public uint TitleId { get; } Property Value uint"
  },
  "api/XGamingRuntime.XblSocialManagerUser.html": {
    "href": "api/XGamingRuntime.XblSocialManagerUser.html",
    "title": "Class XblSocialManagerUser | |",
    "keywords": "Class XblSocialManagerUser Namespace XGamingRuntime public class XblSocialManagerUser Inheritance object XblSocialManagerUser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DisplayName public string DisplayName { get; } Property Value string DisplayPicUrlRaw public string DisplayPicUrlRaw { get; } Property Value string Gamerscore public string Gamerscore { get; } Property Value string Gamertag public string Gamertag { get; } Property Value string IsFavorite public bool IsFavorite { get; } Property Value bool IsFollowedByCaller public bool IsFollowedByCaller { get; } Property Value bool IsFollowingUser public bool IsFollowingUser { get; } Property Value bool ModernGamertag public string ModernGamertag { get; } Property Value string ModernGamertagSuffix public string ModernGamertagSuffix { get; } Property Value string PreferredColor public XblPreferredColor PreferredColor { get; } Property Value XblPreferredColor PresenceRecord public XblSocialManagerPresenceRecord PresenceRecord { get; } Property Value XblSocialManagerPresenceRecord RealName public string RealName { get; } Property Value string TitleHistory public XblTitleHistory TitleHistory { get; } Property Value XblTitleHistory UniqueModernGamertag public string UniqueModernGamertag { get; } Property Value string UseAvatar public bool UseAvatar { get; } Property Value bool XboxUserId public ulong XboxUserId { get; } Property Value ulong"
  },
  "api/XGamingRuntime.XblSocialManagerUserGroupHandle.html": {
    "href": "api/XGamingRuntime.XblSocialManagerUserGroupHandle.html",
    "title": "Class XblSocialManagerUserGroupHandle | |",
    "keywords": "Class XblSocialManagerUserGroupHandle Namespace XGamingRuntime public class XblSocialManagerUserGroupHandle : EquatableHandle Inheritance object EquatableHandle XblSocialManagerUserGroupHandle Inherited Members EquatableHandle.Equals(object) EquatableHandle.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/XGamingRuntime.XblSocialRelationship.html": {
    "href": "api/XGamingRuntime.XblSocialRelationship.html",
    "title": "Struct XblSocialRelationship | |",
    "keywords": "Struct XblSocialRelationship Namespace XGamingRuntime public struct XblSocialRelationship Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields isFavorite public bool isFavorite Field Value bool isFollowingCaller public bool isFollowingCaller Field Value bool socialNetworks public string[] socialNetworks Field Value string[] xboxUserId public ulong xboxUserId Field Value ulong"
  },
  "api/XGamingRuntime.XblSocialRelationshipCallback.html": {
    "href": "api/XGamingRuntime.XblSocialRelationshipCallback.html",
    "title": "Delegate XblSocialRelationshipCallback | |",
    "keywords": "Delegate XblSocialRelationshipCallback Namespace XGamingRuntime public delegate void XblSocialRelationshipCallback(int hresult, XblSocialHandle socialHandle) Parameters hresult int socialHandle XblSocialHandle"
  },
  "api/XGamingRuntime.XblSocialRelationshipChangeEventArgs.html": {
    "href": "api/XGamingRuntime.XblSocialRelationshipChangeEventArgs.html",
    "title": "Struct XblSocialRelationshipChangeEventArgs | |",
    "keywords": "Struct XblSocialRelationshipChangeEventArgs Namespace XGamingRuntime public struct XblSocialRelationshipChangeEventArgs Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields callerXboxUserId public ulong callerXboxUserId Field Value ulong socialNotification public XblSocialNotificationType socialNotification Field Value XblSocialNotificationType xboxUserIds public ulong[] xboxUserIds Field Value ulong[]"
  },
  "api/XGamingRuntime.XblSocialRelationshipChangedCallback.html": {
    "href": "api/XGamingRuntime.XblSocialRelationshipChangedCallback.html",
    "title": "Delegate XblSocialRelationshipChangedCallback | |",
    "keywords": "Delegate XblSocialRelationshipChangedCallback Namespace XGamingRuntime public delegate void XblSocialRelationshipChangedCallback(XblSocialRelationshipChangeEventArgs eventArgs) Parameters eventArgs XblSocialRelationshipChangeEventArgs"
  },
  "api/XGamingRuntime.XblSocialRelationshipFilter.html": {
    "href": "api/XGamingRuntime.XblSocialRelationshipFilter.html",
    "title": "Enum XblSocialRelationshipFilter | |",
    "keywords": "Enum XblSocialRelationshipFilter Namespace XGamingRuntime public enum XblSocialRelationshipFilter : uint Fields All = 0 Favorite = 1 LegacyXboxLiveFriends = 2"
  },
  "api/XGamingRuntime.XblSocialUserGroupType.html": {
    "href": "api/XGamingRuntime.XblSocialUserGroupType.html",
    "title": "Enum XblSocialUserGroupType | |",
    "keywords": "Enum XblSocialUserGroupType Namespace XGamingRuntime public enum XblSocialUserGroupType : uint Fields FilterType = 0 Social user group based off of filters UserListType = 1 Social user group based off of list of users"
  },
  "api/XGamingRuntime.XblStatistic.html": {
    "href": "api/XGamingRuntime.XblStatistic.html",
    "title": "Class XblStatistic | |",
    "keywords": "Class XblStatistic Namespace XGamingRuntime public class XblStatistic Inheritance object XblStatistic Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties StatisticName public string StatisticName { get; } Property Value string StatisticType public string StatisticType { get; } Property Value string Value public string Value { get; } Property Value string"
  },
  "api/XGamingRuntime.XblStatisticChangeEventArgs.html": {
    "href": "api/XGamingRuntime.XblStatisticChangeEventArgs.html",
    "title": "Struct XblStatisticChangeEventArgs | |",
    "keywords": "Struct XblStatisticChangeEventArgs Namespace XGamingRuntime public struct XblStatisticChangeEventArgs Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields latestStatistic public XblStatistic latestStatistic Field Value XblStatistic serviceConfigurationId public string serviceConfigurationId Field Value string xboxUserId public ulong xboxUserId Field Value ulong"
  },
  "api/XGamingRuntime.XblStatisticChangedCallback.html": {
    "href": "api/XGamingRuntime.XblStatisticChangedCallback.html",
    "title": "Delegate XblStatisticChangedCallback | |",
    "keywords": "Delegate XblStatisticChangedCallback Namespace XGamingRuntime public delegate void XblStatisticChangedCallback(XblStatisticChangeEventArgs statisticChangeEventArgs) Parameters statisticChangeEventArgs XblStatisticChangeEventArgs"
  },
  "api/XGamingRuntime.XblStringVerifyStringCompleted.html": {
    "href": "api/XGamingRuntime.XblStringVerifyStringCompleted.html",
    "title": "Delegate XblStringVerifyStringCompleted | |",
    "keywords": "Delegate XblStringVerifyStringCompleted Namespace XGamingRuntime public delegate void XblStringVerifyStringCompleted(int hresult, XblVerifyStringResult result) Parameters hresult int result XblVerifyStringResult"
  },
  "api/XGamingRuntime.XblStringVerifyStringsCompleted.html": {
    "href": "api/XGamingRuntime.XblStringVerifyStringsCompleted.html",
    "title": "Delegate XblStringVerifyStringsCompleted | |",
    "keywords": "Delegate XblStringVerifyStringsCompleted Namespace XGamingRuntime public delegate void XblStringVerifyStringsCompleted(int hresult, XblVerifyStringResult[] result) Parameters hresult int result XblVerifyStringResult[]"
  },
  "api/XGamingRuntime.XblSubscriptionLostCallback.html": {
    "href": "api/XGamingRuntime.XblSubscriptionLostCallback.html",
    "title": "Delegate XblSubscriptionLostCallback | |",
    "keywords": "Delegate XblSubscriptionLostCallback Namespace XGamingRuntime public delegate void XblSubscriptionLostCallback()"
  },
  "api/XGamingRuntime.XblTitleHistory.html": {
    "href": "api/XGamingRuntime.XblTitleHistory.html",
    "title": "Class XblTitleHistory | |",
    "keywords": "Class XblTitleHistory Namespace XGamingRuntime public class XblTitleHistory Inheritance object XblTitleHistory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HasUserPlayed public bool HasUserPlayed { get; } Property Value bool LastTimeUserPlayed public DateTime LastTimeUserPlayed { get; } Property Value DateTime"
  },
  "api/XGamingRuntime.XblTitleManagedStatType.html": {
    "href": "api/XGamingRuntime.XblTitleManagedStatType.html",
    "title": "Enum XblTitleManagedStatType | |",
    "keywords": "Enum XblTitleManagedStatType Namespace XGamingRuntime public enum XblTitleManagedStatType : uint Fields Number = 0 String = 1"
  },
  "api/XGamingRuntime.XblTitleManagedStatistic.html": {
    "href": "api/XGamingRuntime.XblTitleManagedStatistic.html",
    "title": "Class XblTitleManagedStatistic | |",
    "keywords": "Class XblTitleManagedStatistic Namespace XGamingRuntime public class XblTitleManagedStatistic Inheritance object XblTitleManagedStatistic Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors XblTitleManagedStatistic() public XblTitleManagedStatistic() XblTitleManagedStatistic(string, double) public XblTitleManagedStatistic(string statisticName, double statisticValue) Parameters statisticName string statisticValue double XblTitleManagedStatistic(string, string) public XblTitleManagedStatistic(string statisticName, string statisticValue) Parameters statisticName string statisticValue string Properties NumberValue public double NumberValue { get; set; } Property Value double StatisticName public string StatisticName { get; set; } Property Value string StatisticType public XblTitleManagedStatType StatisticType { get; set; } Property Value XblTitleManagedStatType StringValue public string StringValue { get; set; } Property Value string"
  },
  "api/XGamingRuntime.XblTitleManagedStatsOperationCompleted.html": {
    "href": "api/XGamingRuntime.XblTitleManagedStatsOperationCompleted.html",
    "title": "Delegate XblTitleManagedStatsOperationCompleted | |",
    "keywords": "Delegate XblTitleManagedStatsOperationCompleted Namespace XGamingRuntime public delegate void XblTitleManagedStatsOperationCompleted(int hresult) Parameters hresult int"
  },
  "api/XGamingRuntime.XblTournamentArbitrationStatus.html": {
    "href": "api/XGamingRuntime.XblTournamentArbitrationStatus.html",
    "title": "Enum XblTournamentArbitrationStatus | |",
    "keywords": "Enum XblTournamentArbitrationStatus Namespace XGamingRuntime Deprecated public enum XblTournamentArbitrationStatus : uint Fields Complete = 2 InProgress = 1 Incomplete = 4 Joining = 5 Playing = 3 Waiting = 0"
  },
  "api/XGamingRuntime.XblTournamentGameResult.html": {
    "href": "api/XGamingRuntime.XblTournamentGameResult.html",
    "title": "Enum XblTournamentGameResult | |",
    "keywords": "Enum XblTournamentGameResult Namespace XGamingRuntime Deprecated public enum XblTournamentGameResult : uint Fields Draw = 3 Loss = 2 NoContest = 0 NoShow = 5 Rank = 4 Win = 1"
  },
  "api/XGamingRuntime.XblTournamentGameResultWithRank.html": {
    "href": "api/XGamingRuntime.XblTournamentGameResultWithRank.html",
    "title": "Class XblTournamentGameResultWithRank | |",
    "keywords": "Class XblTournamentGameResultWithRank Namespace XGamingRuntime Deprecated public class XblTournamentGameResultWithRank Inheritance object XblTournamentGameResultWithRank Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ranking public ulong Ranking { get; } Property Value ulong Result public XblTournamentGameResult Result { get; } Property Value XblTournamentGameResult"
  },
  "api/XGamingRuntime.XblTournamentRegistrationReason.html": {
    "href": "api/XGamingRuntime.XblTournamentRegistrationReason.html",
    "title": "Enum XblTournamentRegistrationReason | |",
    "keywords": "Enum XblTournamentRegistrationReason Namespace XGamingRuntime Deprecated public enum XblTournamentRegistrationReason : uint Fields MemberAlreadyRegistered = 2 RegistrationClosed = 1 TeamEliminated = 4 TournamentCompleted = 5 TournamentFull = 3 Unknown = 0"
  },
  "api/XGamingRuntime.XblTournamentRegistrationState.html": {
    "href": "api/XGamingRuntime.XblTournamentRegistrationState.html",
    "title": "Enum XblTournamentRegistrationState | |",
    "keywords": "Enum XblTournamentRegistrationState Namespace XGamingRuntime Deprecated public enum XblTournamentRegistrationState : uint Fields Completed = 5 Pending = 1 Registered = 4 Rejected = 3 Unknown = 0 Withdrawn = 2"
  },
  "api/XGamingRuntime.XblTournamentTeamResult.html": {
    "href": "api/XGamingRuntime.XblTournamentTeamResult.html",
    "title": "Class XblTournamentTeamResult | |",
    "keywords": "Class XblTournamentTeamResult Namespace XGamingRuntime Deprecated public class XblTournamentTeamResult Inheritance object XblTournamentTeamResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GameResult public XblTournamentGameResultWithRank GameResult { get; } Property Value XblTournamentGameResultWithRank Team public string Team { get; } Property Value string"
  },
  "api/XGamingRuntime.XblUserProfile.html": {
    "href": "api/XGamingRuntime.XblUserProfile.html",
    "title": "Class XblUserProfile | |",
    "keywords": "Class XblUserProfile Namespace XGamingRuntime public class XblUserProfile Inheritance object XblUserProfile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AppDisplayName public string AppDisplayName { get; } Property Value string AppDisplayPictureResizeUri public string AppDisplayPictureResizeUri { get; } Property Value string GameDisplayName public string GameDisplayName { get; } Property Value string GameDisplayPictureResizeUri public string GameDisplayPictureResizeUri { get; } Property Value string Gamerscore public string Gamerscore { get; } Property Value string Gamertag public string Gamertag { get; } Property Value string ModernGamertag public string ModernGamertag { get; } Property Value string ModernGamertagSuffix public string ModernGamertagSuffix { get; } Property Value string UniqueModernGamertag public string UniqueModernGamertag { get; } Property Value string XboxUserId public ulong XboxUserId { get; } Property Value ulong"
  },
  "api/XGamingRuntime.XblUserStatisticsGetMultipleUserStatisticsCompleted.html": {
    "href": "api/XGamingRuntime.XblUserStatisticsGetMultipleUserStatisticsCompleted.html",
    "title": "Delegate XblUserStatisticsGetMultipleUserStatisticsCompleted | |",
    "keywords": "Delegate XblUserStatisticsGetMultipleUserStatisticsCompleted Namespace XGamingRuntime public delegate void XblUserStatisticsGetMultipleUserStatisticsCompleted(int hresult, XblUserStatisticsResult[] results) Parameters hresult int results XblUserStatisticsResult[]"
  },
  "api/XGamingRuntime.XblUserStatisticsGetMultipleUserStatisticsForMultipleServiceConfigurationsCompleted.html": {
    "href": "api/XGamingRuntime.XblUserStatisticsGetMultipleUserStatisticsForMultipleServiceConfigurationsCompleted.html",
    "title": "Delegate XblUserStatisticsGetMultipleUserStatisticsForMultipleServiceConfigurationsCompleted | |",
    "keywords": "Delegate XblUserStatisticsGetMultipleUserStatisticsForMultipleServiceConfigurationsCompleted Namespace XGamingRuntime public delegate void XblUserStatisticsGetMultipleUserStatisticsForMultipleServiceConfigurationsCompleted(int hresult, XblUserStatisticsResult[] results) Parameters hresult int results XblUserStatisticsResult[]"
  },
  "api/XGamingRuntime.XblUserStatisticsGetSingleUserStatisticCompleted.html": {
    "href": "api/XGamingRuntime.XblUserStatisticsGetSingleUserStatisticCompleted.html",
    "title": "Delegate XblUserStatisticsGetSingleUserStatisticCompleted | |",
    "keywords": "Delegate XblUserStatisticsGetSingleUserStatisticCompleted Namespace XGamingRuntime public delegate void XblUserStatisticsGetSingleUserStatisticCompleted(int hresult, XblUserStatisticsResult result) Parameters hresult int result XblUserStatisticsResult"
  },
  "api/XGamingRuntime.XblUserStatisticsGetSingleUserStatisticsCompleted.html": {
    "href": "api/XGamingRuntime.XblUserStatisticsGetSingleUserStatisticsCompleted.html",
    "title": "Delegate XblUserStatisticsGetSingleUserStatisticsCompleted | |",
    "keywords": "Delegate XblUserStatisticsGetSingleUserStatisticsCompleted Namespace XGamingRuntime public delegate void XblUserStatisticsGetSingleUserStatisticsCompleted(int hresult, XblUserStatisticsResult result) Parameters hresult int result XblUserStatisticsResult"
  },
  "api/XGamingRuntime.XblUserStatisticsResult.html": {
    "href": "api/XGamingRuntime.XblUserStatisticsResult.html",
    "title": "Class XblUserStatisticsResult | |",
    "keywords": "Class XblUserStatisticsResult Namespace XGamingRuntime public class XblUserStatisticsResult Inheritance object XblUserStatisticsResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ServiceConfigStatistics public XblServiceConfigurationStatistic[] ServiceConfigStatistics { get; } Property Value XblServiceConfigurationStatistic[] XboxUserId public ulong XboxUserId { get; } Property Value ulong"
  },
  "api/XGamingRuntime.XblVerifyStringResult.html": {
    "href": "api/XGamingRuntime.XblVerifyStringResult.html",
    "title": "Class XblVerifyStringResult | |",
    "keywords": "Class XblVerifyStringResult Namespace XGamingRuntime public class XblVerifyStringResult Inheritance object XblVerifyStringResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FirstOffendingSubstring public string FirstOffendingSubstring { get; } Property Value string ResultCode public XblVerifyStringResultCode ResultCode { get; } Property Value XblVerifyStringResultCode"
  },
  "api/XGamingRuntime.XblVerifyStringResultCode.html": {
    "href": "api/XGamingRuntime.XblVerifyStringResultCode.html",
    "title": "Enum XblVerifyStringResultCode | |",
    "keywords": "Enum XblVerifyStringResultCode Namespace XGamingRuntime public enum XblVerifyStringResultCode : uint Fields Offensive = 1 The string contains offensive content. Success = 0 No issues were found with the string. TooLong = 2 The string is too long to verify. UnknownError = 3 An unknown error was encountered during string verification."
  },
  "api/XGamingRuntime.XblWriteSessionByHandleCallback.html": {
    "href": "api/XGamingRuntime.XblWriteSessionByHandleCallback.html",
    "title": "Delegate XblWriteSessionByHandleCallback | |",
    "keywords": "Delegate XblWriteSessionByHandleCallback Namespace XGamingRuntime public delegate void XblWriteSessionByHandleCallback(int hresult, XblMultiplayerSessionHandle sessionHandle) Parameters hresult int sessionHandle XblMultiplayerSessionHandle"
  },
  "api/XGamingRuntime.XblWriteSessionStatus.html": {
    "href": "api/XGamingRuntime.XblWriteSessionStatus.html",
    "title": "Enum XblWriteSessionStatus | |",
    "keywords": "Enum XblWriteSessionStatus Namespace XGamingRuntime public enum XblWriteSessionStatus : uint Fields AccessDenied = 1 Conflict = 3 Created = 2 HandleNotFound = 4 OutOfSync = 5 SessionDeleted = 6 Unknown = 0 Updated = 7"
  },
  "api/XGamingRuntime.html": {
    "href": "api/XGamingRuntime.html",
    "title": "Namespace XGamingRuntime | |",
    "keywords": "Namespace XGamingRuntime Classes EquatableHandle HR SDK SDK.XBL XClosedCaptionProperties XColor XGameSaveBlob XGameSaveBlobInfo XGameSaveContainerHandle XGameSaveContainerInfo XGameSaveProviderHandle XGameSaveUpdateHandle XGameUiWebAuthenticationResultData XPackageDetails XPackageFeature XPackageInstallationMonitorHandle XPackageInstallationProgress XPackageMountHandle XPackageWriteStats XRegistrationToken XStoreAddonLicense XStoreAvailability XStoreCanAcquireLicenseResult XStoreCollectionData XStoreConsumableResult XStoreContext XStoreGameLicense XStoreImage XStoreLicense XStorePackageUpdate XStorePrice XStoreProduct XStoreQueryResult XStoreRateAndReviewResult XStoreSku XStoreSubscriptionInfo XStoreVideo XUserGetTokenAndSignatureUtf16Data XUserGetTokenAndSignatureUtf16HttpHeader XUserHandle XUserSignOutDeferralHandle XVersion XblAchievement XblAchievementMediaAsset XblAchievementProgression XblAchievementRequirement XblAchievementReward XblAchievementTimeWindow XblAchievementTitleAssociation XblAchievementsResultHandle XblContextHandle XblDeviceToken XblGuid XblHttpCallHandle XblLeaderboardColumn XblLeaderboardQuery XblLeaderboardResult XblLeaderboardRow XblMultiplayerActivityDetails XblMultiplayerActivityInfo XblMultiplayerActivityRecentPlayerUpdate XblMultiplayerConnectionAddressDeviceTokenPair XblMultiplayerEvent XblMultiplayerEventArgsHandle XblMultiplayerManagerMember XblMultiplayerMatchmakingServer XblMultiplayerMemberInitialization XblMultiplayerPeerToHostRequirements XblMultiplayerPeerToPeerRequirements XblMultiplayerPerformQoSMeasurementsArgs XblMultiplayerRole XblMultiplayerRoleType XblMultiplayerSearchHandle XblMultiplayerSessionCapabilities XblMultiplayerSessionChangeEventArgs XblMultiplayerSessionConstants XblMultiplayerSessionHandle XblMultiplayerSessionInfo XblMultiplayerSessionInitArgs XblMultiplayerSessionInitializationInfo XblMultiplayerSessionMember XblMultiplayerSessionMemberRole XblMultiplayerSessionNumberAttribute XblMultiplayerSessionProperties XblMultiplayerSessionQuery XblMultiplayerSessionQueryResult XblMultiplayerSessionReference XblMultiplayerSessionStringAttribute XblMultiplayerSessionTag XblPermissionCheckResult XblPermissionDenyReasonDetails XblPreferredColor XblPresenceBroadcastRecord XblPresenceDeviceRecord XblPresenceQueryFilters XblPresenceRecordHandle XblPresenceRichPresenceIds XblPresenceTitleRecord XblRequestedStatistics XblServiceConfigurationStatistic XblSocialManagerEvent XblSocialManagerPresenceRecord XblSocialManagerPresenceTitleRecord XblSocialManagerUser XblSocialManagerUserGroupHandle XblStatistic XblTitleHistory XblTitleManagedStatistic XblTournamentGameResultWithRank Deprecated XblTournamentTeamResult Deprecated XblUserProfile XblUserStatisticsResult XblVerifyStringResult Structs XUserLocalId XblHopperStatisticsResponse XblMatchTicket XblMatchTicketDetailsResponse XblMultiplayerHandlerCallbackToken XblRealTimeActivityCallbackToken XblSocialHandle XblSocialRelationship XblSocialRelationshipChangeEventArgs XblStatisticChangeEventArgs Enums XClosedCaptionFontEdgeAttribute XClosedCaptionFontStyle XGameUiMessageDialogButton XGameUiNotificationPositionHint XGameUiTextEntryInputScope XHighContrastMode XPackageChunkAvailability XPackageChunkSelectorType XPackageEnumerationScope XPackageKind XSpeechToTextPositionHint XSpeechToTextType XStoreCanLicenseStatus XStoreDurationUnit XStoreProductKind XUserAddOptions XUserAgeGroup XUserChangeEvent XUserGamerPictureSize XUserGamertagComponent XUserGetTokenAndSignatureOptions XUserPrivilege XUserPrivilegeDenyReason XUserPrivilegeOptions XUserState XblAchievementMediaAssetType XblAchievementOrderBy XblAchievementParticipationType XblAchievementProgressState XblAchievementRewardType XblAchievementType XblAnonymousUserType XblErrorCondition XblHresult XblHttpCallResponseBodyType XblLeaderboardQueryType XblLeaderboardSortOrder XblLeaderboardStatType XblMatchmakingStatus XblMultiplayerActivityEncounterType XblMultiplayerActivityJoinRestriction XblMultiplayerActivityPlatform XblMultiplayerEventType XblMultiplayerInitializationStage XblMultiplayerJoinability XblMultiplayerMatchStatus XblMultiplayerMeasurementFailure XblMultiplayerMetrics XblMultiplayerSessionChangeTypes XblMultiplayerSessionMemberStatus XblMultiplayerSessionRestriction XblMultiplayerSessionStatus XblMultiplayerSessionType XblMultiplayerSessionVisibility XblMultiplayerSessionWriteMode XblMutableRoleSettings XblNetworkAddressTranslationSetting XblPermission XblPermissionDenyReason XblPresenceBroadcastProvider XblPresenceDetailLevel XblPresenceDeviceType XblPresenceFilter XblPresenceMediaIdType XblPresenceTitleState XblPresenceTitleViewState XblPresenceUserState XblPreserveSessionMode XblPrivacySetting XblPrivilege XblRealTimeActivityConnectionState XblRelationshipFilter XblSocialGroupType XblSocialManagerEventType XblSocialManagerExtraDetailLevel XblSocialRelationshipFilter XblSocialUserGroupType XblTitleManagedStatType XblTournamentArbitrationStatus Deprecated XblTournamentGameResult Deprecated XblTournamentRegistrationReason Deprecated XblTournamentRegistrationState Deprecated XblVerifyStringResultCode XblWriteSessionStatus Delegates SDK.XBL.XblAchievementsGetAchievementResult SDK.XBL.XblAchievementsGetAchievementsForTitleIdResult SDK.XBL.XblAchievementsResultGetNextResult SDK.XBL.XblAchievementsUpdateAchievementForTitleIdResult SDK.XBL.XblAchievementsUpdateAchievementResult SDK.XBL.XblCleanupResult SDK.XBL.XblMultiplayerConnectionIdChangedHandler SDK.XBL.XblMultiplayerCreateSearchHandleResult SDK.XBL.XblMultiplayerDeleteSearchHandleResult SDK.XBL.XblMultiplayerGetActivitiesWithPropertiesResult SDK.XBL.XblMultiplayerGetSearchHandlesResult SDK.XBL.XblMultiplayerQuerySessionsResult SDK.XBL.XblMultiplayerSessionChangedHandler SDK.XBL.XblMultiplayerSessionSubscriptionLostHandler SDK.XBL.XblMultiplayerSetTransferHandleResult SDK.XBL.XblMultiplayerWriteSessionHandleResult SDK.XStoreDownloadAndInstallPackageUpdatesCompleted SDK.XStoreDownloadAndInstallPackagesCompleted SDK.XStoreDownloadPackageUpdatesCompleted SDK.XStoreGetUserCollectionsIdCompleted SDK.XStoreGetUserPurchaseIdCompleted SDK.XStoreQueryConsumableBalanceRemainingCompleted SDK.XStoreQueryGameAndDlcPackageUpdatesCompleted SDK.XStoreReportConsumableFulfillmentCompleted SDK.XStoreShowAssociatedProductsPageUICompleted SDK.XStoreShowProductPageUICompleted SDK.XStoreShowPurchaseUICompleted SDK.XStoreShowRateAndReviewUICompleted SDK.XStoreShowRedeemTokenUICompleted XGameInviteEventCallback XGameSaveDeleteContainerCompleted XGameSaveGetRemainingQuotaCompleted XGameSaveInitializeProviderCompleted XGameSaveReadBlobDataCompleted XGameSaveSubmitUpdateCompleted XGameUiShowAchievementsCompleted XGameUiShowErrorDialogCompleted XGameUiShowMessageDialogCompleted XGameUiShowPlayerPickerAsyncCompleted XGameUiShowPlayerProfileCardAsyncCompleted XGameUiShowSendGameInviteAsyncCompleted XGameUiShowTextEntryAsyncCompleted XGameUiShowWebAuthenticationAsyncCompleted XPackageInstallationProgressCallback XPackageInstalledCallback XStoreAcquireLicenseForDurablesAsync XStoreAcquireLicenseForPackageCompleted XStoreCanAcquireLicenseForPackageCompleted XStoreCanAcquireLicenseForStoreIdCompleted XStoreGameLicenseChangedCallback XStorePackageLicenseLostCallback XStoreQueryAddOnLicensesCompleted XStoreQueryComplete XStoreQueryGameLicenseCompleted XStoreQueryLicenseTokenCompleted XUserAddCompleted XUserChangeEventCallback XUserGetGamerPictureCompleted XUserGetTokenAndSignatureUtf16Result XUserResolveIssueWithUiUtf16Result XUserResolvePrivilegeWithUiCompleted XblActivityCompletionCallback XblConnectionIdChangedCallback XblConnectionResyncCallback XblConnectionStateChangeCallback XblGetSessionCallback XblHttpCallPerformCompleted XblLeaderboardGetLeaderboardCompleted XblLeaderboardGetNextCompleted XblMatchmakingCreateTicketCallback XblMatchmakingDeleteTicketCallback XblMatchmakingStatisticsCallback XblMatchmakingTicketDetailsCallback XblMultiplayerActivityGetActivityCompleted XblMultiplayerActivityOperationCompleted XblPresenceGetPresenceCompleted XblPresenceGetPresenceForMultipleUsersCompleted XblPresenceGetPresenceForSocialGroupCompleted XblPresenceSetPresenceCompleted XblPrivacyBatchCheckPermissionCompleted XblPrivacyCheckPermissionCompleted XblPrivacyGetAvoidListCompleted XblPrivacyGetMuteListCompleted XblProfileGetUserProfileCompleted XblProfileGetUserProfilesCompleted XblProfileGetUserProfilesForSocialGroupCompleted XblSendInvitesCompletionCallback XblSessionChangedCallback XblSocialRelationshipCallback XblSocialRelationshipChangedCallback XblStatisticChangedCallback XblStringVerifyStringCompleted XblStringVerifyStringsCompleted XblSubscriptionLostCallback XblTitleManagedStatsOperationCompleted XblUserStatisticsGetMultipleUserStatisticsCompleted XblUserStatisticsGetMultipleUserStatisticsForMultipleServiceConfigurationsCompleted XblUserStatisticsGetSingleUserStatisticCompleted XblUserStatisticsGetSingleUserStatisticsCompleted XblWriteSessionByHandleCallback"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| |",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "| |",
    "keywords": ""
  },
  "index.html": {
    "href": "index.html",
    "title": "| |",
    "keywords": "This page redirects to the manual."
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| |",
    "keywords": "MIT License Copyright (c) [year] [fullname] Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "| |",
    "keywords": ""
  }
}